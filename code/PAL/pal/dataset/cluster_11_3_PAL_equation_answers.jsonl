{"dataset_version": "2023-07-07", "queId": "24e6a79cbcf3471baf6993ecdd2917eb", "difficulty": "3", "qtype": "short_answer", "problem": "David had a total of $$40$$ notes. The notes were either $$$2$$ or $$$10$$ notes. After he spent $$40$$\\% of the $$$10$$ notes and $$25$$\\% of the $$$2$$ notes on a gift, he had~$\\tfrac{4}{5}$~as many $$$10$$ notes as $$$2$$ notes left. How much did the gift cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "90.0000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of $10 notes as `T` and the number of $2 notes as `D`.\n\nFrom the problem, we have the following information:\n\n1. David had a total of 40 notes, which gives us the equation:\n   `T + D = 40`\n\n2. He spent 40% of the $10 notes and 25% of the $2 notes on a gift. This means he spent `0.4T` of the $10 notes and `0.25D` of the $2 notes.\n\n3. After spending, he had $\\frac{4}{5}$ as many $10 notes as $2 notes left. This means:\n   `(T - 0.4T) = (4/5) * (D - 0.25D)`\n\n4. We need to find the cost of the gift, which is the sum of the value of the notes he spent:\n   `Gift Cost = 10 * 0.4T + 2 * 0.25D`\n\nNow we can translate these into equations:\n\n1) `T + D = 40`\n2) `0.6T = (4/5) * 0.75D`\n3) `Gift Cost = 10 * 0.4T + 2 * 0.25D`\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    T, D = symbols('T D')\n\n    # Equations based on the problem statement\n    eq1 = Eq(T + D, 40)\n    eq2 = Eq(0.6*T, (4/5) * 0.75*D)\n\n    # Solve the system of equations for T and D\n    solution = solve((eq1, eq2), (T, D))\n    T_value = solution[T]\n    D_value = solution[D]\n\n    # Calculate the cost of the gift\n    gift_cost = 10 * 0.4 * T_value + 2 * 0.25 * D_value\n\n    # Return the final answer\n    return gift_cost\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the equations and return the cost of the gift that David spent."]}
{"dataset_version": "2023-07-07", "queId": "7f06cc0235094faaa81a0a2fb9cab606", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam and Peter had some stickers in the ratio 7 : 5. Sam and Peter each gave 20\\% of their stivkers to John. As a result, John's stickers increased by 80\\%. If Sam had 20 stickers more than John in the end, how many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "500.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Sam had originally as `S`, the number of stickers Peter had originally as `P`, and the number of stickers John had originally as `J`.\n\nFrom the problem, we have the following information:\n\n1. The ratio of Sam's stickers to Peter's stickers is 7:5, so we can write:\n   `S / P = 7 / 5`\n\n2. Sam and Peter each gave 20% of their stickers to John. This means Sam gave `0.20 * S` stickers to John, and Peter gave `0.20 * P` stickers to John.\n\n3. After giving away the stickers, John's stickers increased by 80%. This means the total number of stickers John received is equal to `0.80 * J`. So we can write:\n   `0.20 * S + 0.20 * P = 0.80 * J`\n\n4. In the end, Sam had 20 stickers more than John. After giving away stickers, Sam has `S - 0.20 * S` stickers left, and John has `J + 0.20 * S + 0.20 * P` stickers. So we can write:\n   `S - 0.20 * S = J + 0.20 * S + 0.20 * P + 20`\n\nNow we have a system of three equations:\n1) `S / P = 7 / 5`\n2) `0.20 * S + 0.20 * P = 0.80 * J`\n3) `0.80 * S = J + 0.20 * S + 0.20 * P + 20`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    S, P, J = symbols('S P J')\n\n    # Equation 1: Ratio of Sam's to Peter's stickers\n    eq1 = Eq(S / P, 7 / 5)\n\n    # Equation 2: Stickers given to John by Sam and Peter\n    eq2 = Eq(0.20 * S + 0.20 * P, 0.80 * J)\n\n    # Equation 3: Sam has 20 more stickers than John after giving away\n    eq3 = Eq(0.80 * S, J + 0.20 * S + 0.20 * P + 20)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (S, P, J))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and uses the sympy library to solve the system of equations. The final result will be the number of stickers Peter had at first."]}
{"dataset_version": "2023-07-07", "queId": "707f06cacc044e1d85aef697dea2c32f", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Single Base}  65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "22.9090909090909", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of animals initially in the farm as `A`, and the number of goats initially as `G`. Since 65% of the animals were cows, the number of cows initially would be `0.65A`. The rest, which are goats, would be `A - 0.65A = 0.35A`.\n\nAfter 240 more cows and goats were added, the total number of animals became `A + 240`. The number of goats doubled, so the new number of goats is `2G`. The percentage of cows increased by 20%, so the new percentage of cows is 65% + 20% = 85%. Therefore, the number of cows is now `0.85(A + 240)`.\n\nSince the number of goats doubled, we can also express `G` as half of the new number of goats: `G = 2G / 2`.\n\nWe can now set up the following equations:\n\n1) Initially, the number of goats is 35% of the total number of animals: `G = 0.35A`\n2) After the addition of 240 animals, the number of goats doubled: `2G = A + 240 - 0.85(A + 240)`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, G = symbols('A G')\n\n    # Equation 1: Initial number of goats is 35% of total animals\n    eq1 = Eq(G, 0.35 * A)\n\n    # Equation 2: After addition, number of goats doubled and cows are 85% of total\n    eq2 = Eq(2 * G, A + 240 - 0.85 * (A + 240))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, G))\n    result = solution[G]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables and equations, solves the system of equations, and returns the initial number of goats on the farm."]}
{"dataset_version": "2023-07-07", "queId": "19d110feae03410cb8fbd2510aacfe2a", "difficulty": "3", "qtype": "short_answer", "problem": "P can complete a job in 12 days working 8 hours a day. Q can complete the same job in 8 days working 10 hours a day. If both P and Q work together, working 8 hours a day, how many days can they complete the job?（⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "5.45454545454545", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total work by `W`.\n\nP's work rate is `W / (12 * 8)` because P completes the work in 12 days working 8 hours a day.\nQ's work rate is `W / (8 * 10)` because Q completes the work in 8 days working 10 hours a day.\n\nWhen P and Q work together for `d` days, working 8 hours a day, the total work done by them is `(W / (12 * 8) + W / (8 * 10)) * 8 * d`.\n\nThe equation to find the number of days `d` they need to complete the job together is:\n`(W / (12 * 8) + W / (8 * 10)) * 8 * d = W`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    d = symbols('d')\n    W = 1  # Assume total work W is 1 unit for simplicity\n\n    # P's work rate\n    P_rate = W / (12 * 8)\n    # Q's work rate\n    Q_rate = W / (8 * 10)\n\n    # Equation for total work done by P and Q together\n    eq = Eq((P_rate + Q_rate) * 8 * d, W)\n\n    # Solve the equation for d\n    result = solve(eq, d)[0]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the number of days `d` that P and Q need to complete the job together, working 8 hours a day."]}
{"dataset_version": "2023-07-07", "queId": "250641e98bbf4da6a3ad1c67bad85305", "difficulty": "3", "qtype": "short_answer", "problem": "65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of animals initially in the farm as `A`, the number of cows as `C`, and the number of goats as `G`.\n\nFrom the problem, we have the following information:\n\n1. 65% of the animals were cows, so `C = 0.65A`.\n2. The rest were goats, so `G = A - C`.\n3. When 240 more animals (cows and goats) were added, the total number of animals became `A + 240`.\n4. The percentage of cows increased by 20%, so the new percentage of cows is 65% + 20% = 85%. Therefore, the new number of cows is `0.85(A + 240)`.\n5. The number of goats doubled, so the new number of goats is `2G`.\n\nWe can now set up the equations:\n\n1) `C = 0.65A`\n2) `G = A - C`\n3) `0.85(A + 240) = C + 240` (since the number of cows increased by 240)\n4) `2G = G + 240` (since the number of goats doubled)\n\nWe can simplify equation 4 to find `G`:\n\n4) `2G = G + 240` => `G = 240`\n\nNow we can use this value of `G` to find `A` and `C`.\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, C, G = symbols('A C G')\n\n    # Given equations\n    eq1 = Eq(C, 0.65 * A)          # Equation for the number of cows initially\n    eq2 = Eq(G, A - C)             # Equation for the number of goats initially\n    eq3 = Eq(0.85 * (A + 240), C + 240)  # Equation after adding 240 animals and the increase in cow percentage\n    eq4 = Eq(2 * G, G + 240)       # Equation after the number of goats doubled\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3, eq4), (A, C, G))\n    result = solution[G]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the system of equations and return the number of goats that were in the farm at first."]}
{"dataset_version": "2023-07-07", "queId": "af4a495ebf5c4ddcacec30bac10e45e8", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ has fewer than $$40$$ cookies. If $$A$$ puts $$6$$ cookies into each box, she will have $$5$$ cookies left. If $$A$$ puts $$5$$ cookies into each box, she will be short of $$3$$ cookies. How many cookies does $$A$$ have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "17", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of cookies that A has as `C`.\n\nWhen A puts 6 cookies into each box and has 5 cookies left, we can express this as:\nC = 6n + 5\nwhere n is the number of boxes.\n\nWhen A puts 5 cookies into each box and is short of 3 cookies, we can express this as:\nC + 3 = 5m\nwhere m is the number of boxes.\n\nWe also know that A has fewer than 40 cookies, so:\nC < 40\n\nNow we have a system of equations and an inequality:\n1) `C = 6n + 5`\n2) `C + 3 = 5m`\n3) `C < 40`\n\n## Step 2: Solve Equations Using Python Code:\n\nTo solve these equations, we will use Python code to iterate through possible values of C and find the one that satisfies both equations and the inequality.\n\n```python\ndef solution():\n    # Iterate through possible values of C\n    for C in range(40):\n        # Check if C satisfies both equations\n        if (C - 5) % 6 == 0 and (C + 3) % 5 == 0:\n            # Return the final answer\n            return C\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will iterate through all possible values of C from 0 to 39 (since A has fewer than 40 cookies) and check for each value whether it satisfies both conditions given in the problem. When it finds a value that satisfies both conditions, it returns that value as the number of cookies A has."]}
{"dataset_version": "2023-07-07", "queId": "a16e80d24e034bddb8280d950f5a08b1", "difficulty": "3", "qtype": "short_answer", "problem": "Miss Jenny is separating some candies for class A and class B. If each student in class A gets $4$ candies, $20$ more candies are needed. If each student in class B can get $6$ candies, there will be $16$ candies left. It is known that the number of students in class A is twice of class B. How many candies does Miss Jenny have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Distribution Problems"], "answer": "4", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of students in class A as `2B` (since it's twice the number of students in class B), and the number of students in class B as `B`. Let `C` be the total number of candies Miss Jenny has.\n\nWhen each student in class A gets 4 candies, 20 more candies are needed. This means the total number of candies required for class A is `4 * 2B + 20`.\n\nWhen each student in class B gets 6 candies, there are 16 candies left. This means the total number of candies required for class B is `C - 16`, and this should be equal to `6 * B`.\n\nWe can now set up the following equations:\n\n1) For class A: `4 * 2B + 20 = C`\n2) For class B: `6 * B = C - 16`\n\nNow we have a system of two equations:\n1) `8B + 20 = C`\n2) `6B = C - 16`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    B, C = symbols('B C')\n\n    # Formulate equations\n    eq1 = Eq(8*B + 20, C)\n    eq2 = Eq(6*B, C - 16)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (B, C))\n    result = solution[C]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables, formulates the equations, solves them using the sympy library, and returns the total number of candies Miss Jenny has."]}
{"dataset_version": "2023-07-07", "queId": "2927ab094a1741819a4e2a25ebabc6e7", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the total number of animals initially in the farm as `A`, the number of cows as `C`, and the number of goats as `G`.\n\nFrom the problem, we have the following information:\n\n1. 65% of the animals were cows, so `C = 0.65A`.\n2. The rest were goats, so `G = A - C = A - 0.65A = 0.35A`.\n3. After adding 240 more animals, the percentage of cows increased to 65% + 20% = 85%, so the new number of cows is `0.85(A + 240)`.\n4. The number of goats doubled, so the new number of goats is `2G`.\n\nWe can now set up the equations:\n\n1) `C = 0.65A`\n2) `G = 0.35A`\n3) `0.85(A + 240) = C + 240` (since the number of cows increased by 240)\n4) `2G = G + 240` (since the number of goats doubled)\n\nWe need to find the value of `G` from these equations.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, C, G = symbols('A C G')\n\n    # Initial equations based on the problem\n    eq1 = Eq(C, 0.65 * A)  # Equation for the number of cows initially\n    eq2 = Eq(G, 0.35 * A)  # Equation for the number of goats initially\n    eq3 = Eq(0.85 * (A + 240), C + 240)  # Equation after adding 240 animals and the increase in cow percentage\n    eq4 = Eq(2 * G, G + 240)  # Equation after the number of goats doubled\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3, eq4), (A, C, G))\n    result = solution[G]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables and equations based on the problem statement and then solves the system of equations to find the initial number of goats on the farm. The final answer is returned by the `solution()` function."]}
{"dataset_version": "2023-07-07", "queId": "a51a939a7af045ed9ba206d87ac10cdc", "difficulty": "3", "qtype": "short_answer", "problem": "A year is called a lucky year if the sum of its digits is 18. For example, 1917 is a lucky year since 1+9+1+7=18. How many lucky years are there between 2018 and 2108? （⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "3", "generation": ["## Step 1: Formulate Equations\n\nTo find the lucky years between 2018 and 2108, we need to find all the years whose digits sum up to 18. Let's denote the year as `abcd`, where `a`, `b`, `c`, and `d` are the digits of the year.\n\nThe equation for a lucky year is:\n`a + b + c + d = 18`\n\nHowever, since we are looking for years between 2018 and 2108, we know that `a` is always 2 and `b` is always 0 or 1. This simplifies our problem to finding values of `c` and `d` such that:\n`2 + b + c + d = 18`\n\nWe can further simplify this to:\n`b + c + d = 16` if `b` is 0 (for the years 2000-2099)\n`b + c + d = 15` if `b` is 1 (for the year 2100-2108)\n\nNow we need to find all combinations of `b`, `c`, and `d` that satisfy these equations and fall within the given year range.\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer\n\nWe will use Python code to iterate through the possible values of `b`, `c`, and `d` and count the number of solutions that satisfy the equations.\n\n```python\ndef solution():\n    # Initialize the count of lucky years\n    lucky_years_count = 0\n\n    # Iterate through possible values of b, c, and d\n    for b in range(0, 2):  # b can only be 0 or 1\n        for c in range(0, 10):  # c can be any digit from 0 to 9\n            for d in range(0, 10):  # d can be any digit from 0 to 9\n                # Check if the sum of digits equals 18\n                if b + c + d == 16 or (b == 1 and c + d == 15):\n                    # Construct the year from the digits\n                    year = 2000 + b*100 + c*10 + d\n                    # Check if the year is within the given range\n                    if 2018 <= year <= 2108:\n                        lucky_years_count += 1\n\n    # Return the final answer\n    return lucky_years_count\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will iterate through all possible values of `b`, `c`, and `d` and count the number of years that satisfy the lucky year condition within the specified range. The final answer will be the count of lucky years."]}
{"dataset_version": "2023-07-07", "queId": "1e6694bd51114d55895dbe80e548b123", "difficulty": "3", "qtype": "short_answer", "problem": "$$4$$ individuals pass the ball to each other and they pass it to others immediately when they catch the ball, starting from $$A$$ as the first pass, the number of different methods that after $$3$$ passes the ball returns to $$A$$ is~\\uline{~~~~~~~~~~}~. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "6", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the individuals as A, B, C, and D. We need to find the number of different methods that after 3 passes the ball returns to A.\n\nWe can break down the problem into different cases based on who A passes the ball to first:\n\n1. A passes to B, B has two choices (C or D), and then C or D must pass it back to A.\n2. A passes to C, C has two choices (B or D), and then B or D must pass it back to A.\n3. A passes to D, D has two choices (B or C), and then B or C must pass it back to A.\n\nFor each of these cases, there are 2 possible ways for the ball to be passed back to A, since the last person to receive the ball from A has two choices (excluding the person they received the ball from).\n\nTherefore, the total number of different methods is the sum of the possibilities for each case.\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer:\n\nSince the problem is straightforward and doesn't require solving a system of equations, we can directly calculate the number of methods in Python.\n\n```python\ndef solution():\n    # There are 3 initial choices for A (B, C, or D)\n    initial_choices = 3\n    \n    # For each initial choice, there are 2 choices for the second pass\n    second_pass_choices = 2\n    \n    # The total number of different methods is the product of the two\n    result = initial_choices * second_pass_choices\n    \n    # Return the final answer\n    return result\n\n# Example usage:\n# print(solution())\n```\n\nThis code calculates the total number of different methods that after 3 passes the ball returns to A by multiplying the number of initial choices A has by the number of choices the second person has."]}
{"dataset_version": "2023-07-07", "queId": "8c7bad2823b64ce9bd000eca653f9f98", "difficulty": "3", "qtype": "short_answer", "problem": "At a party, every $$4$$th guest gets a face mask and every $$10$$th guest gets a mug. What is the position of the first guest that will get both a face mask and a mug? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Factors and Multiples"], "answer": "20", "generation": ["## Step 1: Formulate Equations:\n\nTo find the position of the first guest that will get both a face mask and a mug, we need to find the least common multiple (LCM) of the numbers 4 and 10, since the LCM will give us the first position that is both a multiple of 4 and a multiple of 10.\n\nLet's denote the position of the first guest that will get both a face mask and a mug as `P`.\n\nSince every 4th guest gets a face mask, the position `P` must be a multiple of 4.\nSince every 10th guest gets a mug, the position `P` must also be a multiple of 10.\n\nThe mathematical expression to find `P` is to calculate the LCM of 4 and 10.\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer:\n\nTo solve for `P`, we will use Python code to calculate the LCM of 4 and 10.\n\n```python\ndef solution():\n    import math\n\n    # Calculate the least common multiple (LCM) of 4 and 10\n    result = math.lcm(4, 10)\n\n    # Return the final answer\n    return result\n```\n\nThis code will return the position of the first guest that will get both a face mask and a mug."]}
{"dataset_version": "2023-07-07", "queId": "b2e74fd3787345abaed2bffc05eda905", "difficulty": "3", "qtype": "short_answer", "problem": "Elias had $$5$$ times as many stickers as Aileen. After Elias gave away $$88$$ stickers and Aileen lost $$8$$ stickers, they had the same number of stickers left. How many stickers did each of them have in the end? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "(12, 12)", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of stickers Elias had originally as `E` and the number of stickers Aileen had originally as `A`.\n\nAccording to the problem, Elias had 5 times as many stickers as Aileen, so we can write the first equation as:\n1) `E = 5A`\n\nAfter Elias gave away 88 stickers and Aileen lost 8 stickers, they had the same number of stickers left. We can write the second equation as:\n2) `E - 88 = A - 8`\n\nNow we have a system of two equations:\n1) `E = 5A`\n2) `E - 88 = A - 8`\n\n## Step 2: Solve Equations Using Python Code:\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    E, A = symbols('E A')\n\n    # Formulate equations\n    eq1 = Eq(E, 5*A)\n    eq2 = Eq(E - 88, A - 8)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (E, A))\n    \n    # Extract the number of stickers each had in the end\n    E_final = solution[E] - 88\n    A_final = solution[A] - 8\n\n    # Return the final answer\n    return E_final, A_final\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will return the final number of stickers that Elias and Aileen each had in the end."]}
{"dataset_version": "2023-07-07", "queId": "ed32aedbb2a34499a71cf190747aeb19", "difficulty": "3", "qtype": "short_answer", "problem": "Student $$A$$ and Student $$B$$ both had a mathematic test. Student $$B$$ told student $$A$$ \"If you gave me $$24$$ points, my result would be $$2$$ points less than yours.\" Student A told student B \"if you gave me $$25$$ points, then my result would be $$5$$ times that of yours.\" What is the score Student $$A$$ got on the mathematic test? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Questions Involving Sum, Difference and Multiples->Problems of Difference and Multiple"], "answer": "70", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the score of Student A as `A` and the score of Student B as `B`.\n\nFrom the first statement, \"If you gave me 24 points, my result would be 2 points less than yours,\" we can write the equation:\n1) `B + 24 = A - 2`\n\nFrom the second statement, \"If you gave me 25 points, then my result would be 5 times that of yours,\" we can write the equation:\n2) `A + 25 = 5 * (B - 25)`\n\nNow we have a system of two equations:\n1) `B + 24 = A - 2`\n2) `A + 25 = 5 * (B - 25)`\n\n## Step 2: Solve Equations Using Python Code:\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B = symbols('A B')\n\n    # Formulate equations based on the problem statement\n    eq1 = Eq(B + 24, A - 2)\n    eq2 = Eq(A + 25, 5 * (B - 25))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, B))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the system of equations and return the score Student A got on the mathematic test."]}
{"dataset_version": "2023-07-07", "queId": "020a47d927424600b54866be0f9e7377", "difficulty": "3", "qtype": "short_answer", "problem": "A school library had $$3900$$ books. The ratio of the number of Chinese, Malay and English books is $$4 : 3 : 6$$. When the school bought $$510$$ new books, the number of Chinese books increased by $$20$$\\% and the number of Malay books increased by $$10$$\\%. Find the percentage increase in the number of English books. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Percentage Calculation"], "answer": "8.97435897435899", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of Chinese, Malay, and English books as `C`, `M`, and `E` respectively.\n\nAccording to the problem, the ratio of the number of Chinese, Malay, and English books is `4:3:6`. This gives us the following relationships:\n1) `C/M = 4/3`\n2) `M/E = 3/6 = 1/2`\n3) `C + M + E = 3900`\n\nWhen the school bought `510` new books, the number of Chinese books increased by `20%`, and the number of Malay books increased by `10%`. This gives us:\n4) `C_new = C + 0.20C = 1.20C`\n5) `M_new = M + 0.10M = 1.10M`\n6) `C_new + M_new + E_new = 3900 + 510`\n\nWe need to find the percentage increase in the number of English books, which is given by:\n7) `Percentage Increase = ((E_new - E) / E) * 100`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, M, E = symbols('C M E')\n\n    # Given total number of books before new books are added\n    total_books_before = 3900\n\n    # Given total number of new books\n    new_books = 510\n\n    # Given ratios\n    ratio_C_M = 4/3\n    ratio_M_E = 1/2\n\n    # Equation 1: Ratio of Chinese to Malay books\n    eq1 = Eq(C, 4*M/3)\n\n    # Equation 2: Ratio of Malay to English books\n    eq2 = Eq(M, 2*E/3)\n\n    # Equation 3: Total number of books before new books are added\n    eq3 = Eq(C + M + E, total_books_before)\n\n    # Solve the system of equations for C, M, E\n    solution_before = solve((eq1, eq2, eq3), (C, M, E))\n    C_before = solution_before[C]\n    M_before = solution_before[M]\n    E_before = solution_before[E]\n\n    # Calculate new number of Chinese and Malay books\n    C_new = C_before * 1.20\n    M_new = M_before * 1.10\n\n    # Equation 4: Total number of books after new books are added\n    eq4 = Eq(C_new + M_new + E, total_books_before + new_books)\n\n    # Solve for new number of English books\n    E_new = solve(eq4, E)[0]\n\n    # Calculate percentage increase in the number of English books\n    percentage_increase_E = ((E_new - E_before) / E_before) * 100\n\n    # Return the final answer\n    return percentage_increase_E\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the percentage increase in the number of English books after the school bought 510 new books."]}
{"dataset_version": "2023-07-07", "queId": "7e469a60ae594c1eb1c906000dd9e1b3", "difficulty": "3", "qtype": "short_answer", "problem": "Woody organised a quiz night in the toy room. He asked $25$ questions.  For each correct answer you gained $4$ points.  For each incorrect answer you lost $2$ points.  For each question you did not attempt you scored $0$ point.  Rex answered all but one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of correct answers as `C`, the number of incorrect answers as `I`, and the number of questions not attempted as `U`. Since Rex answered all but one of the questions, we have:\n\nC + I + U = 25\nU = 1 (because Rex did not attempt one question)\n\nFor the scoring system:\n- Each correct answer gives 4 points: `4C`\n- Each incorrect answer deducts 2 points: `-2I`\n- Unattempted questions score 0 points: `0U`\n\nRex's total score is 66 points, so we have the equation:\n4C - 2I + 0U = 66\n\nSince Rex answered all but one question, we also know that:\nC + I = 24 (because U = 1)\n\nNow we have a system of two equations:\n1) `4C - 2I = 66`\n2) `C + I = 24`\n\n## Step 2: Solve Equations Using Python Code:\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, I = symbols('C I')\n\n    # Equations based on the problem statement\n    eq1 = Eq(4*C - 2*I, 66)  # Points equation\n    eq2 = Eq(C + I, 24)      # Total questions answered equation\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, I))\n    correct_answers = solution[C]\n\n    # Return the number of correct answers\n    return correct_answers\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables and equations, solves the system of equations, and returns the number of correct answers Rex had."]}
{"dataset_version": "2023-07-07", "queId": "3d7b8c3bc3f54a2dbce551c74529dd16", "difficulty": "3", "qtype": "short_answer", "problem": "David had a total of $$38$$ notes. The notes are either $$$2$$ notes or $$$10$$ notes. After he spent $$80$$\\% of the $$$10$$ notes and $$75$$\\% of the $$$2$$ notes on a fan, he was left with thrice as many $$$10$$ notes as $$$2$$ notes. How much did the fan cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "252.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of $10 notes as `T` and the number of $2 notes as `D`.\n\nFrom the problem, we have the following information:\n\n1. The total number of notes is 38: `T + D = 38`\n2. David spent 80% of the $10 notes: `0.8 * T` notes were spent.\n3. David spent 75% of the $2 notes: `0.75 * D` notes were spent.\n4. After spending, he was left with thrice as many $10 notes as $2 notes: `T - 0.8 * T = 3 * (D - 0.75 * D)`\n\nWe also know that the value of the notes spent on the fan is the sum of the value of the $10 notes and the $2 notes spent:\n\n5. The cost of the fan is `10 * 0.8 * T + 2 * 0.75 * D`.\n\nNow we have a system of equations:\n\n1) `T + D = 38`\n2) `0.2 * T = 3 * 0.25 * D`\n\nWe can solve these equations to find the values of `T` and `D`, and then calculate the cost of the fan.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    T, D = symbols('T D')\n\n    # Formulate equations\n    eq1 = Eq(T + D, 38)\n    eq2 = Eq(0.2 * T, 3 * 0.25 * D)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (T, D))\n    T_value = solution[T]\n    D_value = solution[D]\n\n    # Calculate the cost of the fan\n    cost_of_fan = 10 * 0.8 * T_value + 2 * 0.75 * D_value\n\n    # Return the final answer\n    return cost_of_fan\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will return the cost of the fan by solving the system of equations formulated in Step 1."]}
{"dataset_version": "2023-07-07", "queId": "94bb6ae56dbd4a98a0fbeaa59c7d8691", "difficulty": "3", "qtype": "short_answer", "problem": "Miss Jenny is separating some candies for class A and class B. If each student in class A gets $4$ candies, $20$ more candies are needed. If each student in class B can get $6$ candies, there will be $16$ candies left. It is known that the number of students in class A is twice of class B. How many candies does Miss Jenny have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Distribution Problems"], "answer": "4", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote:\n- `A` as the number of students in class A.\n- `B` as the number of students in class B.\n- `C` as the total number of candies Miss Jenny has.\n\nFrom the problem, we have the following information:\n1. If each student in class A gets 4 candies, 20 more candies are needed. This means that the total number of candies required for class A is `4A + 20`.\n2. If each student in class B gets 6 candies, there will be 16 candies left. This means that the total number of candies required for class B is `C - 16`.\n3. The number of students in class A is twice the number of students in class B, so `A = 2B`.\n\nWe can now set up the equations:\n1) `4A + 20 = C` (Candies needed for class A)\n2) `6B = C - 16` (Candies given to class B)\n3) `A = 2B` (Relation between the number of students in class A and B)\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B, C = symbols('A B C')\n\n    # Equations based on the problem statement\n    eq1 = Eq(4*A + 20, C)\n    eq2 = Eq(6*B, C - 16)\n    eq3 = Eq(A, 2*B)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (A, B, C))\n    result = solution[C]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the equations based on the problem statement and solves them using the sympy library in Python. The final answer, which is the total number of candies Miss Jenny has, is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "cd9d85bed1d74e6cb214e001f0a094e3", "difficulty": "3", "qtype": "short_answer", "problem": "Rasidah had $$$48$$ less than Chai Seng. Rasidah spent~$\\tfrac{3}{5}$~of her money and Chai Seng spent~$\\tfrac{6}{7}$~of his money. In the end, Chai Seng had~$\\tfrac{1}{2}$~as much money left as Rasidah. Find the amount of money Rasidah had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "120.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the amount of money Rasidah had at first as `R` and the amount of money Chai Seng had at first as `C`.\n\nFrom the problem, we have the following information:\n\n1. Rasidah had $48 less than Chai Seng: `R = C - 48`\n2. Rasidah spent 3/5 of her money: `R - 3/5 * R` is the amount left with Rasidah.\n3. Chai Seng spent 6/7 of his money: `C - 6/7 * C` is the amount left with Chai Seng.\n4. In the end, Chai Seng had 1/2 as much money left as Rasidah: `C - 6/7 * C = 1/2 * (R - 3/5 * R)`\n\nNow we can formulate the equations:\n\n1) `R = C - 48`\n2) `C - 6/7 * C = 1/2 * (R - 3/5 * R)`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    R, C = symbols('R C')\n\n    # Equation 1: Rasidah had $48 less than Chai Seng\n    eq1 = Eq(R, C - 48)\n\n    # Equation 2: In the end, Chai Seng had 1/2 as much money left as Rasidah\n    eq2 = Eq(C - 6/7 * C, 1/2 * (R - 3/5 * R))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (R, C))\n    result = solution[R]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the amount of money Rasidah had at first. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "b02ecddb14a14da0b461c2caa96532c3", "difficulty": "3", "qtype": "short_answer", "problem": "Ema had $$$360$$ less than Keng Wee. Ema spent~$\\tfrac{1}{4}$~of her money and Keng Wee spent~$\\tfrac{4}{7}$~of his money. In the end, Keng Wee and Ema had the same amount of money left. Find the amount of money Keng Wee had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "840.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the amount of money Ema had initially as `E` and the amount of money Keng Wee had initially as `K`.\n\nAccording to the problem, Ema had $360 less than Keng Wee, so we can write the first equation as:\n1) `E = K - 360`\n\nEma spent 1/4 of her money, so she has 3/4 of her money left. Keng Wee spent 4/7 of his money, so he has 3/7 of his money left. After spending, they both have the same amount of money left, so we can write the second equation as:\n2) `3/4 * E = 3/7 * K`\n\nNow we have a system of two equations:\n1) `E = K - 360`\n2) `3/4 * E = 3/7 * K`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    E, K = symbols('E K')\n\n    # Formulate equations\n    eq1 = Eq(E, K - 360)\n    eq2 = Eq(3/4 * E, 3/7 * K)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (E, K))\n    result = solution[K]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the system of equations, and returns the initial amount of money Keng Wee had."]}
{"dataset_version": "2023-07-07", "queId": "c94ef69eb1ea40b382fada9c92ec874e", "difficulty": "3", "qtype": "short_answer", "problem": "John had $\\frac{5}{13}$ of the amount of Jessie\\textquotesingle s money. Jessie then transferred $$ $600$$ to John. As a result, John\\textquotesingle s money became $50 \\%$ of the amount of Jessie\\textquotesingle s money. How much money did they have in total? $ $$~\\uline{~~~~~~~~~~}~ ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "10800.0000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote John's initial amount of money as `J` and Jessie's initial amount of money as `X`.\n\nAccording to the problem, John had $\\frac{5}{13}$ of Jessie's money initially, so we can write the first equation as:\n1) $J = \\frac{5}{13}X$\n\nAfter Jessie transferred $600 to John, John's money became $50\\%$ of Jessie's money. So we can write the second equation as:\n2) $J + 600 = \\frac{1}{2}(X - 600)$\n\nWe need to find the total amount of money they had initially, which is $J + X$.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    J, X = symbols('J X')\n\n    # Equation 1: John had 5/13 of Jessie's money initially\n    eq1 = Eq(J, 5/13 * X)\n\n    # Equation 2: After the transfer, John's money is 50% of Jessie's money\n    eq2 = Eq(J + 600, 1/2 * (X - 600))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (J, X))\n    J_solution = solution[J]\n    X_solution = solution[X]\n\n    # Calculate the total amount of money they had initially\n    total_money = J_solution + X_solution\n\n    # Return the final answer\n    return total_money\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables and equations, solves the system of equations, and calculates the total amount of money John and Jessie had initially. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "f96223372da84682a7c29924dbb659bb", "difficulty": "3", "qtype": "short_answer", "problem": "A box could contain $$8$$ cookies. There were $$298$$ cookies. How many boxes were needed? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "38", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of boxes needed as `B`.\n\nSince each box can contain 8 cookies, and there are 298 cookies in total, we can express the relationship as:\n`8B >= 298`\n\nWe want to find the smallest integer value of `B` such that this inequality holds true.\n\n**Step 2: Solve Equations Using Python Code:**\n\nWe can use Python to calculate the number of boxes needed by dividing the total number of cookies by the number of cookies each box can hold and then rounding up to the nearest whole number since we can't have a fraction of a box.\n\n```python\nimport math\n\ndef solution():\n    # Total number of cookies\n    total_cookies = 298\n    # Number of cookies per box\n    cookies_per_box = 8\n    \n    # Calculate the number of boxes needed\n    # We use math.ceil to round up to the nearest whole number\n    boxes_needed = math.ceil(total_cookies / cookies_per_box)\n    \n    # Return the final answer\n    return boxes_needed\n```"]}
{"dataset_version": "2023-07-07", "queId": "36563a3f9be64d47a2d4bd411b572cae", "difficulty": "3", "qtype": "short_answer", "problem": "On the first day of an amusement park\\textquotesingle s opening, the number of male visitors was $450$ more than the number of female visitors. On the second day, the number of female visitors increased by $15 \\%$ but the number of male visitors decreased by $18 \\%$. The total number of visitors for the second day was $1354$. How many visitors were there on the first day? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "1450.00000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of female visitors on the first day as `F` and the number of male visitors on the first day as `M`.\n\nFrom the problem, we have the following information:\n\n1. The number of male visitors was 450 more than the number of female visitors on the first day:\n   `M = F + 450`\n\n2. On the second day, the number of female visitors increased by 15%, so the number of female visitors on the second day is:\n   `F_second_day = F + 0.15 * F = 1.15 * F`\n\n3. On the second day, the number of male visitors decreased by 18%, so the number of male visitors on the second day is:\n   `M_second_day = M - 0.18 * M = 0.82 * M`\n\n4. The total number of visitors for the second day was 1354:\n   `F_second_day + M_second_day = 1354`\n   `1.15 * F + 0.82 * M = 1354`\n\nNow we have a system of two equations:\n1) `M = F + 450`\n2) `1.15 * F + 0.82 * M = 1354`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    F, M = symbols('F M')\n\n    # Equation 1: M = F + 450\n    eq1 = Eq(M, F + 450)\n\n    # Equation 2: 1.15 * F + 0.82 * M = 1354\n    eq2 = Eq(1.15 * F + 0.82 * M, 1354)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (F, M))\n    F_first_day = solution[F]\n    M_first_day = solution[M]\n\n    # Total number of visitors on the first day\n    total_first_day = F_first_day + M_first_day\n\n    # Return the final answer\n    return total_first_day\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and uses the sympy library to solve the system of equations. The final answer is the sum of the number of female and male visitors on the first day."]}
{"dataset_version": "2023-07-07", "queId": "fa72055fad084ab58ad10b1fda0c68de", "difficulty": "3", "qtype": "short_answer", "problem": "On the first day of an amusement park's opening, the number of make visitors was 450 more than the number of female visitors. On the second day, the number of female visitors increased by 15\\% but the number of make visitors decreased by 18\\%. The total number of visitors for the second day was 1354. How many make visitors were there on the first day? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "950.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of male visitors on the first day as `M` and the number of female visitors on the first day as `F`.\n\nFrom the problem, we have the following information:\n\n1. The number of male visitors was 450 more than the number of female visitors on the first day:\n   `M = F + 450`\n\n2. On the second day, the number of female visitors increased by 15%, so the number of female visitors on the second day is:\n   `F_second_day = F + 0.15 * F = 1.15 * F`\n\n3. On the second day, the number of male visitors decreased by 18%, so the number of male visitors on the second day is:\n   `M_second_day = M - 0.18 * M = 0.82 * M`\n\n4. The total number of visitors on the second day was 1354:\n   `M_second_day + F_second_day = 1354`\n   `0.82 * M + 1.15 * F = 1354`\n\nNow we have a system of two equations:\n1) `M = F + 450`\n2) `0.82 * M + 1.15 * F = 1354`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M, F = symbols('M F')\n\n    # Equation 1: M = F + 450\n    eq1 = Eq(M, F + 450)\n\n    # Equation 2: 0.82 * M + 1.15 * F = 1354\n    eq2 = Eq(0.82 * M + 1.15 * F, 1354)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (M, F))\n    result = solution[M]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the number of male visitors on the first day. The result is returned and printed."]}
{"dataset_version": "2023-07-07", "queId": "d0e55b24b2d94a99a067394ed0971714", "difficulty": "3", "qtype": "short_answer", "problem": "Mr Krishnan spent $$$740$$ of his monthly salary on a DVD player and~$\\tfrac{3}{4}$~of the remaining money on a television set. If he had~$\\tfrac{1}{5}$~of his salary left, how much was his salary for the month? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "3700.00000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote Mr. Krishnan's monthly salary as `S`.\n\nAccording to the problem, Mr. Krishnan spent $740 on a DVD player. So the remaining amount after this purchase is `S - 740`.\n\nHe then spent $\\frac{3}{4}$ of the remaining money on a television set. So the amount spent on the television set is $\\frac{3}{4} \\times (S - 740)$.\n\nAfter buying the television set, he had $\\frac{1}{5}$ of his salary left. This means the remaining amount is $\\frac{1}{5} \\times S$.\n\nSo the equation that represents the situation is:\n$$\nS - 740 - \\frac{3}{4} \\times (S - 740) = \\frac{1}{5} \\times S\n$$\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    S = symbols('S')\n\n    # Equation representing the situation\n    eq = Eq(S - 740 - (3/4) * (S - 740), (1/5) * S)\n\n    # Solve the equation\n    solution = solve(eq, S)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variable `S` for the salary, formulates the equation based on the problem statement, and solves for `S` using the `solve` function from the sympy library. The result is then returned as the final answer."]}
{"dataset_version": "2023-07-07", "queId": "6dff7252335c45c0a2fdec728a95565a", "difficulty": "3", "qtype": "short_answer", "problem": "A rectangular piece of white paper ~measures 1.36m by 0.8m. We need to cut it into squares of the same size and make the square area as large as possible, and there is no white paper left at the end. How many squares can we cut?（⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules"], "answer": "170", "generation": ["## Step 1: Formulate Equations\n\nTo solve this problem, we need to find the largest square that can fit into the rectangle without leaving any paper left over. This means we need to find the greatest common divisor (GCD) of the two sides of the rectangle, which will give us the side length of the largest possible square.\n\nLet's denote:\n- The length of the rectangle as `L = 1.36m`\n- The width of the rectangle as `W = 0.8m`\n- The side length of the largest square as `S`\n- The number of squares that can be cut as `N`\n\nThe side length of the largest square `S` is the GCD of `L` and `W`. Once we have `S`, we can calculate `N` by dividing the area of the rectangle by the area of one square.\n\nThe area of the rectangle is `L * W`, and the area of one square is `S * S`. Therefore, the number of squares `N` is:\n\n`N = (L * W) / (S * S)`\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer\n\nTo solve for `S` and `N`, we will use Python's `math` library to find the GCD and then calculate the number of squares.\n\n```python\ndef solution():\n    import math\n\n    # Define the dimensions of the rectangle\n    L = 1.36  # length in meters\n    W = 0.8   # width in meters\n\n    # Calculate the side length of the largest square (GCD of L and W)\n    S = math.gcd(int(L * 100), int(W * 100)) / 100  # Convert to centimeters to avoid floating point issues\n\n    # Calculate the number of squares that can be cut\n    N = (L * W) / (S * S)\n\n    # Return the final answer\n    return int(N)  # Convert to integer since we can't have a fraction of a square\n\n# Call the function and print the result for verification\nprint(solution())\n```\n\nPlease note that we convert the lengths to centimeters before calculating the GCD to avoid issues with floating point precision. After finding the GCD, we convert it back to meters for the final calculation. The final number of squares `N` must be an integer since we cannot have a fraction of a square."]}
{"dataset_version": "2023-07-07", "queId": "5b9cd44e2a8d46b2b9f5c8533ec96089", "difficulty": "3", "qtype": "short_answer", "problem": "In a streaming exercise, students were asked to choose between two subjects, which was Grade $$A$$ Math or Grade $$B$$ Math. $$80$$\\% of the students chose Grade $$A$$ Math, $$35$$\\% of the students chose Grade $$B$$ Math and $$10$$\\% of the students chose neither subjects. Given that a total of $$75$$ students actually chose both Grade $$A$$ and Grade $$B$$ Math, how many students were involved in the streaming exercise? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Finding the Base"], "answer": "-300", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the total number of students involved in the streaming exercise as `T`.\n\nAccording to the problem, we have the following information:\n- `0.80T` students chose Grade A Math.\n- `0.35T` students chose Grade B Math.\n- `0.10T` students chose neither subject.\n- `75` students chose both Grade A and Grade B Math.\n\nUsing the principle of inclusion-exclusion, we can express the total number of students as the sum of students choosing each subject minus the students choosing both subjects plus the students choosing neither:\n\n`T = (Number of students choosing Grade A) + (Number of students choosing Grade B) - (Number of students choosing both) + (Number of students choosing neither)`\n\nSubstituting the given percentages and the number of students choosing both subjects, we get:\n\n`T = 0.80T + 0.35T - 75 + 0.10T`\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer:\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    # Define the number of students who chose both subjects\n    both_subjects = 75\n\n    # Define the percentage of students who chose neither subject\n    neither_percentage = 0.10\n\n    # Calculate the total number of students\n    # Rearrange the equation T = 0.80T + 0.35T - 75 + 0.10T to find T\n    # T - 0.80T - 0.35T - 0.10T = -75\n    # (1 - 0.80 - 0.35 - 0.10)T = -75\n    # 0.75T = 75\n    # T = 75 / 0.75\n    T = 75 / (1 - 0.80 - 0.35 - neither_percentage)\n\n    # Return the final answer\n    return int(T)  # Convert the result to an integer, as the number of students must be a whole number\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate and return the total number of students involved in the streaming exercise."]}
{"dataset_version": "2023-07-07", "queId": "1ddfd41822fc4ff5909fb0c086a9e1cc", "difficulty": "3", "qtype": "short_answer", "problem": "Miss Jenny is separating some candies for class A and class B. If each student in class A get $4$ candies, $20$ more candies are needed. If each student in class B can get $6$ candies, there will be $16$ candies left. It is known that the number of students in class A is twice of class B. How many candies does Miss Jenny havve? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Distribution Problems"], "answer": "4", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote:\n- `A` as the number of students in class A.\n- `B` as the number of students in class B.\n- `C` as the total number of candies Miss Jenny has.\n\nFrom the problem, we have the following information:\n1. If each student in class A gets 4 candies, 20 more candies are needed. This means that the total number of candies required for class A is 4A, and it is 20 less than what Miss Jenny has: `4A = C - 20`.\n2. If each student in class B gets 6 candies, there will be 16 candies left. This means that the total number of candies required for class B is 6B, and it is 16 less than what Miss Jenny has: `6B = C - 16`.\n3. The number of students in class A is twice the number of students in class B: `A = 2B`.\n\nNow we have a system of three equations:\n1) `4A = C - 20`\n2) `6B = C - 16`\n3) `A = 2B`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B, C = symbols('A B C')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(4*A, C - 20)\n    eq2 = Eq(6*B, C - 16)\n    eq3 = Eq(A, 2*B)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (A, B, C))\n    result = solution[C]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the value of `C`, which represents the total number of candies Miss Jenny has. The `solve` function from the sympy library is used to find the solution to the system of equations. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "6d1e50acecb5443699ff1409bbab9ab1", "difficulty": "3", "qtype": "short_answer", "problem": "Woody participated in a math skills competition. There are $25$ questions in total.  For each correct answer he gained $4$ points.  For each incorrect answer he lost $2$ points.  For each question he did not attempt, he scores $0$ point.  Woody answered all but one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of correct answers as `C`, the number of incorrect answers as `I`, and the number of questions not attempted as `U`. We know that Woody answered all but one of the questions, so `U = 1`. Since there are 25 questions in total, we have `C + I + U = 25`.\n\nFor the scoring system:\n- Each correct answer gives 4 points: `4C` points\n- Each incorrect answer deducts 2 points: `-2I` points\n- Unattempted questions score 0 points: `0U` points\n\nWoody's total score is 66 points, so the equation for the score is:\n`4C - 2I + 0U = 66`\n\nNow we have a system of two equations:\n1) `C + I + U = 25`\n2) `4C - 2I + 0U = 66`\n\nAnd we know that `U = 1`, so we can substitute this into the equations:\n1) `C + I + 1 = 25`\n2) `4C - 2I = 66`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, I = symbols('C I')\n\n    # Given values\n    U = 1  # Unattempted questions\n\n    # Formulate equations\n    eq1 = Eq(C + I + U, 25)  # Total questions equation\n    eq2 = Eq(4*C - 2*I, 66)  # Scoring equation\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, I))\n    correct_answers = solution[C]\n\n    # Return the final answer\n    return correct_answers\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables and equations, solves the system of equations, and returns the number of correct answers Woody had."]}
{"dataset_version": "2023-07-07", "queId": "973a7aa6ad0b475ca38055bf318f176b", "difficulty": "3", "qtype": "short_answer", "problem": "Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-700.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Peter originally had as `P` and the number of stickers Sam originally had as `S`.\n\nFrom the problem, we have the following information:\n\n1. Sam had 40 stickers more than Peter: `S = P + 40`\n2. Sam gave 20% of his stickers to Peter: `P + 0.20S` is the new amount of stickers Peter has.\n3. Peter gave 25% of his new amount of stickers to Sam: `S - 0.20S + 0.25(P + 0.20S)` is the new amount of stickers Sam has.\n4. In the end, Sam had 96 stickers more than Peter: `S - 0.20S + 0.25(P + 0.20S) = P + 0.20S + 96`\n\nNow we can formulate the equations:\n\n1) `S = P + 40`\n2) `S - 0.20S + 0.25(P + 0.20S) = P + 0.20S + 96`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, S = symbols('P S')\n\n    # Equation 1: Sam had 40 stickers more than Peter\n    eq1 = Eq(S, P + 40)\n\n    # Equation 2: In the end, Sam had 96 stickers more than Peter\n    eq2 = Eq(S - 0.20*S + 0.25*(P + 0.20*S), P + 0.20*S + 96)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, S))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the number of stickers Peter had at first. The `solve` function from the sympy library is used to find the solution to the system of equations. The final answer is the value of `P` which represents the number of stickers Peter originally had."]}
{"dataset_version": "2023-07-07", "queId": "e3aa5800105743d5b2435db12b158401", "difficulty": "3", "qtype": "short_answer", "problem": "Kiera spent $$ $740$$ of her monthly salary on a new phone and $75 \\%$ of the remaining money on her rent. If she had~$\\dfrac{1}{5}$~of her salary left, how much was her salary for the month? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "3700.00000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote Kiera's monthly salary as `S`.\n\nAccording to the problem, Kiera spent $740 on a new phone. So the remaining amount after this purchase is `S - 740`.\n\nThen, she spent 75% of the remaining money on her rent. The amount spent on rent is `0.75 * (S - 740)`.\n\nAfter paying for her rent, she had 1/5 of her salary left. This means the remaining amount is `S/5`.\n\nSo the equation that represents the situation is:\n`S - 740 - 0.75 * (S - 740) = S/5`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    S = symbols('S')\n\n    # Formulate the equation\n    eq = Eq(S - 740 - 0.75 * (S - 740), S/5)\n\n    # Solve the equation\n    result = solve(eq, S)\n\n    # Return the final answer\n    return result[0]\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variable `S` for Kiera's salary, formulates the equation based on the problem statement, solves the equation, and returns the result, which is Kiera's monthly salary."]}
{"dataset_version": "2023-07-07", "queId": "5d63dffe5e5b4c6195a4e20ccdebb0f0", "difficulty": "3", "qtype": "short_answer", "problem": "$$Amelia$$ had $$160$$ cookies and $$Bala$$ had $$320$$ more cookies than $$Daniel$$. $$Bala$$ had~$\\tfrac{1}{2}$~as many cookies as $$Amelia$$, $$Carl$$ and $$Daniel$$. $$Carl$$ had~$\\tfrac{3}{4}$~as many cookies as $$Amelia$$, $$Bala$$ and $$Daniel$$. They had $$6230$$ cookies in total. How many cookies did $$Daniel$$ have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of cookies Amelia, Bala, Carl, and Daniel have as A, B, C, and D respectively.\n\nFrom the problem, we have the following information:\n\n1. Amelia had 160 cookies: `A = 160`\n2. Bala had 320 more cookies than Daniel: `B = D + 320`\n3. Bala had 1/2 as many cookies as Amelia, Carl, and Daniel combined: `B = 1/2 * (A + C + D)`\n4. Carl had 3/4 as many cookies as Amelia, Bala, and Daniel combined: `C = 3/4 * (A + B + D)`\n5. They had 6230 cookies in total: `A + B + C + D = 6230`\n\nNow we can write these equations:\n\n1) `A = 160`\n2) `B = D + 320`\n3) `B = 1/2 * (A + C + D)`\n4) `C = 3/4 * (A + B + D)`\n5) `A + B + C + D = 6230`\n\n## Step 2: Solve Equations Using Python Code:\n\nNow we will use Python code to solve these equations.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B, C, D = symbols('A B C D')\n\n    # Given values\n    A = 160\n\n    # Equations based on the problem statement\n    eq1 = Eq(B, D + 320)\n    eq2 = Eq(B, 1/2 * (A + C + D))\n    eq3 = Eq(C, 3/4 * (A + B + D))\n    eq4 = Eq(A + B + C + D, 6230)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3, eq4), (B, C, D))\n    result = solution[D]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(f\"Daniel had {solution()} cookies.\")\n```\n\nThis code defines the equations based on the problem statement and solves for the number of cookies Daniel had. The `solve` function from the sympy library is used to find the values of B, C, and D that satisfy all equations. The final result is the value of D, which represents the number of cookies Daniel had."]}
{"dataset_version": "2023-07-07", "queId": "210032ce53ff4939827463e6a45cdfea", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the total number of animals initially in the farm as `A`, the number of cows as `C`, and the number of goats as `G`.\n\nFrom the problem, we have the following information:\n\n1. 65% of the animals were cows, so `C = 0.65A`.\n2. The rest were goats, so `G = A - C = A - 0.65A = 0.35A`.\n3. After adding 240 more animals, the percentage of cows increased to 85% (since 65% + 20% = 85%) of the new total `A + 240`.\n4. The number of goats doubled, so the new number of goats is `2G`.\n\nWe can now write two equations based on this information:\n\n1. The new number of cows is 85% of the new total number of animals: `0.85(A + 240) = C + 240`.\n2. The new number of goats is twice the original number of goats: `2G = G + 240`.\n\nUsing the expressions for `C` and `G` in terms of `A`, we can rewrite these equations as:\n\n1. `0.85(A + 240) = 0.65A + 240`.\n2. `2(0.35A) = 0.35A + 240`.\n\nNow we have a system of two equations with one variable `A`:\n\n1) `0.85A + 204 = 0.65A + 240`\n2) `0.70A = 0.35A + 240`\n\n## Step 2: Solve Equations Using Python Code:\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    A = symbols('A')\n\n    # Equation 1: After adding 240 animals, 85% of the total is cows\n    eq1 = Eq(0.85 * (A + 240), 0.65 * A + 240)\n\n    # Equation 2: The number of goats doubled after adding 240 animals\n    eq2 = Eq(0.70 * A, 0.35 * A + 240)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A))\n\n    # Calculate the number of goats initially\n    G = 0.35 * solution[A]\n\n    # Return the final answer\n    return G\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the equations based on the problem statement and solves for the total number of animals `A`. Then it calculates the initial number of goats `G` using the relationship `G = 0.35A`. The final result is the number of goats at the beginning."]}
{"dataset_version": "2023-07-07", "queId": "e705de293fcb400b9a1dfb656dfa1166", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ had some cookies. If $$A$$ packed $$8$$ cookies into each box, she would not have any cookies left. If $$A$$ packed $$9$$ cookies into each box, she would have $$1$$ cookie left. What was the least number of cookies that $$A$$ had? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "64", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of cookies that A had as `C`.\n\nWhen A packs 8 cookies into each box and has none left, it means that the total number of cookies `C` is a multiple of 8. So we can write:\n1) `C = 8n` for some integer `n`.\n\nWhen A packs 9 cookies into each box and has 1 cookie left, it means that the total number of cookies `C` is one more than a multiple of 9. So we can write:\n2) `C = 9m + 1` for some integer `m`.\n\nWe are looking for the least positive integer value of `C` that satisfies both equations.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    # Define the least number of cookies A had as C\n    C = 0\n    \n    # Loop to find the least number of cookies that satisfies both conditions\n    while True:\n        # Check if C is a multiple of 8\n        if C % 8 == 0:\n            # Check if C when divided by 9 leaves a remainder of 1\n            if C % 9 == 1:\n                # If both conditions are satisfied, we found the least number of cookies\n                break\n        # Increment C to check the next number\n        C += 1\n    \n    # Return the final answer\n    return C\n```\n\nThis code will loop through the numbers starting from 0 until it finds the least number of cookies that satisfies both conditions: being a multiple of 8 and leaving a remainder of 1 when divided by 9."]}
{"dataset_version": "2023-07-07", "queId": "0c251d28e5f34b3790b5b39adc9a140b", "difficulty": "3", "qtype": "short_answer", "problem": "David spent $$$75$$ of his money on a number of CDs. He spent~$\\tfrac{1}{4}$~of the remaining money on a number of batteries. Given that he was left with~$\\tfrac{1}{3}$~of the original sum of money, how much money did David have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "0.0", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the original sum of money David had as `M`.\n\nAccording to the problem, David spent 3/4 of his money on CDs, so he was left with 1/4 of his money:\nRemaining money after buying CDs = M - 3/4 * M = 1/4 * M\n\nThen, he spent 1/4 of the remaining money on batteries:\nMoney spent on batteries = 1/4 * (1/4 * M) = 1/16 * M\nRemaining money after buying batteries = 1/4 * M - 1/16 * M = 3/16 * M\n\nFinally, we are told that he was left with 1/3 of the original sum of money:\nRemaining money after buying batteries = 1/3 * M\n\nNow we can set up the equation:\n3/16 * M = 1/3 * M\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    M = symbols('M')\n\n    # Equation representing the remaining money after buying batteries\n    eq = Eq(3/16 * M, 1/3 * M)\n\n    # Solve the equation\n    solution = solve(eq, M)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variable `M`, sets up the equation based on the problem statement, solves for `M`, and returns the original sum of money David had."]}
{"dataset_version": "2023-07-07", "queId": "e5c1b794ac8648ec850e93b55dab48de", "difficulty": "3", "qtype": "short_answer", "problem": "Rasidah had $$$48$$ less than Chai Seng. Rasidah spent~$\\tfrac{3}{5}$~of her money and Chai Seng spent~$\\tfrac{6}{7}$~of his money. In the end, Chai Seng had~$\\tfrac{1}{2}$~as much money left as Rasidah. Find the amount of money Rasidah had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "120.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the amount of money Rasidah had at first as `R` and the amount of money Chai Seng had at first as `C`.\n\nFrom the problem, we have the following information:\n\n1. Rasidah had $48 less than Chai Seng: `R = C - 48`\n2. Rasidah spent 3/5 of her money: `R - 3/5 * R` is the amount left with Rasidah.\n3. Chai Seng spent 6/7 of his money: `C - 6/7 * C` is the amount left with Chai Seng.\n4. In the end, Chai Seng had 1/2 as much money left as Rasidah: `C - 6/7 * C = 1/2 * (R - 3/5 * R)`\n\nNow we can formulate the equations:\n\n1) `R = C - 48`\n2) `C - 6/7 * C = 1/2 * (R - 3/5 * R)`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve, Rational\n\n    # Define variables\n    R, C = symbols('R C')\n\n    # Equation 1: Rasidah had $48 less than Chai Seng\n    eq1 = Eq(R, C - 48)\n\n    # Equation 2: In the end, Chai Seng had 1/2 as much money left as Rasidah\n    eq2 = Eq(C - 6/7 * C, 1/2 * (R - 3/5 * R))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (R, C))\n    result = solution[R]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the equations based on the problem statement and solves them using the sympy library in Python. The final answer will be the value of `R`, which represents the amount of money Rasidah had at first."]}
{"dataset_version": "2023-07-07", "queId": "de23539233a540d8a78444b87207ab4f", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ had $$9$$ big boxes of cookies. Each big box had $$660$$ cookies. $$A$$ packed the cookies into small boxes. Each small box could contain $$600$$ cookies. How many small boxes were needed? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "10", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of cookies as `C`, the number of big boxes as `B`, the number of cookies in each big box as `N_big`, the number of small boxes needed as `S`, and the number of cookies in each small box as `N_small`.\n\nGiven:\n- `B = 9` (number of big boxes)\n- `N_big = 660` (number of cookies in each big box)\n- `N_small = 600` (number of cookies in each small box)\n\nThe total number of cookies `C` is the product of the number of big boxes and the number of cookies in each big box:\n`C = B * N_big`\n\nThe number of small boxes needed `S` is the total number of cookies divided by the number of cookies in each small box. Since we cannot have a fraction of a box, we need to round up to the nearest whole number if there is a remainder:\n`S = ceil(C / N_small)`\n\n**Step 2: Solve Equations Using Python Code:**\n\nTo solve this equation, we will use Python's math library to perform the ceiling function.\n\n```python\nimport math\n\ndef solution():\n    # Given values\n    B = 9  # Number of big boxes\n    N_big = 660  # Number of cookies in each big box\n    N_small = 600  # Number of cookies in each small box\n\n    # Calculate the total number of cookies\n    C = B * N_big\n\n    # Calculate the number of small boxes needed\n    S = math.ceil(C / N_small)\n\n    # Return the final answer\n    return S\n```"]}
{"dataset_version": "2023-07-07", "queId": "1b7cc025e9e347ce80741fb93834ea0c", "difficulty": "3", "qtype": "short_answer", "problem": "There is a planet in the universe that uses Base 3 notation. When Mr. Lv moved to this planet and changed his ID card, he had to change his age from Base 10 to Base 3 notation. Mr. Lv found that, as long as the original Base 10 age added a \"0 \" at the end, is the age in Base 3. How old is Mr. Lv? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote Mr. Lv's age in base 10 as `A`. According to the problem, when a \"0\" is added at the end of `A` in base 10, it represents his age in base 3.\n\nIn base 10, adding a \"0\" at the end of a number is equivalent to multiplying the number by 10. Therefore, if `A` is Mr. Lv's age in base 10, then `10A` is the number we get by adding a \"0\" at the end.\n\nIn base 3, the digits can only be 0, 1, or 2. The problem states that `10A` in base 10 is equal to `A` in base 3. This means that `A` in base 10, when converted to base 3, should give us the same digits as `A` in base 10, but with a base 3 interpretation.\n\nWe need to find such an `A` that satisfies this condition.\n\n## Step 2: Solve Equations Using Python Code:\n\nTo solve this problem, we will iterate over possible ages in base 10 and check if their base 3 representation matches the condition given in the problem.\n\n```python\ndef solution():\n    # Iterate over possible ages\n    for age in range(1, 100):  # Assuming Mr. Lv's age is less than 100\n        # Convert the age to base 3 and check the condition\n        if int(str(age), 3) == age * 10:\n            result = age\n            break\n    return result\n```\n\nThis code will find the age `A` in base 10 such that when converted to base 3, it will be the same as `A` with a \"0\" added at the end in base 10."]}
{"dataset_version": "2023-07-07", "queId": "5da1575e00d448078124140f108f6b1b", "difficulty": "3", "qtype": "short_answer", "problem": "Segments $\\overline{AB}$, $\\overline{AC}$ and $\\overline{AD}$ are edges of a cube and $\\overline{AG}$ is a diagonal through the center of the cube. Point $P$ satisfies $PB=60\\sqrt{10}$, $PC=60\\sqrt{5}$, $PD=120\\sqrt{2}$ and $PG=36\\sqrt{7}$. What is $PA$? (2021 AIME I Problem 6) ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the side length of the cube as `a`. Since `AB`, `AC`, and `AD` are edges of the cube, we have `AB = AC = AD = a`.\n\nThe diagonal `AG` of the cube can be found using the Pythagorean theorem in three dimensions, since it is the diagonal of a cube with side length `a`:\n`AG = sqrt(a^2 + a^2 + a^2) = a*sqrt(3)`\n\nGiven that `PG = 36*sqrt(7)`, we can express `PA` in terms of `a` and `PG` using the Pythagorean theorem in three dimensions again, because `PAG` is a right triangle with `AG` as the hypotenuse:\n`PA^2 + PG^2 = AG^2`\n`PA^2 + (36*sqrt(7))^2 = (a*sqrt(3))^2`\n\nGiven `PB = 60*sqrt(10)`, `PC = 60*sqrt(5)`, and `PD = 120*sqrt(2)`, we can express `PA` in terms of `a` and `PB`, `PC`, `PD` respectively, using the Pythagorean theorem in three dimensions, because `PAB`, `PAC`, and `PAD` are right triangles:\n`PA^2 + PB^2 = AB^2`\n`PA^2 + (60*sqrt(10))^2 = a^2`\n\n`PA^2 + PC^2 = AC^2`\n`PA^2 + (60*sqrt(5))^2 = a^2`\n\n`PA^2 + PD^2 = AD^2`\n`PA^2 + (120*sqrt(2))^2 = a^2`\n\nNow we have a system of four equations:\n1) `PA^2 + (36*sqrt(7))^2 = (a*sqrt(3))^2`\n2) `PA^2 + (60*sqrt(10))^2 = a^2`\n3) `PA^2 + (60*sqrt(5))^2 = a^2`\n4) `PA^2 + (120*sqrt(2))^2 = a^2`\n\n## Step 2: Solve Equations Using Python Code\n\nWe will use the sympy library in Python to solve these equations.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve, sqrt\n\n    # Define variables\n    PA, a = symbols('PA a')\n\n    # Define the equations based on the problem statement\n    eq1 = Eq(PA**2 + (36*sqrt(7))**2, (a*sqrt(3))**2)\n    eq2 = Eq(PA**2 + (60*sqrt(10))**2, a**2)\n    eq3 = Eq(PA**2 + (60*sqrt(5))**2, a**2)\n    eq4 = Eq(PA**2 + (120*sqrt(2))**2, a**2)\n\n    # Solve the system of equations\n    # Since all equations are equal to a^2, we can equate them to each other\n    eqs = [eq2.lhs - eq3.lhs, eq2.lhs - eq4.lhs, eq1.lhs - eq2.lhs]\n    solution = solve(eqs, (PA, a))\n    \n    # There might be multiple solutions, we are interested in the positive real solution for PA\n    PA_solution = [sol[PA] for sol in solution if sol[PA].is_real and sol[PA] > 0]\n    \n    # Return the final answer\n    return PA_solution[0]\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the equations based on the problem statement and solves for `PA` using sympy's `solve` function. We are interested in the positive real solution for `PA`, which is the distance from point `P` to vertex `A` of the cube."]}
{"dataset_version": "2023-07-07", "queId": "e55659b67fec48ffadc5d661886b3f84", "difficulty": "3", "qtype": "short_answer", "problem": "A group of $$200$$ students were interviewed to find out whether they enjoyed swimming, jogging, swimming and jogging, or neither of the two sports. $$82$$\\% of the students indicated that they liked swimming, $$54$$\\% of them indicated that they liked jogging and $$16$$\\% indicated that they did not like either of the two sports. How many students enjoyed both swimming and jogging? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Finding the Base"], "answer": "104.0", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the following:\n- `S` as the number of students who like swimming.\n- `J` as the number of students who like jogging.\n- `B` as the number of students who like both swimming and jogging.\n- `N` as the number of students who like neither swimming nor jogging.\n- `T` as the total number of students.\n\nGiven:\n- `T = 200`\n- `82%` of `T` like swimming, so `S = 0.82 * T`\n- `54%` of `T` like jogging, so `J = 0.54 * T`\n- `16%` of `T` like neither, so `N = 0.16 * T`\n\nAccording to the principle of inclusion-exclusion:\n- The number of students who like swimming or jogging or both is `S + J - B`.\n- The number of students who like swimming or jogging (but not both) plus the number who like neither is `T`.\n\nSo we have the equation:\n`S + J - B + N = T`\n\nSubstituting the given percentages and the total number of students, we get:\n`0.82 * T + 0.54 * T - B + 0.16 * T = T`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow we will solve the equation for `B` using Python code.\n\n```python\ndef solution():\n    # Total number of students\n    T = 200\n    \n    # Students who like swimming\n    S = 0.82 * T\n    \n    # Students who like jogging\n    J = 0.54 * T\n    \n    # Students who like neither\n    N = 0.16 * T\n    \n    # Solve for B (students who like both swimming and jogging)\n    # S + J - B + N = T\n    # B = S + J + N - T\n    B = S + J + N - T\n    \n    # Return the final answer\n    return B\n\n# Uncomment the line below to test the function\n# print(solution())\n```\n\nThis code will calculate the number of students who enjoy both swimming and jogging."]}
{"dataset_version": "2023-07-07", "queId": "f8f2a1e9445b4dcda537fd994f74f84b", "difficulty": "3", "qtype": "short_answer", "problem": "Jeremy had a total of $$116$$ notes that were either $$$5$$ or $$$10$$ notes. After he spent $$60$$\\% of the $$$10$$ notes and $$25$$\\% of the $$$5$$ notes on a bag, he was left with~$\\tfrac{4}{7}$~as many $$$10$$ notes as $$$5$$ notes. How much did the bag cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "430.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of $10 notes as `T` and the number of $5 notes as `F`.\n\nFrom the problem, we have the following information:\n\n1. The total number of notes is 116: `T + F = 116`\n2. Jeremy spent 60% of the $10 notes: `0.6 * T` notes were spent.\n3. Jeremy spent 25% of the $5 notes: `0.25 * F` notes were spent.\n4. After spending, the number of $10 notes is 4/7 of the number of $5 notes: `T - 0.6 * T = (4/7) * (F - 0.25 * F)`\n\nWe also want to find out how much the bag cost. The cost of the bag is the sum of the value of the notes spent:\n\nCost of the bag = `Value of $10 notes spent + Value of $5 notes spent`\nCost of the bag = `10 * (0.6 * T) + 5 * (0.25 * F)`\n\nNow we have a system of equations:\n1) `T + F = 116`\n2) `0.4 * T = (4/7) * (0.75 * F)`\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    T, F = symbols('T F')\n\n    # Equations based on the problem statement\n    eq1 = Eq(T + F, 116)\n    eq2 = Eq(0.4 * T, (4/7) * (0.75 * F))\n\n    # Solve the system of equations for T and F\n    solution = solve((eq1, eq2), (T, F))\n    T_value = solution[T]\n    F_value = solution[F]\n\n    # Calculate the cost of the bag\n    cost_of_bag = 10 * (0.6 * T_value) + 5 * (0.25 * F_value)\n\n    # Return the final answer\n    return cost_of_bag\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the equations to find the values of `T` and `F`, and then calculate the cost of the bag based on the number of notes spent. The final answer will be the cost of the bag."]}
{"dataset_version": "2023-07-07", "queId": "f11cc314015c4356be0ae68d5c3ced7c", "difficulty": "3", "qtype": "short_answer", "problem": "The ratio of Don\\textquotesingle s stickers to Ben\\textquotesingle s stickers was $2 : 3$. After Don\\textquotesingle s bought another $10$ stickers and Ben lost $5$ stickers, the ratio became $6 : 7$. Find the number of stickers Don had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Ratios and Proportions"], "answer": "50.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Don originally had as `D` and the number of stickers Ben originally had as `B`.\n\nAccording to the problem, the initial ratio of Don's stickers to Ben's stickers was 2:3. This can be expressed as:\n1) `D/B = 2/3`\n\nAfter Don bought another 10 stickers and Ben lost 5 stickers, the ratio became 6:7. This can be expressed as:\n2) `(D + 10)/(B - 5) = 6/7`\n\nNow we have a system of two equations:\n1) `D/B = 2/3`\n2) `(D + 10)/(B - 5) = 6/7`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    D, B = symbols('D B')\n\n    # Define the equations based on the problem\n    eq1 = Eq(D/B, 2/3)\n    eq2 = Eq((D + 10)/(B - 5), 6/7)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (D, B))\n    result = solution[D]  # We want to find the number of stickers Don had at first\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the equations based on the problem statement and solves them using the sympy library. The final answer, which is the number of stickers Don had at first, is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "55d9d0163f3a466c8356b0f2120c7887", "difficulty": "3", "qtype": "short_answer", "problem": "There were a total of $$105$$ apples and pears at first. After~$\\tfrac{1}{3}$~of the apples and~$\\tfrac{2}{5}$~of the pears were sold, there were~$\\tfrac{5}{6}$~as many apples as pears left. Find the total number of apples and pears sold. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "39", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of apples as `A` and the number of pears as `P`.\n\nFrom the problem, we have the following information:\n1. The total number of apples and pears at first is 105: `A + P = 105`\n2. After selling, the number of apples left is `A - (1/3)A` and the number of pears left is `P - (2/5)P`.\n3. After selling, there are `5/6` as many apples as pears left: `(A - (1/3)A) = (5/6)(P - (2/5)P)`\n\nWe need to find the total number of apples and pears sold, which is `(1/3)A + (2/5)P`.\n\nNow we can formulate the equations:\n1) `A + P = 105`\n2) `(2/3)A = (5/6)(3/5)P` (after simplifying the equation for the number of apples and pears left)\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve, Rational\n\n    # Define variables\n    A, P = symbols('A P')\n\n    # Equation for the total number of apples and pears\n    eq1 = Eq(A + P, 105)\n\n    # Equation after selling the fruits\n    eq2 = Eq(Rational(2, 3)*A, Rational(5, 6)*Rational(3, 5)*P)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, P))\n    apples_sold = Rational(1, 3) * solution[A]\n    pears_sold = Rational(2, 5) * solution[P]\n    total_sold = apples_sold + pears_sold\n\n    # Return the final answer\n    return total_sold\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the equations and return the total number of apples and pears sold."]}
{"dataset_version": "2023-07-07", "queId": "1a6a4bcf3e384d149434758e9e9ee954", "difficulty": "3", "qtype": "short_answer", "problem": "Sam and Peter had some stickers in the ratio 7 : 5. Sam and Peter each gave 20\\% of their stivkers to John. As a result, John's stickers increased by 80\\%. If Sam had 20 stickers more than John in the end, how many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "38.4615384615385", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Sam had originally as `S` and the number of stickers Peter had originally as `P`. Let's denote the number of stickers John had originally as `J`.\n\nAccording to the problem, Sam and Peter had stickers in the ratio 7:5, so we can write:\n1) `S/P = 7/5`\n\nSam and Peter each gave 20% of their stickers to John. This means Sam gave `0.20S` stickers to John and Peter gave `0.20P` stickers to John. After giving away their stickers, Sam had `0.80S` stickers left and Peter had `0.80P` stickers left.\n\nJohn's stickers increased by 80%, which means the total number of stickers he received from Sam and Peter is equal to `0.80J`. So we can write:\n2) `0.20S + 0.20P = 0.80J`\n\nFinally, after the transaction, Sam had 20 stickers more than John. This means:\n3) `0.80S = J + 20`\n\nNow we have a system of three equations:\n1) `S/P = 7/5`\n2) `0.20S + 0.20P = 0.80J`\n3) `0.80S = J + 20`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    S, P, J = symbols('S P J')\n\n    # Equation 1: Ratio of Sam's to Peter's stickers\n    eq1 = Eq(S/P, 7/5)\n\n    # Equation 2: Stickers given to John by Sam and Peter\n    eq2 = Eq(0.20*S + 0.20*P, 0.80*J)\n\n    # Equation 3: Sam has 20 more stickers than John after giving away\n    eq3 = Eq(0.80*S, J + 20)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (S, P, J))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and solves for the number of stickers Peter had at first. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "7463bf137d564fbabe4d8eb8c8c7ee34", "difficulty": "3", "qtype": "short_answer", "problem": "David had a total of $$72$$ notes. The notes were either $$$2$$ notes or $$$10$$ notes. After he spent $$90$$\\% of the $$$10$$ notes and $$75$$\\% of the $$$2$$ notes on a gift, he was left with twice as many $$$10$$ notes as $$$2$$ notes. How much did the gift cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "558.000000000000", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the number of $10 notes as `T` and the number of $2 notes as `D`.\n\nFrom the problem, we have the following information:\n\n1. The total number of notes is 72: `T + D = 72`\n2. David spent 90% of the $10 notes: `0.9 * T` notes were spent.\n3. David spent 75% of the $2 notes: `0.75 * D` notes were spent.\n4. After spending, he was left with twice as many $10 notes as $2 notes: `T - 0.9 * T = 2 * (D - 0.75 * D)`\n\nWe also want to find the total cost of the gift, which is the sum of the value of the notes spent:\n\n5. The cost of the gift: `Gift = 10 * 0.9 * T + 2 * 0.75 * D`\n\nNow we have a system of equations:\n\n1) `T + D = 72`\n2) `0.1 * T = 2 * 0.25 * D`\n3) `Gift = 10 * 0.9 * T + 2 * 0.75 * D`\n\n## Step 2: Solve Equations Using Python Code\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    T, D = symbols('T D')\n\n    # Equations based on the problem\n    eq1 = Eq(T + D, 72)  # Total number of notes\n    eq2 = Eq(0.1 * T, 2 * 0.25 * D)  # Twice as many $10 notes as $2 notes after spending\n\n    # Solve the system of equations for T and D\n    notes_solution = solve((eq1, eq2), (T, D))\n    T_notes = notes_solution[T]\n    D_notes = notes_solution[D]\n\n    # Calculate the cost of the gift\n    gift_cost = 10 * 0.9 * T_notes + 2 * 0.75 * D_notes\n\n    # Return the final answer\n    return gift_cost\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the equations and return the cost of the gift."]}
{"dataset_version": "2023-07-07", "queId": "4f9c4a2d52664632815cca87ff3639cd", "difficulty": "3", "qtype": "short_answer", "problem": "There are $1007$ parterres in a straight line. A sprinkler must be installed in the middle of each two parterres. What is the minimum number of sprinklers needed to be installed at least? (ignoring the size of~parterres) ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "1006", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the number of sprinklers needed as `N`.\n\nSince there are 1007 parterres in a straight line, and a sprinkler must be installed in the middle of each two parterres, we can think of the parterres and sprinklers as alternating in the line. \n\nIf we have `P` parterres, then we have `P - 1` spaces between them where sprinklers can be installed. Therefore, the number of sprinklers needed is one less than the number of parterres.\n\nSo the equation is:\n`N = P - 1`\n\nGiven that `P = 1007`, we can substitute this value into the equation to find `N`.\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer\n\nNow, let's solve this simple equation using Python code.\n\n```python\ndef solution():\n    # Number of parterres\n    P = 1007\n    \n    # Number of sprinklers needed is one less than the number of parterres\n    N = P - 1\n    \n    # Return the final answer\n    return N\n\n# Call the function and print the result for verification\nprint(solution())\n```\n\nThis code will return the minimum number of sprinklers needed to be installed."]}
{"dataset_version": "2023-07-07", "queId": "7b38d775bba24657ba681d25822af411", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Double Base}  Marry had~$\\dfrac{7}{5}$~as many stickers as Alexis.~Marry and Alexis each gave 20\\% of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by 80\\%. If Mary had 20 stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "500.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Marry, Alexis, and Charlotte originally had as `M`, `A`, and `C` respectively.\n\nFrom the problem, we have the following information:\n\n1. Marry had $\\frac{7}{5}$ as many stickers as Alexis, so we can write:\n   $$ M = \\frac{7}{5}A $$\n\n2. Marry and Alexis each gave 20% of their stickers to Charlotte. This means:\n   $$ M - 0.20M = M(1 - 0.20) $$\n   $$ A - 0.20A = A(1 - 0.20) $$\n   Charlotte's stickers after receiving from Marry and Alexis:\n   $$ C + 0.20M + 0.20A $$\n\n3. Charlotte's stickers increased by 80%, which means:\n   $$ C + 0.20M + 0.20A = C(1 + 0.80) $$\n\n4. Marry had 20 stickers more than Charlotte in the end, so:\n   $$ M(1 - 0.20) = C(1 + 0.80) + 20 $$\n\nNow we have a system of equations to solve for `M`, `A`, and `C`.\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M, A, C = symbols('M A C')\n\n    # Equations based on the problem statement\n    eq1 = Eq(M, 7/5 * A)  # Marry had 7/5 as many stickers as Alexis\n    eq2 = Eq(C + 0.20*M + 0.20*A, C*1.80)  # Charlotte's stickers increased by 80%\n    eq3 = Eq(M*0.80, C*1.80 + 20)  # Marry had 20 stickers more than Charlotte in the end\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (M, A, C))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the number of stickers Alexis had at first. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "f1a2fc61d2954912aabcdce67bec8fd1", "difficulty": "3", "qtype": "short_answer", "problem": "$$Sam$$ and $$Tim$$ had $$1170$$ cookies. After $$Sam$$ ate~$\\tfrac{1}{4}$~of her cookie and $$Tim$$ bought~$\\tfrac{1}{5}$~more cookies, $$Sam$$ had $$663$$ fewer cookies than $$Tim$$. How many cookies did $$Sam$$ eat? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "95.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of cookies Sam originally had as `S` and the number of cookies Tim originally had as `T`.\n\nFrom the problem, we have the following information:\n\n1. Sam and Tim had a total of 1170 cookies: `S + T = 1170`\n2. Sam ate 1/4 of her cookies: `S - (1/4)S = (3/4)S`\n3. Tim bought 1/5 more cookies: `T + (1/5)T = (6/5)T`\n4. After these transactions, Sam had 663 fewer cookies than Tim: `(3/4)S = (6/5)T - 663`\n\nNow we have a system of three equations:\n1) `S + T = 1170`\n2) `(3/4)S = S - (1/4)S` (This is an intermediate step and not an equation we will use to solve the problem)\n3) `(3/4)S = (6/5)T - 663`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    S, T = symbols('S T')\n\n    # Equation 1: Total number of cookies\n    eq1 = Eq(S + T, 1170)\n\n    # Equation 2: Sam has 663 fewer cookies than Tim after transactions\n    eq2 = Eq((3/4)*S, (6/5)*T - 663)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (S, T))\n    sam_cookies_initial = solution[S]\n    sam_cookies_eaten = (1/4) * sam_cookies_initial\n\n    # Return the final answer\n    return sam_cookies_eaten\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the system of equations to find the number of cookies Sam originally had and then calculate how many cookies Sam ate."]}
{"dataset_version": "2023-07-07", "queId": "f2d1624bd6914f419871977e97929aae", "difficulty": "3", "qtype": "short_answer", "problem": "$\\tfrac{3}{4}$~of Chelsia\\textquotesingle s money is the same as~$\\tfrac{5}{6}$~of Brian\\textquotesingle s money. If Chelsia has $$$24$$ more than Brian, how much money do Chelsia and Brian have altogether? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "456.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote Chelsia's money as `C` and Brian's money as `B`.\n\nAccording to the problem, $\\frac{3}{4}$ of Chelsia's money is the same as $\\frac{5}{6}$ of Brian's money. This can be written as an equation:\n$$\\frac{3}{4}C = \\frac{5}{6}B$$\n\nIt is also given that Chelsia has $24 more than Brian, which can be written as:\n$$C = B + 24$$\n\nNow we have a system of two equations:\n1) $\\frac{3}{4}C = \\frac{5}{6}B$\n2) $C = B + 24$\n\nWe want to find the total amount of money Chelsia and Brian have together, which is $C + B$.\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, B = symbols('C B')\n\n    # Formulate equations\n    eq1 = Eq(3/4 * C, 5/6 * B)\n    eq2 = Eq(C, B + 24)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, B))\n    C_value = solution[C]\n    B_value = solution[B]\n\n    # Calculate the total amount of money\n    total_money = C_value + B_value\n\n    # Return the final answer\n    return total_money\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the equations to find the individual amounts of money Chelsia and Brian have, and then calculates the total amount of money they have together. The final result is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "c6d0a3426bdd48c09f8e5ed6be864293", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "620.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of stickers Peter originally had as `P` and the number of stickers Sam originally had as `S`.\n\nFrom the problem, we have the following information:\n\n1. Sam had 40 stickers more than Peter: `S = P + 40`\n2. Sam gave 20% of his stickers to Peter: `P + 0.20 * S` is the new amount of stickers Peter has.\n3. Peter gave 25% of his new amount of stickers to Sam: `S + 0.25 * (P + 0.20 * S)` is the new amount of stickers Sam has.\n4. In the end, Sam had 96 stickers more than Peter: `S + 0.25 * (P + 0.20 * S) = P + 0.20 * S + 96`\n\nNow we can formulate the equations:\n\n1) `S = P + 40`\n2) `S + 0.25 * (P + 0.20 * S) = P + 0.20 * S + 96`\n\n## Step 2: Solve Equations Using Python Code:\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, S = symbols('P S')\n\n    # Equation 1: Sam had 40 stickers more than Peter\n    eq1 = Eq(S, P + 40)\n\n    # Equation 2: In the end, Sam had 96 stickers more than Peter\n    eq2 = Eq(S + 0.25 * (P + 0.20 * S), P + 0.20 * S + 96)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, S))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the necessary variables and equations based on the problem statement and then solves the system of equations to find the number of stickers Peter had at first. The `solve` function from the sympy library is used to find the solution, and the final result is returned."]}
{"dataset_version": "2023-07-07", "queId": "39ff6ce753bc44909a9a09937c88d468", "difficulty": "3", "qtype": "short_answer", "problem": "Marry and Alexis had some stickers in the ratio 7 : 5. Marry and Alexis each gave 20\\% of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by 80\\%. If Mary had 20 stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-25.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Marry had originally as `M` and the number of stickers Alexis had originally as `A`. According to the problem, the ratio of their stickers is 7:5, so we can write:\n\n1) `M / A = 7 / 5`\n\nWhen Marry and Alexis each gave 20% of their stickers to Charlotte, they were left with 80% of their original number of stickers. Let's denote the number of stickers Charlotte originally had as `C`. After receiving the stickers, Charlotte's number of stickers increased by 80%, which means she had `1.8C` stickers in the end.\n\n2) `0.8M + 0.8A = 1.8C`\n\nWe also know that Marry had 20 stickers more than Charlotte in the end:\n\n3) `0.8M = 1.8C + 20`\n\nNow we have a system of three equations with three unknowns:\n1) `M / A = 7 / 5`\n2) `0.8M + 0.8A = 1.8C`\n3) `0.8M = 1.8C + 20`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M, A, C = symbols('M A C')\n\n    # Formulate equations based on the problem statement\n    eq1 = Eq(M / A, 7 / 5)\n    eq2 = Eq(0.8*M + 0.8*A, 1.8*C)\n    eq3 = Eq(0.8*M, 1.8*C + 20)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (M, A, C))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will return the number of stickers Alexis had at first."]}
{"dataset_version": "2023-07-07", "queId": "a543d8cd5bcf46c784fc4a1226cbbd55", "difficulty": "3", "qtype": "short_answer", "problem": "At an art exhibition, $$37 \\%$$ of the visitors were men and the rest were women and children in the ratio of $$4 : 5$$. If there are $$12$$ more men than children, how many women were at the art exhibition? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "168.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of visitors as `V`, the number of men as `M`, the number of women as `W`, and the number of children as `C`.\n\nFrom the problem, we have the following information:\n\n1. `37%` of the visitors were men: `M = 0.37 * V`\n2. The rest were women and children, so `W + C = V - M`\n3. The ratio of women to children is `4:5`, so `W/C = 4/5` or `5W = 4C`\n4. There are `12` more men than children: `M = C + 12`\n\nNow we have a system of equations:\n1) `M = 0.37 * V`\n2) `W + C = V - M`\n3) `5W = 4C`\n4) `M = C + 12`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    V, M, W, C = symbols('V M W C')\n\n    # Equations based on the problem statement\n    eq1 = Eq(M, 0.37 * V)\n    eq2 = Eq(W + C, V - M)\n    eq3 = Eq(5 * W, 4 * C)\n    eq4 = Eq(M, C + 12)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3, eq4), (V, M, W, C))\n    result = solution[W]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the number of women at the art exhibition. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "ffe4e2fccc06432695daf3045845a872", "difficulty": "3", "qtype": "short_answer", "problem": "Samuel spent~$\\tfrac{1}{6}$~of his money and an additional $$$5$$ on a DVD. He then spent~$\\tfrac{2}{5}$~of his remaining money and an additional $$$12$$ on a number of magazines. If he had $$$24$$ left, how much money did he have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "78.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total amount of money Samuel had at first as `M`.\n\nAfter spending 1/6 of his money and an additional $5 on a DVD, he is left with:\n`M - (1/6)M - 5`\n\nThen, he spends 2/5 of the remaining money and an additional $12 on magazines. The remaining money after buying the magazines is:\n`(M - (1/6)M - 5) - (2/5)(M - (1/6)M - 5) - 12`\n\nWe are given that after all the spending, he has $24 left. Therefore, we can set up the equation:\n`(M - (1/6)M - 5) - (2/5)(M - (1/6)M - 5) - 12 = 24`\n\nNow we need to solve this equation for `M`.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    M = symbols('M')\n\n    # Formulate the equation\n    remaining_after_DVD = M - (1/6)*M - 5\n    remaining_after_magazines = remaining_after_DVD - (2/5)*remaining_after_DVD - 12\n    eq = Eq(remaining_after_magazines, 24)\n\n    # Solve the equation\n    solution = solve(eq, M)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Uncomment the line below to test the function\n# print(solution())\n```\n\nThis code defines the variable `M`, sets up the equation based on the problem statement, solves for `M`, and then returns the result. Uncomment the `print(solution())` line to execute the function and get the result."]}
{"dataset_version": "2023-07-07", "queId": "2f184eae91df42e18de5b645882a1cc1", "difficulty": "3", "qtype": "short_answer", "problem": "$\\tfrac{1}{6}$~of $$Tim\\textquotesingle s$$ cookies were equal to~$\\tfrac{3}{8}$~of $$Tyler\\textquotesingle s$$ cookies. After $$Tyler$$ sold $$96$$ cookies, $$Tim$$ had $$9$$ times as many cookies as $$Tyler$$. How many cookies were there at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "(288.000000000000, 128.000000000000)", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of cookies Tim had originally as `T` and the number of cookies Tyler had originally as `Y`.\n\nAccording to the problem, we have the following relationships:\n\n1) $\\frac{1}{6}T = \\frac{3}{8}Y$ (Tim's $\\frac{1}{6}$ of cookies is equal to Tyler's $\\frac{3}{8}$ of cookies)\n\n2) After Tyler sold 96 cookies, Tim had 9 times as many cookies as Tyler. So, $T = 9(Y - 96)$ (Tim's cookies are 9 times the remaining cookies of Tyler)\n\nNow we have a system of two equations:\n1) $\\frac{1}{6}T = \\frac{3}{8}Y$\n2) $T = 9(Y - 96)$\n\n## Step 2: Solve Equations Using Python Code:\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    T, Y = symbols('T Y')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(1/6 * T, 3/8 * Y)\n    eq2 = Eq(T, 9 * (Y - 96))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (T, Y))\n    result = solution[T], solution[Y]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the original number of cookies Tim and Tyler had. The result is returned as a tuple containing the number of cookies for Tim and Tyler, respectively."]}
{"dataset_version": "2023-07-07", "queId": "f4a9a527d7144792b53639888c6da554", "difficulty": "3", "qtype": "short_answer", "problem": "Sally had some cupcakes. She had $72$ more chocolate cupcakes than vanilla cupcakes. She had $36$ lesser blueberry cupcakes than vanilla cupcakes. After selling $\\dfrac{1}{6}$~of the chocolate cupcakes, $\\dfrac{2}{3}$~of the vanilla cupcakes and $\\dfrac{7}{9}$~of the blueberry cupcakes, Sally is left with $427$ cupcakes altogether. How many chocolate cupcakes did Sally sell? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "57.0000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of vanilla cupcakes as `V`, the number of chocolate cupcakes as `C`, and the number of blueberry cupcakes as `B`.\n\nFrom the problem, we have the following relationships:\n1. Sally had 72 more chocolate cupcakes than vanilla cupcakes: `C = V + 72`\n2. She had 36 fewer blueberry cupcakes than vanilla cupcakes: `B = V - 36`\n\nAfter selling a fraction of each type of cupcakes, Sally is left with a total of 427 cupcakes:\n1. After selling 1/6 of the chocolate cupcakes, she has `5/6 * C` chocolate cupcakes left.\n2. After selling 2/3 of the vanilla cupcakes, she has `1/3 * V` vanilla cupcakes left.\n3. After selling 7/9 of the blueberry cupcakes, she has `2/9 * B` blueberry cupcakes left.\n\nThe total number of cupcakes left is the sum of the cupcakes left from each type:\n`5/6 * C + 1/3 * V + 2/9 * B = 427`\n\nNow we have a system of three equations:\n1) `C = V + 72`\n2) `B = V - 36`\n3) `5/6 * C + 1/3 * V + 2/9 * B = 427`\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    V, C, B = symbols('V C B')\n\n    # Equations based on the problem statement\n    eq1 = Eq(C, V + 72)\n    eq2 = Eq(B, V - 36)\n    eq3 = Eq(5/6 * C + 1/3 * V + 2/9 * B, 427)\n\n    # Solve the system of equations\n    solutions = solve((eq1, eq2, eq3), (V, C, B))\n    C_initial = solutions[C]\n    C_sold = C_initial - (5/6 * C_initial)\n\n    # Return the number of chocolate cupcakes Sally sold\n    return C_sold\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the system of equations to find the initial number of chocolate cupcakes (`C_initial`) and then calculate the number of chocolate cupcakes Sally sold (`C_sold`). The result will be printed out."]}
{"dataset_version": "2023-07-07", "queId": "620fcfd4b5dc4851a21f52802f067616", "difficulty": "3", "qtype": "short_answer", "problem": "A box contains some red marbles and white marbles.  The ratio of red to white marbles in this box is $3:2$.  Pip puts some red balls into the box, and the ratio of red to white balls becomes $5:3$.  Then Bud puts some white balls into the box, and the ratio of red to white balls becomes $5:4$.  Given that the number of balls put by Bud is $100$ more than the number of balls put by Pip.  How many white balls are there in the box at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Ratios and Proportions"], "answer": "", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the original number of red marbles as `3x` and the original number of white marbles as `2x`, where `x` is a positive integer that represents the common factor in the ratio.\n\nAfter Pip adds some red marbles, let's denote the number of red marbles he adds as `r`. The new ratio of red to white marbles becomes `5:3`. So, the new number of red marbles is `3x + r` and the number of white marbles remains `2x`. The equation for the new ratio is:\n1) `(3x + r) / 2x = 5/3`\n\nThen, Bud adds some white marbles. Let's denote the number of white marbles he adds as `w`. The new ratio of red to white marbles becomes `5:4`. So, the new number of white marbles is `2x + w`. The equation for the new ratio is:\n2) `(3x + r) / (2x + w) = 5/4`\n\nWe are also given that the number of white marbles added by Bud is 100 more than the number of red marbles added by Pip:\n3) `w = r + 100`\n\nWe need to solve these equations to find the value of `2x`, which represents the original number of white marbles.\n\n## Step 2: Solve Equations Using Python Code\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    x, r, w = symbols('x r w', integer=True)\n\n    # Formulate equations based on the problem statement\n    eq1 = Eq((3*x + r) / (2*x), 5/3)\n    eq2 = Eq((3*x + r) / (2*x + w), 5/4)\n    eq3 = Eq(w, r + 100)\n\n    # Solve the system of equations\n    solutions = solve((eq1, eq2, eq3), (x, r, w))\n    \n    # Since we are looking for the original number of white marbles, which is 2x\n    # We need to find the solution where x is a positive integer\n    for sol in solutions:\n        if sol[x] > 0:\n            result = 2 * sol[x]\n            break\n\n    # Return the final answer\n    return result\n\n# Uncomment the line below to test the function\n# print(solution())\n```\n\nThis code defines the necessary variables and equations, then solves the system of equations to find the original number of white marbles. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "cc66cd3f11294d1984b5cf049794398d", "difficulty": "3", "qtype": "short_answer", "problem": "Somi gave $80 \\%$ of her chocolates to her students and $\\frac{2}{5}$ of the remaining chocolates to her children. If she had $$108$$ chocolates left, how many chocolates did she have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "900.0", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the total number of chocolates Somi had at first as `C`.\n\nAccording to the problem, Somi gave away 80% of her chocolates to her students. This means she was left with 20% of her chocolates:\n`C - 0.8C = 0.2C`\n\nThen, she gave away 2/5 of the remaining chocolates to her children:\n`0.2C - (2/5) * 0.2C = (3/5) * 0.2C`\n\nAfter giving chocolates to her children, she had 108 chocolates left:\n`(3/5) * 0.2C = 108`\n\nNow we have one equation with one unknown:\n1) `(3/5) * 0.2C = 108`\n\n## Step 2: Solve Equations Using Python Code:\n\n```\ndef solution():\n    # Define the remaining chocolates after giving to children\n    remaining_chocolates = 108\n\n    # Calculate the total number of chocolates before giving to children\n    # We use the inverse of the operations that were applied to the original number of chocolates\n    chocolates_after_students = remaining_chocolates / ((3/5) * 0.2)\n\n    # Return the final answer\n    return chocolates_after_students\n\n# Call the function and print the result\nprint(solution())\n```\n\nNow, let's implement the solution in Python code."]}
{"dataset_version": "2023-07-07", "queId": "58827db30bfe41e3aa8887dbbf840403", "difficulty": "3", "qtype": "short_answer", "problem": "Clarice is reading a magazine. The number of pages she has read to the number of pages she has not read is $$1 : 5$$. If she reads another $$80$$ pages, the number of pages she has read would become $$70 \\%$$ of the total number of pages. How many pages are there in the magazine?~\\uline{~~~~~~~~~~}~ ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "150.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of pages in the magazine as `P`.\nLet's denote the number of pages Clarice has read as `R`.\n\nAccording to the problem, the ratio of the number of pages she has read to the number of pages she has not read is 1:5. This means for every page she has read, there are 5 pages she has not read. Therefore, we can write the following equation:\n\n1) `R / (P - R) = 1/5`\n\nAfter reading another 80 pages, the number of pages she has read would be `R + 80`. According to the problem, this new number of pages she has read would become 70% of the total number of pages. We can write this as:\n\n2) `R + 80 = 0.70 * P`\n\nNow we have a system of two equations:\n1) `R / (P - R) = 1/5`\n2) `R + 80 = 0.70 * P`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, R = symbols('P R')\n\n    # Formulate equations\n    eq1 = Eq(R / (P - R), 1/5)\n    eq2 = Eq(R + 80, 0.70 * P)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, R))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and solves for the total number of pages in the magazine. The `solve` function from the sympy library is used to solve the system of equations, and the result is returned."]}
{"dataset_version": "2023-07-07", "queId": "bab761c62984431592b8726b89f2c00c", "difficulty": "3", "qtype": "short_answer", "problem": "Sam had $40$ stickers more than Peter. Sam gave $20 \\%$ of his stickers to Peter. In return, Peter gave $25 \\%$ of his stickers to Sam. In the end, Sam has $96$ stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-700.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of stickers Peter originally had as `P` and the number of stickers Sam originally had as `S`.\n\nFrom the problem, we have the following information:\n\n1. Sam had 40 stickers more than Peter: `S = P + 40`\n2. Sam gave 20% of his stickers to Peter: `Peter's new amount = P + 0.20S`\n3. Peter gave 25% of his stickers to Sam: `Sam's new amount = S - 0.20S + 0.25(P + 0.20S)`\n4. In the end, Sam has 96 stickers more than Peter: `S - 0.20S + 0.25(P + 0.20S) = P + 0.20S + 96`\n\nNow we can translate these into equations:\n\n1) `S = P + 40`\n2) `S - 0.20S + 0.25(P + 0.20S) = P + 0.20S + 96`\n\nWe can simplify the second equation further:\n\n`0.80S + 0.25P + 0.05S = P + 0.20S + 96`\n`0.85S + 0.25P = P + 0.20S + 96`\n`0.65S = 0.75P + 96`\n\nNow we have a system of two equations:\n1) `S = P + 40`\n2) `0.65S = 0.75P + 96`\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, S = symbols('P S')\n\n    # Formulate equations\n    eq1 = Eq(S, P + 40)\n    eq2 = Eq(0.65*S, 0.75*P + 96)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, S))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines a function `solution()` that uses the sympy library to solve the system of equations we formulated in Step 1. The function returns the number of stickers Peter had at first."]}
{"dataset_version": "2023-07-07", "queId": "3443aaa6a82a4aa1acae9f85d2a28ffe", "difficulty": "3", "qtype": "short_answer", "problem": "Jolie baked some cookies. She threw away~$\\dfrac{3}{5}$~of the cookies as they were burnt, and she sold $75 \\%$ of the remaining cookies. Given that the number of cookies she burnt was $$42$$ more than the number of cookies she sold, how many cookies did Jolie bake at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "140.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of cookies Jolie baked as `C`.\n\nAccording to the problem, Jolie threw away $\\frac{3}{5}$ of the cookies, which means she was left with $\\frac{2}{5}$ of the cookies.\n\nThe number of cookies thrown away is $\\frac{3}{5}C$.\n\nThe number of cookies remaining after throwing away the burnt ones is $\\frac{2}{5}C$.\n\nShe then sold $75\\%$ of the remaining cookies, which is $0.75 \\times \\frac{2}{5}C$.\n\nThe number of cookies sold is $0.75 \\times \\frac{2}{5}C$.\n\nThe problem states that the number of cookies burnt was $42$ more than the number of cookies sold. Therefore, we can write the equation:\n\n$\\frac{3}{5}C = 0.75 \\times \\frac{2}{5}C + 42$\n\nNow we have one equation with one unknown:\n\n1) $\\frac{3}{5}C = 0.75 \\times \\frac{2}{5}C + 42$\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    C = symbols('C')\n\n    # Equation based on the problem statement\n    eq = Eq((3/5)*C, 0.75 * (2/5)*C + 42)\n\n    # Solve the equation\n    solution = solve(eq, C)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n```\n\nNow, let's execute this Python code to find the number of cookies Jolie baked at first."]}
{"dataset_version": "2023-07-07", "queId": "74c598a697fa4036ba52acb5c3dae9a8", "difficulty": "3", "qtype": "short_answer", "problem": "Sally had some cupcakes. She had 72 more chocolate cupcakes than vanilla cupcakes. She had 36 lesser blueberry cupcakes than vanilla cupcakes. After selling $\\dfrac{1}{6}$~of the chocolate cupcakes, $\\dfrac{2}{3}$~of the vanilla cupcakes and $\\dfrac{7}{9}$~of the blueberry cupcakes. Sally had 427 cupcakes left altogether. How many chocolate cupcakes did Sally sell? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "57.0000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of vanilla cupcakes as `V`, the number of chocolate cupcakes as `C`, and the number of blueberry cupcakes as `B`.\n\nFrom the problem, we have the following relationships:\n1. Sally had 72 more chocolate cupcakes than vanilla cupcakes: `C = V + 72`\n2. She had 36 fewer blueberry cupcakes than vanilla cupcakes: `B = V - 36`\n\nAfter selling a fraction of each type of cupcakes, Sally has the following left:\n1. Chocolate cupcakes left: `C - (1/6)C = (5/6)C`\n2. Vanilla cupcakes left: `V - (2/3)V = (1/3)V`\n3. Blueberry cupcakes left: `B - (7/9)B = (2/9)B`\n\nThe total number of cupcakes left after selling is 427, so we have:\n`(5/6)C + (1/3)V + (2/9)B = 427`\n\nNow we have a system of four equations:\n1) `C = V + 72`\n2) `B = V - 36`\n3) `(5/6)C + (1/3)V + (2/9)B = 427`\n4) `C + V + B` is the total number of cupcakes before selling.\n\nWe need to find the number of chocolate cupcakes Sally sold, which is `(1/6)C`.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    V, C, B = symbols('V C B')\n\n    # Equations based on the problem statement\n    eq1 = Eq(C, V + 72)  # Chocolate cupcakes equation\n    eq2 = Eq(B, V - 36)  # Blueberry cupcakes equation\n    eq3 = Eq((5/6)*C + (1/3)*V + (2/9)*B, 427)  # Total cupcakes left after selling\n\n    # Solve the system of equations\n    solutions = solve((eq1, eq2, eq3), (V, C, B))\n    chocolate_sold = solutions[C] / 6  # Calculate the number of chocolate cupcakes sold\n\n    # Return the final answer\n    return chocolate_sold\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the system of equations, and calculates the number of chocolate cupcakes Sally sold. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "a4c428257cff4445a4d9df7423135eaf", "difficulty": "3", "qtype": "short_answer", "problem": "Jeremy has the same size toy cars in his box in which 5 are red, 9 are blue and 4 are white. How many cars does he need to pick from the box without looking to e sure he will get 3 toy cars of the same colour? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules->Statistics and Probability->Questions Involving Probability->Typical Probability Problems->Picking Balls Randomly"], "answer": "7", "generation": ["## Step 1: Formulate Equations\n\nIn this problem, we are not dealing with equations in the traditional sense, but rather with a combinatorial problem. We need to determine the minimum number of cars Jeremy needs to pick to ensure he has 3 cars of the same color.\n\nTo solve this problem, we can use the Pigeonhole Principle, which in this context means that if Jeremy picks enough cars, he will eventually have to pick at least 3 of the same color.\n\nLet's denote the number of cars Jeremy needs to pick as `P`.\n\nThe worst-case scenario for each color before picking a third car of the same color is:\n- Picking 2 red cars: 2 picks\n- Picking 2 blue cars: 2 picks\n- Picking 2 white cars: 2 picks\n\nAfter this point, any additional car Jeremy picks must be the third car of one of these colors.\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer\n\nSince this is a combinatorial problem, we don't need to solve a system of equations. Instead, we will calculate the minimum number of picks based on the worst-case scenario.\n\n```python\ndef solution():\n    # Define the number of picks for the worst-case scenario before getting the third car of the same color\n    # We add 1 to the total because the next pick will ensure the third car of the same color\n    picks_for_red = 2\n    picks_for_blue = 2\n    picks_for_white = 2\n    # The next pick ensures we have 3 of the same color\n    next_pick = 1\n    \n    # Calculate the total number of picks needed\n    total_picks = picks_for_red + picks_for_blue + picks_for_white + next_pick\n    \n    # Return the final answer\n    return total_picks\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code calculates the minimum number of cars Jeremy needs to pick to ensure he gets 3 toy cars of the same color based on the worst-case scenario. The result will be the sum of the worst-case picks for each color plus one additional pick."]}
{"dataset_version": "2023-07-07", "queId": "cc3b876c55ae46299e40246b9eafb3d1", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-700.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Peter had originally as `P` and the number of stickers Sam had originally as `S`.\n\nFrom the problem, we have the following information:\n\n1. Sam had 40 stickers more than Peter: `S = P + 40`\n2. Sam gave 20% of his stickers to Peter: `P + 0.20S` is the new amount of stickers Peter has.\n3. Peter gave 25% of his new amount of stickers to Sam: `S + 0.25(P + 0.20S)` is the new amount of stickers Sam has.\n4. In the end, Sam had 96 stickers more than Peter: `S + 0.25(P + 0.20S) - 0.20S = P + 0.20S + 96`\n\nNow we can formulate the equations:\n\n1) `S = P + 40`\n2) `S + 0.25(P + 0.20S) - 0.20S = P + 0.20S + 96`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, S = symbols('P S')\n\n    # Equation 1: Sam had 40 stickers more than Peter\n    eq1 = Eq(S, P + 40)\n\n    # Equation 2: In the end, Sam had 96 stickers more than Peter\n    eq2 = Eq(S + 0.25*(P + 0.20*S) - 0.20*S, P + 0.20*S + 96)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, S))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the number of stickers Peter had at first. The `solve` function from the sympy library is used to solve the system of equations. The final answer is the value of `P` which represents the number of stickers Peter had originally."]}
{"dataset_version": "2023-07-07", "queId": "938d2bcb3f644872a707547c2058d4a7", "difficulty": "3", "qtype": "short_answer", "problem": "In a class,~$\\tfrac{1}{4}$~of the students and an additional $$3$$ boys like badminton.~$\\tfrac{1}{3}$~of the remaining students in the class less $$3$$ like table tennis and the rest of the $$25$$ students in the class like football. How many students are there in the class? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "48.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of students in the class as `N`.\n\nAccording to the problem, $\\frac{1}{4}$ of the students plus 3 boys like badminton. So the number of students who like badminton is $\\frac{1}{4}N + 3$.\n\nThe remaining students after those who like badminton are $N - (\\frac{1}{4}N + 3)$.\n\nOut of these remaining students, $\\frac{1}{3}$ less 3 like table tennis. So the number of students who like table tennis is $\\frac{1}{3}(N - (\\frac{1}{4}N + 3)) - 3$.\n\nThe rest of the students, which is 25, like football. Therefore, we have:\n\nRemaining students - Students who like table tennis = Students who like football\n$N - (\\frac{1}{4}N + 3) - (\\frac{1}{3}(N - (\\frac{1}{4}N + 3)) - 3) = 25$\n\nNow we have one equation with one unknown `N`:\n\n$N - \\frac{1}{4}N - 3 - \\frac{1}{3}(N - \\frac{1}{4}N - 3) + 3 = 25$\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve this equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    N = symbols('N')\n\n    # Formulate the equation\n    eq = Eq(N - N/4 - 3 - (1/3)*(N - N/4 - 3) + 3, 25)\n\n    # Solve the equation\n    solution = solve(eq, N)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variable `N`, formulates the equation based on the problem statement, solves the equation for `N`, and then returns the result which is the total number of students in the class."]}
{"dataset_version": "2023-07-07", "queId": "6657a223a619480aabc4ab2e4d50e627", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-700.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of stickers Peter had originally as `P` and the number of stickers Sam had originally as `S`.\n\nFrom the problem, we have the following information:\n\n1. Sam had 40 stickers more than Peter: `S = P + 40`\n2. Sam gave 20% of his stickers to Peter: `Peter's new amount = P + 0.20S`\n3. Peter gave 25% of his stickers to Sam: `Sam's new amount = S - 0.20S + 0.25(P + 0.20S)`\n4. In the end, Sam had 96 stickers more than Peter: `S - 0.20S + 0.25(P + 0.20S) = P + 0.20S + 96`\n\nNow we need to express these relationships as equations:\n\n1) `S = P + 40`\n2) After the exchange, Peter has `P + 0.20S` stickers.\n3) After the exchange, Sam has `S - 0.20S + 0.25(P + 0.20S)` stickers.\n4) The difference in the number of stickers after the exchange is `S - 0.20S + 0.25(P + 0.20S) - (P + 0.20S) = 96`\n\nWe can simplify the fourth equation to:\n\n`0.80S + 0.25P + 0.05S - P - 0.20S = 96`\n`0.65S - 0.75P = 96`\n\nNow we have a system of two equations:\n1) `S = P + 40`\n2) `0.65S - 0.75P = 96`\n\n## Step 2: Solve Equations Using Python Code:\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, S = symbols('P S')\n\n    # Formulate equations\n    eq1 = Eq(S, P + 40)\n    eq2 = Eq(0.65*S - 0.75*P, 96)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, S))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the original number of stickers Peter had. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "09b093e35e3d45d0b688e30cc6a0ba76", "difficulty": "3", "qtype": "short_answer", "problem": "A rich man bought a house two years ago.  The houseing market is buoyant, and after a year the house had increased in value by 10\\%, so the value was £11,000 in the last year. In this year, the housing market slumps. The house loses 10\\% of its value.  Comparing with the original price, calculate the amount of profit or loss in this year. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-100.0", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the original price of the house as `P`.\n\nAfter the first year, the house increased in value by 10%, so the new value is:\n`P + 0.10 * P = 1.10 * P`\nWe are given that this value is £11,000, so:\n`1.10 * P = 11000`\n\nIn the second year, the house loses 10% of its value from the end of the first year, so the new value is:\n`1.10 * P - 0.10 * (1.10 * P) = 0.90 * (1.10 * P)`\n\nWe want to find the difference between the original price `P` and the value at the end of the second year, which is `0.90 * (1.10 * P)`.\n\nThe profit or loss is calculated as:\n`Profit/Loss = 0.90 * (1.10 * P) - P`\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve the equation `1.10 * P = 11000` to find the original price `P`, and then calculate the profit or loss.\n\n```python\ndef solution():\n    # Define the original price P based on the value after the first year\n    P = 11000 / 1.10\n    \n    # Calculate the value of the house after the second year\n    value_after_second_year = 0.90 * (1.10 * P)\n    \n    # Calculate the profit or loss\n    profit_or_loss = value_after_second_year - P\n    \n    # Return the final answer\n    return profit_or_loss\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the original price of the house, the value after the second year, and the profit or loss comparing with the original price."]}
{"dataset_version": "2023-07-07", "queId": "12bef96eae3c41e78b2c7c959b7cb247", "difficulty": "3", "qtype": "short_answer", "problem": "If 5\\textsuperscript{th~}May is Monday. How many Sundays are there between 5\\textsuperscript{th} May and 7\\textsuperscript{th} June? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Periodic Problems->Periodic Problems of Time->Period of Dates"], "answer": "3", "generation": ["**Step 1: Formulate Equations:**\n\nTo solve this problem, we need to calculate the number of days between 5th May and 7th June and then determine how many Sundays fall within this period.\n\nLet's denote:\n- `D` as the total number of days between 5th May and 7th June.\n- `S` as the number of Sundays.\n\nSince 5th May is a Monday, the first Sunday will be on 11th May (6 days later). We need to calculate the number of days from 11th May to 7th June and then divide by 7 to find the number of Sundays.\n\nThe number of days in May is 31. So, the number of days from 5th May to the end of May is 31 - 5 = 26 days. Adding the 7 days of June gives us a total of 26 + 7 = 33 days.\n\nThe number of days from 11th May to 7th June is 33 - 6 = 27 days.\n\nNow, we can calculate the number of Sundays by dividing the number of days by 7 and rounding down to the nearest whole number.\n\nThe mathematical expression for the number of Sundays `S` is:\n`S = floor((D - 6) / 7)`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from math import floor\n\n    # Calculate the total number of days between 5th May and 7th June\n    total_days_may = 31  # Total days in May\n    days_from_5th_to_end_of_may = total_days_may - 5\n    days_in_june = 7  # Days in June up to the 7th\n    total_days = days_from_5th_to_end_of_may + days_in_june\n\n    # Calculate the number of days from the first Sunday (11th May) to 7th June\n    days_from_first_sunday_to_7th_june = total_days - 6\n\n    # Calculate the number of Sundays\n    number_of_sundays = floor(days_from_first_sunday_to_7th_june / 7)\n\n    # Return the final answer\n    return number_of_sundays\n```\n\nThis code will return the number of Sundays between 5th May and 7th June."]}
{"dataset_version": "2023-07-07", "queId": "f4fc1897652e40b78918728180071644", "difficulty": "3", "qtype": "short_answer", "problem": "If 4 construction companies can build a $$900\\rm m$$ expressway in $$5$$ days, how many days will 6 construction companies take to build a $$5400\\rm m$$ expressway? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Work Word Problems->Simple Work Word Problems"], "answer": "45.0", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of days it takes for 6 construction companies to build a 5400m expressway as `D`.\n\nFirst, we need to establish the work rate of the construction companies. We know that 4 companies can build a 900m expressway in 5 days. The work done (W) is the product of the number of companies (C), the length of the expressway (L), and the reciprocal of the number of days (1/D), which gives us the rate of work done per day.\n\nFor 4 companies building a 900m expressway in 5 days, the equation is:\nW = C * L * (1/D)\nW = 4 * 900 * (1/5)\n\nNow, we want to find out how many days (D) it will take for 6 companies to build a 5400m expressway. The work done should be the same in both cases, so we can set up the equation as:\nW = 6 * 5400 * (1/D)\n\nSince the work done (W) is the same in both cases, we can equate the two expressions:\n4 * 900 * (1/5) = 6 * 5400 * (1/D)\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    # Define the variables\n    companies_initial = 4\n    expressway_length_initial = 900\n    days_initial = 5\n    companies_final = 6\n    expressway_length_final = 5400\n\n    # Calculate the work done by the initial group of companies\n    work_done_initial = companies_initial * expressway_length_initial * (1/days_initial)\n\n    # Set up the equation for the final scenario and solve for D\n    # work_done_initial = companies_final * expressway_length_final * (1/D)\n    # Rearrange the equation to solve for D\n    # D = companies_final * expressway_length_final / work_done_initial\n    days_final = (companies_final * expressway_length_final) / work_done_initial\n\n    # Return the final answer\n    return days_final\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the number of days it takes for 6 construction companies to build a 5400m expressway based on the given problem."]}
{"dataset_version": "2023-07-07", "queId": "a77bd217c8b244528cdb996bbf73a46b", "difficulty": "3", "qtype": "short_answer", "problem": "A packet of cookies can contain $$7$$ cookies. How many packets are needed to contain $$118$$ cookies? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "17", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of packets needed as `P`.\n\nSince each packet can contain 7 cookies, the total number of cookies that can be contained in `P` packets is `7 * P`.\n\nWe want to find the smallest integer `P` such that `7 * P` is greater than or equal to 118 cookies.\n\nThe mathematical expression for this problem is:\n`7 * P >= 118`\n\n**Step 2: Solve Equations Using Python Code:**\n\nTo solve this equation, we will use Python code to perform a simple division and then round up to the nearest whole number since we cannot have a fraction of a packet.\n\n```\nimport math\n\ndef solution():\n    # Number of cookies\n    cookies = 118\n    # Number of cookies per packet\n    cookies_per_packet = 7\n\n    # Calculate the number of packets needed\n    packets_needed = math.ceil(cookies / cookies_per_packet)\n\n    # Return the final answer\n    return packets_needed\n```\n\nThis code calculates the number of packets needed by dividing the total number of cookies by the number of cookies per packet and then rounding up to the nearest whole number using the `math.ceil` function. The result is the smallest integer number of packets that can contain at least 118 cookies."]}
{"dataset_version": "2023-07-07", "queId": "32cc18556b6c45a9b298776fc2cefc3a", "difficulty": "3", "qtype": "short_answer", "problem": "Woody organised a quiz night in the toy room He asked $25$ questions.  For each correct answer you gained $4$ points.  For each incorrect answer you lost $2$ points.  For each question you did not attempt you scored $0$ points.  Rex answered all bur one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of correct answers as `C` and the number of incorrect answers as `I`. Since Rex answered all but one of the questions, and there were 25 questions in total, we have:\n\nC + I = 24\n\nFor each correct answer, Rex gains 4 points, and for each incorrect answer, he loses 2 points. Rex's total score is 66 points, so we can write the following equation:\n\n4C - 2I = 66\n\nNow we have a system of two equations:\n1) `C + I = 24`\n2) `4C - 2I = 66`\n\n## Step 2: Solve Equations Using Python Code:\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, I = symbols('C I')\n\n    # Formulate equations\n    eq1 = Eq(C + I, 24)\n    eq2 = Eq(4*C - 2*I, 66)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, I))\n    result = solution[C]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the system of equations, and returns the number of correct answers Rex had."]}
{"dataset_version": "2023-07-07", "queId": "cecb4b4d838e4a73937b529a2db06ceb", "difficulty": "3", "qtype": "short_answer", "problem": "A box could contain $$9$$ cookies. There were $$148$$ cookies. How many boxes were needed? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "17", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of boxes needed as `B`.\n\nSince each box can contain 9 cookies, and there are 148 cookies in total, we can write the following equation:\n\n`9B >= 148`\n\nWe want to find the smallest integer value of `B` such that this inequality holds true.\n\n**Step 2: Solve Equations Using Python Code:**\n\nWe can solve this problem by performing a simple division and then rounding up to the nearest whole number since we can't have a fraction of a box.\n\n```python\nimport math\n\ndef solution():\n    # Total number of cookies\n    total_cookies = 148\n    # Number of cookies per box\n    cookies_per_box = 9\n    \n    # Calculate the number of boxes needed\n    # We use math.ceil to round up to the nearest whole number\n    boxes_needed = math.ceil(total_cookies / cookies_per_box)\n    \n    # Return the final answer\n    return boxes_needed\n```\n\nRunning this code will give us the number of boxes needed to store 148 cookies, where each box can contain up to 9 cookies."]}
{"dataset_version": "2023-07-07", "queId": "6ca3b864aba0479d81b5e2d80e516196", "difficulty": "3", "qtype": "short_answer", "problem": "A rich man bought a house two years ago.  The housing market is buoyant, and after a year the house had increased in value by 10\\%, so the value was £110,000 in the last year. In this year, the housing market slumps. The house loses 10\\% of its value.  Comparing with the original price, calculate the amount of profit or loss in this year. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-999.9999999999854", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the original price of the house as `P`.\n\nAfter the first year, the house increased in value by 10%, so the new value is:\n`P * (1 + 10/100) = £110,000`\n\nAfter the second year, the house loses 10% of its value, so the new value is:\n`110,000 * (1 - 10/100)`\n\nWe need to find the original price `P` and then calculate the difference between the value after the second year and the original price to determine the profit or loss.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    # Calculate the original price of the house\n    original_value_after_first_year = 110000\n    original_price = original_value_after_first_year / 1.1  # Dividing by 1 + 10%\n\n    # Calculate the value of the house after the second year\n    value_after_second_year = original_value_after_first_year * 0.9  # Multiplying by 1 - 10%\n\n    # Calculate the profit or loss by subtracting the original price from the value after the second year\n    profit_or_loss = value_after_second_year - original_price\n\n    # Return the final answer\n    return profit_or_loss\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the original price of the house, the value after the second year, and the profit or loss comparing with the original price. The final answer will be the amount of profit or loss in this year."]}
{"dataset_version": "2023-07-07", "queId": "750dbb830f534f51927d1d1d3c9f04f8", "difficulty": "3", "qtype": "short_answer", "problem": "Hanson spent~$\\tfrac{1}{4}$~of his money and an additional $$$3$$ on a number of CDs. He then spent~$\\tfrac{3}{5}$~of the remaining money and an additional $$$6$$ on a number of batteries. Given that he was left with $$$24$$, how much money did Hanson have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "104.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total amount of money Hanson had at first as `M`.\n\nAfter spending 1/4 of his money and an additional $3 on CDs, Hanson is left with:\n`M - (1/4)M - 3`\n\nThen, Hanson spends 3/5 of the remaining money and an additional $6 on batteries. The remaining money after this purchase is:\n`[M - (1/4)M - 3] - (3/5)[M - (1/4)M - 3] - 6`\n\nGiven that he was left with $24, we can set up the equation:\n`[M - (1/4)M - 3] - (3/5)[M - (1/4)M - 3] - 6 = 24`\n\nNow we need to solve this equation for `M`.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    M = symbols('M')\n\n    # Formulate the equation\n    remaining_after_CDs = M - (1/4)*M - 3\n    remaining_after_batteries = remaining_after_CDs - (3/5)*remaining_after_CDs - 6\n    eq = Eq(remaining_after_batteries, 24)\n\n    # Solve the equation\n    solution = solve(eq, M)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variable `M`, sets up the equation based on the problem statement, solves for `M`, and then returns the result, which is the amount of money Hanson had at first."]}
{"dataset_version": "2023-07-07", "queId": "976b95e20676470a955c0924996ff02d", "difficulty": "3", "qtype": "short_answer", "problem": "$$4$$ individuals pass the ball to each other and they pass it to others immediately when they catch the ball, starting from $$A$$ as the first pass, the number of different methods that after $$3$$ passes the ball returns to $$A$$ is~\\uline{~~~~~~~~~~}~. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "6", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the individuals as A, B, C, and D. We need to find the number of different methods that after 3 passes the ball returns to A.\n\nWe can break down the problem into different stages:\n1. The first pass: A passes the ball to one of the other three individuals (B, C, or D).\n2. The second pass: The individual who received the ball from A now has two choices to pass the ball to (excluding A and themselves).\n3. The third pass: The individual who received the ball in the second pass now has only one choice to pass the ball back to A (since they can't pass it back to the person who just passed it to them or to themselves).\n\nThe total number of different methods is the product of the number of choices at each stage.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    # The first pass: A can pass to 3 different individuals\n    first_pass_choices = 3\n    \n    # The second pass: The receiver has 2 choices to pass (excluding A and themselves)\n    second_pass_choices = 2\n    \n    # The third pass: The receiver has only 1 choice to pass it back to A\n    third_pass_choices = 1\n    \n    # The total number of different methods is the product of choices at each stage\n    total_methods = first_pass_choices * second_pass_choices * third_pass_choices\n    \n    # Return the final answer\n    return total_methods\n```\n\nNow, let's run this Python code to get the final answer."]}
{"dataset_version": "2023-07-07", "queId": "ea7852a3c82f44b998bc40a543ec62cd", "difficulty": "3", "qtype": "short_answer", "problem": "Jeremy had a total of $$57$$ $$$5$$ notes and $$$10$$ notes. After he spent $$60$$\\% of the $$$10$$ notes and $$25$$\\% of the $$$5$$ notes on a bag, he was left with twice as many $$$10$$ notes as $$$5$$ notes. How much did the bag cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "285.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of $5 notes as `F` and the number of $10 notes as `T`.\n\nFrom the problem, we have the following information:\n\n1. Jeremy had a total of $57 notes, which means:\n   `F + T = 57`\n\n2. After spending 60% of the $10 notes and 25% of the $5 notes, he is left with twice as many $10 notes as $5 notes. This gives us two more equations:\n   `T_left = T - 0.60 * T = 0.40 * T`\n   `F_left = F - 0.25 * F = 0.75 * F`\n   `T_left = 2 * F_left`\n   Substituting `T_left` and `F_left` we get:\n   `0.40 * T = 2 * 0.75 * F`\n   Simplifying, we get:\n   `0.40 * T = 1.50 * F`\n   `4 * T = 15 * F`\n   `T = (15/4) * F`\n\n3. The cost of the bag is the amount of money he spent, which is 60% of the $10 notes and 25% of the $5 notes:\n   `Cost = 0.60 * T * 10 + 0.25 * F * 5`\n\nNow we have a system of equations:\n1) `F + T = 57`\n2) `T = (15/4) * F`\n3) `Cost = 6 * T + 1.25 * F`\n\n## Step 2: Solve Equations Using Python Code:\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    F, T = symbols('F T')\n\n    # Equations based on the problem statement\n    eq1 = Eq(F + T, 57)\n    eq2 = Eq(T, (15/4) * F)\n\n    # Solve the system of equations for F and T\n    solution = solve((eq1, eq2), (F, T))\n    F_value = solution[F]\n    T_value = solution[T]\n\n    # Calculate the cost of the bag\n    cost = 6 * T_value + 1.25 * F_value\n\n    # Return the final answer\n    return cost\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves for the number of $5 and $10 notes, and then calculates the cost of the bag. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "a7318cfeb5c6465bbe4c97e1828d60ef", "difficulty": "3", "qtype": "short_answer", "problem": "Hanson spent~$\\tfrac{1}{4}$~of his money and an additional $$$3$$ on a number of CDs. He then spent~$\\tfrac{3}{5}$~of the remaining money and an additional $$$6$$ on a number of batteries. Given that he was left with $$$24$$, how much money did Hanson have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "104.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total amount of money Hanson had at first as `M`.\n\nAfter spending 1/4 of his money and an additional $3 on CDs, Hanson is left with:\n`M - (1/4)M - 3`\n\nThen, Hanson spends 3/5 of the remaining money and an additional $6 on batteries. The remaining money after this purchase is:\n`[M - (1/4)M - 3] - (3/5)[M - (1/4)M - 3] - 6`\n\nWe are given that after all the spending, Hanson is left with $24. Therefore, we can set up the equation:\n`[M - (1/4)M - 3] - (3/5)[M - (1/4)M - 3] - 6 = 24`\n\nNow, let's simplify the equation:\n`M - (1/4)M - 3 - (3/5)(3/4)M + (3/5)*3 - 6 = 24`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, we will solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    M = symbols('M')\n\n    # Formulate the equation\n    eq = Eq(M - (1/4)*M - 3 - (3/5)*(M - (1/4)*M - 3) - 6, 24)\n\n    # Solve the equation\n    solution = solve(eq, M)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variable `M`, sets up the equation based on the problem statement, solves for `M`, and then returns the result, which is the amount of money Hanson had at first."]}
{"dataset_version": "2023-07-07", "queId": "5be13676699942f49a395268e1f5d8e8", "difficulty": "3", "qtype": "short_answer", "problem": "There are three inlet pipes $A$, $B$, and $C$ in a pool. If only $A$ and $C$ are turned on, the pool can be filled from full and $18$ tons of water are from $A$. If only $B$ and $C$ are turned on, the pool can be filled from full and $27$ tons of water are from $B$. Given the flow rate of $B$ is twice that of $A$, how many tons of water can the pool be filled up with? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Work Word Problems"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the flow rates of the inlet pipes A, B, and C as `a`, `b`, and `c` respectively, in tons per unit time. Let's denote the total capacity of the pool as `T` in tons.\n\nGiven that the flow rate of B is twice that of A, we have:\n1) `b = 2a`\n\nWhen A and C are turned on, the pool fills up with 18 tons from A. Since B is not turned on, the total capacity of the pool is the sum of the water from A and C:\n2) `18 + cT = T`\n\nWhen B and C are turned on, the pool fills up with 27 tons from B. Since A is not turned on, the total capacity of the pool is the sum of the water from B and C:\n3) `27 + cT = T`\n\nWe need to find the value of `T`, the total capacity of the pool.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, we will use Python code to solve the equations we formulated in the previous step and provide the final answer to the problem.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    a, b, c, T = symbols('a b c T')\n\n    # Given condition\n    eq1 = Eq(b, 2*a)\n\n    # Equations based on the problem statement\n    eq2 = Eq(18 + c*T, T)\n    eq3 = Eq(27 + c*T, T)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (a, b, c, T))\n    result = solution[T]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nPlease note that the equations 2) and 3) seem to be incorrect as they imply that `cT = 0`, which would mean that pipe C does not contribute to filling the pool at all. This is likely not the intended interpretation of the problem. However, without additional information, we cannot correct these equations. If there is more information available, please provide it so that we can formulate the correct equations."]}
{"dataset_version": "2023-07-07", "queId": "4fbbbe33f9d643a79e9eec4d1694212f", "difficulty": "3", "qtype": "short_answer", "problem": "Woody organised a quiz night in the toy room. He asked $25$ questions.  For each correct answer you gained $4$ points.  For each incorrect answer you lost $2$ points.  For each question you did not attempt you scored $0$ points.  Rex answered all but one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "56/3", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of correct answers Rex had as `C`, the number of incorrect answers as `I`, and the number of questions he did not attempt as `U`. Since Rex answered all but one of the questions, we have:\n\n`C + I + U = 24` (because he answered 24 questions in total)\n\nFor the scoring system:\n- Each correct answer gives 4 points: `4C`\n- Each incorrect answer deducts 2 points: `-2I`\n- Unattempted questions score 0 points: `0U`\n\nRex's total score is 66 points, so we have the equation:\n\n`4C - 2I + 0U = 66`\n\nSince he did not attempt one question, `U = 1`. Now we have two equations:\n\n1) `C + I + 1 = 24`\n2) `4C - 2I = 66`\n\nWe can solve these equations to find the value of `C`, which represents the number of correct answers Rex had.\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, I = symbols('C I')\n\n    # Equation for the total number of questions answered\n    eq1 = Eq(C + I + 1, 24)\n\n    # Equation for the total score\n    eq2 = Eq(4*C - 2*I, 66)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, I))\n    result = solution[C]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary equations based on the problem statement and uses the sympy library to solve for the number of correct answers `C`. The final result is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "99d84eff6ac64f09ab3bcfb4983bcdfc", "difficulty": "3", "qtype": "short_answer", "problem": "Let $$S\\left( n \\right)$$ denotes the sum of the digits of $$n$$ for all positive integers $$n$$.  Find the minimum value of $$m$$ if $$S\\left( m \\right)=5S\\left( m+1 \\right)$$. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "19", "generation": ["## Step 1: Formulate Equations:\n\nTo find the minimum value of `m` such that `S(m) = 5S(m+1)`, we need to consider the properties of the sum of digits function `S(n)`.\n\nLet's denote `m` as a number with digits `d_1d_2d_3...d_k` where `d_1` is the most significant digit and `d_k` is the least significant digit (units place).\n\nWhen we increment `m` by 1 to get `m+1`, the sum of digits can change in the following ways:\n1. If `m` does not end in a 9, then `S(m+1) = S(m) + 1 - 9x`, where `x` is the number of carries over when adding 1 to `m`.\n2. If `m` ends in one or more 9's, then `S(m+1)` will be less than `S(m)` because the 9's will turn into 0's and increase the next non-9 digit by 1.\n\nWe are looking for the smallest `m` such that `S(m) = 5S(m+1)`. This implies that `m` must end in a number of 9's because we need `S(m+1)` to be significantly smaller than `S(m)`.\n\nLet's denote `m = a999...999` where `a` is the part of `m` that does not include the trailing 9's. When we add 1 to `m`, all the 9's turn into 0's and `a` increases by 1, so `S(m+1) = S(a+1)`.\n\nThe equation we need to solve is:\n`S(a999...999) = 5S((a+1)000...000)`\n\nSince we are looking for the minimum `m`, we should start with the smallest `a` that ends with a digit other than 9 and has the least number of trailing 9's possible while still satisfying the equation.\n\n## Step 2: Solve Equations Using Python Code:\n\nWe will write a Python function to iterate through possible values of `m` and check the condition `S(m) = 5S(m+1)`.\n\n```python\ndef sum_of_digits(n):\n    return sum(int(digit) for digit in str(n))\n\ndef solution():\n    m = 1\n    while True:\n        if sum_of_digits(m) == 5 * sum_of_digits(m + 1):\n            return m\n        m += 1\n\n# Example usage:\nprint(solution())\n```\n\nThis code will find the minimum value of `m` that satisfies the condition `S(m) = 5S(m+1)`. Note that this is a brute force approach and may not be the most efficient way to solve the problem, but it will find the correct answer given enough time. If the search space is large, a more analytical approach may be necessary to find the solution in a reasonable amount of time."]}
{"dataset_version": "2023-07-07", "queId": "a295b79b82d040ba90888d02ac50c7b7", "difficulty": "3", "qtype": "short_answer", "problem": "A year is called a Blackjack year if the sum of its digits is 21. For example, 1983 is a Blackjack year since 1+9+8+3=21. How many Blackjack years are there between 1900 and 2000? （⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "8", "generation": ["## Step 1: Formulate Equations\n\nTo solve this problem, we need to find all the years between 1900 and 2000 where the sum of the digits equals 21. We can represent a year in the 1900s as `1900 + x`, where `x` ranges from 0 to 99. The year `1900 + x` can be broken down into its digits as `1`, `9`, `0`, `0`, `x1`, and `x0`, where `x1` is the tens digit of `x` and `x0` is the units digit of `x`.\n\nThe sum of the digits of the year can be represented as:\n`1 + 9 + 0 + 0 + x1 + x0 = 21`\n\nSince `1 + 9 + 0 + 0 = 10`, we can simplify the equation to:\n`x1 + x0 = 11`\n\nNow, we need to find all pairs of `(x1, x0)` such that `x1 + x0 = 11` and `0 <= x1 <= 9` and `0 <= x0 <= 9`.\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer\n\n```python\ndef solution():\n    # Initialize the count of Blackjack years\n    blackjack_years_count = 0\n\n    # Loop through all possible values of x (0 to 99)\n    for x in range(100):\n        # Extract the tens and units digit of x\n        x1 = x // 10\n        x0 = x % 10\n        \n        # Check if the sum of the digits equals 11\n        if x1 + x0 == 11:\n            # If so, increment the count of Blackjack years\n            blackjack_years_count += 1\n\n    # Return the final count of Blackjack years\n    return blackjack_years_count\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will loop through all the years from 1900 to 1999 and count how many of them are Blackjack years, where the sum of the digits equals 21. The final result will be the total count of such years."]}
{"dataset_version": "2023-07-07", "queId": "cd598ad9ace144b2bfb79abe93cbc606", "difficulty": "3", "qtype": "short_answer", "problem": "There is a total of $$125$$ blue and red balls in a bag.~$\\tfrac{2}{5}$~of the blue balls is equal to~$\\tfrac{3}{5}$~of the red balls. How many more blue balls than red balls are there in the bag? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "25.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of blue balls as `B` and the number of red balls as `R`.\n\nAccording to the problem, we have two pieces of information:\n\n1. The total number of balls is 125, which gives us the equation:\n   `B + R = 125`\n\n2. Two-fifths of the blue balls is equal to three-fifths of the red balls, which gives us the equation:\n   `2/5 * B = 3/5 * R`\n\nWe need to find the difference between the number of blue balls and red balls, which is `B - R`.\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    B, R = symbols('B R')\n\n    # Equation 1: Total number of balls\n    eq1 = Eq(B + R, 125)\n\n    # Equation 2: Relationship between blue and red balls\n    eq2 = Eq(2/5 * B, 3/5 * R)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (B, R))\n    blue_balls = solution[B]\n    red_balls = solution[R]\n\n    # Calculate the difference\n    result = blue_balls - red_balls\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary equations based on the problem statement and solves them using the sympy library. The final result is the difference between the number of blue balls and red balls."]}
{"dataset_version": "2023-07-07", "queId": "904f0cdae54f4d4a9375c041f3a5ebf8", "difficulty": "3", "qtype": "short_answer", "problem": "$$4$$ individuals pass the ball to each other and they pass it to others immediately when they catch the ball, starting from A as the first pass, the number of different methods that after $$3$$ passes the ball being back to A is~\\uline{~~~~~~~~~~}~. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "6", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the individuals as A, B, C, and D. We need to find the number of different methods that after 3 passes the ball is back to A.\n\nWe can break down the problem into different stages:\n1. The first pass: A passes the ball to one of the other three individuals (B, C, or D).\n2. The second pass: The individual who received the ball from A now has two choices to pass the ball to (excluding A and themselves).\n3. The third pass: The individual who received the ball in the second pass now has only one choice to pass the ball back to A (since they can't pass it back to the person who just passed it to them or to themselves).\n\nThe total number of different methods is the product of the number of choices at each stage.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    # The first pass: A has 3 choices (B, C, or D).\n    first_pass_choices = 3\n    \n    # The second pass: The receiver has 2 choices (excluding A and themselves).\n    second_pass_choices = 2\n    \n    # The third pass: The receiver has only 1 choice, to pass it back to A.\n    third_pass_choices = 1\n    \n    # The total number of different methods is the product of the choices at each stage.\n    total_methods = first_pass_choices * second_pass_choices * third_pass_choices\n    \n    # Return the final answer\n    return total_methods\n```\n\nThis code calculates the number of different methods that after 3 passes the ball is back to A by multiplying the number of choices at each stage of the passing process."]}
{"dataset_version": "2023-07-07", "queId": "b791fcccc3654f3db33c3a0ec7363553", "difficulty": "3", "qtype": "short_answer", "problem": "$$David\\textquotesingle s$$ cookies were cost thrice as much as $$Jeremy\\textquotesingle s$$ cookies. $$David$$ had only $$$0.50$$ cookies while $$Jeremy$$ had~$\\tfrac{3}{5}$~as many $$$0.50$$ cookies as $$$0.10$$ cookies. There were $$60$$ fewer $$$0.10$$ cookies than $$$0.50$$ cookies. How much were $$Jeremy\\textquotesingle s$$ cookies worth? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Basic Type->Non-typical Types"], "answer": "-6.02", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote:\n- `D` as the number of David's cookies.\n- `J` as the number of Jeremy's cookies.\n- `T` as the number of $0.10 cookies.\n\nAccording to the problem:\n1. David's cookies cost three times as much as Jeremy's cookies. Since David had $0.50 cookies, each of Jeremy's cookies would then cost $0.50 / 3 = $0.1666... (repeating). However, since we're dealing with currency, we should round to the nearest cent, which gives us $0.17 per cookie for Jeremy.\n2. David had $0.50 cookies, so `D = 1`.\n3. Jeremy had $\\frac{3}{5}$ as many $0.50 cookies as $0.10 cookies, so `J = (3/5) * T`.\n4. There were 60 fewer $0.10 cookies than $0.50 cookies, so `T = D - 60`.\n\nNow we can write the equations:\n1) `D = 1`\n2) `J = (3/5) * T`\n3) `T = D - 60`\n\n**Step 2: Solve Equations Using Python Code:**\n\nWe will solve these equations using Python code.\n\n```python\ndef solution():\n    # Define the number of David's cookies\n    D = 1\n    \n    # Calculate the number of $0.10 cookies (T)\n    T = D - 60\n    \n    # Calculate the number of Jeremy's cookies (J)\n    J = (3/5) * T\n    \n    # Calculate the worth of Jeremy's cookies\n    # Each of Jeremy's cookies is worth $0.17\n    worth_of_Jeremy_cookies = J * 0.17\n    \n    # Return the final answer\n    return round(worth_of_Jeremy_cookies, 2)  # Round to two decimal places for currency\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the worth of Jeremy's cookies based on the given information and constraints. The `round` function is used to ensure the result is in a currency format, rounded to two decimal places."]}
{"dataset_version": "2023-07-07", "queId": "8e60fa08b0204229a54c896f7f2968fa", "difficulty": "3", "qtype": "short_answer", "problem": "The ratio of number of apples to number of pears in a box was $$3 : 4$$. When $$36$$ pears were replaced by $$36$$ apples, the number of apples became $1\\frac{1}{2}$ of number of pears. How many apples were there at first?~\\uline{~~~~~~~~~~}~ ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "90.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of apples as `A` and the number of pears as `P`.\n\nFrom the problem, we have the following information:\n\n1. The initial ratio of apples to pears is 3:4, which gives us the equation:\n   $$ \\frac{A}{P} = \\frac{3}{4} $$\n\n2. After replacing 36 pears with 36 apples, the number of apples becomes 1.5 times the number of pears. This gives us the second equation:\n   $$ A + 36 = 1.5(P - 36) $$\n\nNow we have a system of two equations:\n1) $$ \\frac{A}{P} = \\frac{3}{4} $$\n2) $$ A + 36 = 1.5(P - 36) $$\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, P = symbols('A P')\n\n    # Equation 1: The initial ratio of apples to pears is 3:4\n    eq1 = Eq(A/P, 3/4)\n\n    # Equation 2: After replacing 36 pears with 36 apples, the number of apples becomes 1.5 times the number of pears\n    eq2 = Eq(A + 36, 1.5*(P - 36))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, P))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the system of equations, and returns the initial number of apples."]}
{"dataset_version": "2023-07-07", "queId": "01afb46f9dd94497ab3c9968556ca7a1", "difficulty": "3", "qtype": "short_answer", "problem": "There are ten boxes labelled from $1$ to $10$,~ with a total of $425$ cookies in them. Box $1$ has $11$ cookies, and the number of cookies in each box increases by the same amount. What is the difference between the number of cookies in two adjacent boxes? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Practical Application of Arithmetic Progression"], "answer": "7", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the difference between the number of cookies in two adjacent boxes as `d`. Since the number of cookies in each box increases by the same amount, we can express the number of cookies in each box as an arithmetic sequence.\n\nThe first box has 11 cookies, so the number of cookies in the nth box can be expressed as:\n`11 + (n - 1) * d`\n\nThe sum of the first 10 terms of this arithmetic sequence should equal 425. The sum of an arithmetic sequence can be calculated using the formula:\n`S_n = n/2 * (a_1 + a_n)`\n\nWhere `S_n` is the sum of the first n terms, `a_1` is the first term, and `a_n` is the nth term. In this case, `S_10` is the sum of the first 10 terms, `a_1` is 11, and `a_10` is the number of cookies in the 10th box, which is `11 + 9 * d`.\n\nSo the equation for the sum of the first 10 terms is:\n`S_10 = 10/2 * (11 + (11 + 9 * d)) = 425`\n\nNow we have the equation:\n`5 * (22 + 9 * d) = 425`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve the equation using Python code to find the value of `d`.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    d = symbols('d')\n\n    # Equation for the sum of the first 10 terms\n    eq = Eq(5 * (22 + 9 * d), 425)\n\n    # Solve the equation\n    solution = solve(eq, d)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the difference `d` between the number of cookies in two adjacent boxes."]}
{"dataset_version": "2023-07-07", "queId": "f2e7d75d544640ef95f39ae11d58e429", "difficulty": "3", "qtype": "short_answer", "problem": "$\\tfrac{3}{4}$~of Chelsia\\textquotesingle s money is the same as~$\\tfrac{2}{3}$~of Benson\\textquotesingle s money. If Chelsia had $$$18$$ less than Benson, what is Chelsia and Benson\\textquotesingle s total sum of money? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "306.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote Chelsia's money as `C` and Benson's money as `B`.\n\nAccording to the problem, $\\frac{3}{4}$ of Chelsia's money is the same as $\\frac{2}{3}$ of Benson's money. This gives us the equation:\n1) $\\frac{3}{4}C = \\frac{2}{3}B$\n\nIt is also given that Chelsia had $18 less than Benson. This gives us the second equation:\n2) $C = B - 18$\n\nWe want to find the total sum of money, which is $C + B$.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, B = symbols('C B')\n\n    # Formulate equations\n    eq1 = Eq(3/4 * C, 2/3 * B)\n    eq2 = Eq(C, B - 18)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, B))\n    C_value = solution[C]\n    B_value = solution[B]\n\n    # Calculate the total sum of money\n    total_sum = C_value + B_value\n\n    # Return the final answer\n    return total_sum\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables, formulates the equations based on the problem statement, solves the equations to find the values of `C` and `B`, and then calculates the total sum of Chelsia and Benson's money. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "30f6b3c01a03478b9d6e70cbb8b7a3d4", "difficulty": "3", "qtype": "short_answer", "problem": "A rich man bought a house two years ago.  The houseing market is buoyant, and after a year the house had increased in value by 5\\%, so the value was £10,500 in the last year. In this year, the housing market slumps. The house loses 5\\% of its value.  Comparing with the original price, calculate the amount of profit or loss in this year. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-25.0", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the original price of the house as `P`.\n\nAfter the first year, the house increased in value by 5%, so the new value is:\n`P * (1 + 5/100) = £10,500`\n\nAfter the second year, the house loses 5% of its value from the end of the first year, so the new value is:\n`£10,500 * (1 - 5/100)`\n\nTo find the profit or loss comparing with the original price, we need to calculate the difference between the value of the house after the second year and the original price `P`.\n\nThe profit or loss is:\n`£10,500 * (1 - 5/100) - P`\n\nNow we have one equation with one unknown:\n`P * (1 + 5/100) = £10,500`\n\n## Step 2: Solve Equations Using Python Code:\n\n```python\ndef solution():\n    # Define the increased value after the first year\n    increased_value = 10500\n    \n    # Calculate the original price P before the increase\n    original_price = increased_value / (1 + 5/100)\n    \n    # Calculate the value after the second year (after the decrease)\n    value_after_decrease = increased_value * (1 - 5/100)\n    \n    # Calculate the profit or loss\n    profit_or_loss = value_after_decrease - original_price\n    \n    # Return the final answer\n    return profit_or_loss\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the original price of the house, the value after the second year, and the profit or loss comparing with the original price. The final answer will be the amount of profit or loss in this year."]}
{"dataset_version": "2023-07-07", "queId": "52bf46560c164e7bb42b6bd92f0f48a8", "difficulty": "3", "qtype": "short_answer", "problem": "In a magic show, after giving Leon, one of the audience, a calculator, the magician asks Leon to write his birthday and calculate according to the following steps:  ($1$) Leon inputs his month of birth.  ($2$) Multiply it by $$4$$.  ($3$) Add $$6$$ to the results.  ($4$) Multiply it by $$5$$.  ($5$) Subtract $$20$$ from the results.  ($6$) Multiply it by $$5$$.  ($7$) Add the number to his day of birth.  ($8$) Subtract $$50$$ from the results.  In the end, Leon gets $1126$. Do you know his birthday? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Strategies and Operations->Operational Problem"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote Leon's month of birth as `M` and his day of birth as `D`.\n\nFollowing the steps given in the problem, we can formulate the following equation:\n\n1. Start with the month of birth: `M`\n2. Multiply it by 4: `4M`\n3. Add 6: `4M + 6`\n4. Multiply by 5: `5(4M + 6)`\n5. Subtract 20: `5(4M + 6) - 20`\n6. Multiply by 5: `5[5(4M + 6) - 20]`\n7. Add the day of birth: `5[5(4M + 6) - 20] + D`\n8. Subtract 50: `5[5(4M + 6) - 20] + D - 50`\n\nThe final result Leon gets is 1126, so the equation is:\n\n`5[5(4M + 6) - 20] + D - 50 = 1126`\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M, D = symbols('M D')\n\n    # Formulate the equation\n    eq = Eq(5*(5*(4*M + 6) - 20) + D - 50, 1126)\n\n    # Solve the equation\n    solution = solve(eq, (M, D))\n\n    # Extract month and day from the solution\n    month = solution[M]\n    day = solution[D]\n\n    # Return the final answer (month and day)\n    return month, day\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will return the month and day of Leon's birthday."]}
{"dataset_version": "2023-07-07", "queId": "d9b27069b97d43039159301e52324136", "difficulty": "3", "qtype": "short_answer", "problem": "Student $$A$$ and Student $$B$$ both had a mathematics test. Student $$B$$ told student $$A$$ \"I scored $$50$$ points less than you in the mathematics test.\" Student A told student B \"if you gave me $$25$$ points, then my score would be $$5$$ times that of yours.\" What is the score Student $$A$$ got on the mathematics test? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Questions Involving Sum, Difference and Multiples->Problems of Difference and Multiple"], "answer": "100", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the score of Student A as `A` and the score of Student B as `B`.\n\nFrom the problem, we have two pieces of information:\n\n1. Student B scored 50 points less than Student A: `B = A - 50`\n2. If Student B gave Student A 25 points, then Student A's score would be 5 times that of Student B's new score: `A + 25 = 5 * (B - 25)`\n\nNow we have a system of two equations:\n1) `B = A - 50`\n2) `A + 25 = 5 * (B - 25)`\n\n## Step 2: Solve Equations Using Python Code and Give the Final Answer\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B = symbols('A B')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(B, A - 50)\n    eq2 = Eq(A + 25, 5 * (B - 25))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, B))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations, solves them using the sympy library, and returns the score of Student A."]}
{"dataset_version": "2023-07-07", "queId": "b13b087d91c3418cab75e734f729a72f", "difficulty": "3", "qtype": "short_answer", "problem": "Rasidah had $$$48$$ less than Chai Seng. Rasidah spent~$\\tfrac{3}{5}$~of her money and Chai Seng spent~$\\tfrac{6}{7}$~of his money. In the end, Chai Seng had~$\\tfrac{1}{2}$~as much money left as Rasidah. Find the amount of money Rasidah had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "120.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the amount of money Rasidah had at first as `R` and the amount of money Chai Seng had at first as `C`.\n\nFrom the problem, we have the following information:\n\n1. Rasidah had $48 less than Chai Seng: `R = C - 48`\n2. Rasidah spent 3/5 of her money: `R - 3/5 * R` is the amount left with Rasidah.\n3. Chai Seng spent 6/7 of his money: `C - 6/7 * C` is the amount left with Chai Seng.\n4. In the end, Chai Seng had 1/2 as much money left as Rasidah: `C - 6/7 * C = 1/2 * (R - 3/5 * R)`\n\nNow we can formulate the equations:\n\n1) `R = C - 48`\n2) `C - 6/7 * C = 1/2 * (R - 3/5 * R)`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    R, C = symbols('R C')\n\n    # Equation 1: Rasidah had $48 less than Chai Seng\n    eq1 = Eq(R, C - 48)\n\n    # Equation 2: In the end, Chai Seng had 1/2 as much money left as Rasidah\n    eq2 = Eq(C - 6/7 * C, 1/2 * (R - 3/5 * R))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (R, C))\n    result = solution[R]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the amount of money Rasidah had at first. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "2a6e8406868b4590b821325ac25f87f2", "difficulty": "3", "qtype": "short_answer", "problem": "$$Andy$$ had $$84$$ fewer cookies than $$Ben$$ at first. After $$Andy$$ bought~$\\tfrac{1}{3}$~more cookies and $$Ben$$ bought~$\\tfrac{1}{5}$~more cookies. $$Aandy$$ had~$\\tfrac{1}{3}$~as many cookies as $$Ben$$ in the end. How many cookies did $$Andy$$ have in the end? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "48.0000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of cookies Andy had at first as `A`, and the number of cookies Ben had at first as `B`.\n\nFrom the problem, we have the following information:\n\n1. Andy had 84 fewer cookies than Ben at first: `A = B - 84`\n2. Andy bought 1/3 more cookies: `A_new = A + (1/3) * A = (4/3) * A`\n3. Ben bought 1/5 more cookies: `B_new = B + (1/5) * B = (6/5) * B`\n4. Andy had 1/3 as many cookies as Ben in the end: `A_new = (1/3) * B_new`\n\nNow we can write these relationships as equations:\n\n1) `A = B - 84`\n2) `A_new = (4/3) * A`\n3) `B_new = (6/5) * B`\n4) `A_new = (1/3) * B_new`\n\nSubstituting `A` and `B` from equations 1, 2, and 3 into equation 4, we get:\n\n`(4/3) * A = (1/3) * (6/5) * B`\n\nNow we can substitute `A` from equation 1 into this equation:\n\n`(4/3) * (B - 84) = (1/3) * (6/5) * B`\n\n## Step 2: Solve Equations Using Python Code:\n\nNow let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B = symbols('A B')\n\n    # Equation 1: A = B - 84\n    eq1 = Eq(A, B - 84)\n\n    # Equation 4: (4/3) * A = (1/3) * (6/5) * B\n    # Substitute A from eq1 into this equation\n    eq2 = Eq((4/3) * (B - 84), (1/3) * (6/5) * B)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, B))\n    A_final = solution[A]\n\n    # Calculate the final number of cookies Andy has\n    A_new = (4/3) * A_final\n    result = A_new\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the equations and return the final number of cookies Andy has in the end."]}
{"dataset_version": "2023-07-07", "queId": "4e5a3868c9c2434595c65034ace0b292", "difficulty": "3", "qtype": "short_answer", "problem": "Ellina has twelve blocks, two each of red ($R$), blue ($B$), yellow ($Y$), green ($G$), orange ($O$), and purple ($P$). Call an arrangement of blocks $even$ if there is an even number of blocks between each pair of blocks of the same color. For example, the arrangement  $R$ $B$ $B$ $Y$ $G$ $G$ $Y$ $R$ $O$ $P$ $P$ $O$  is even. Ellina arranges her blocks in a row in random order. The probability that her arrangement is even is $\\frac{m}{n}$ where $m$ and $n$ are relatively prime positive integers. Find $m+n$. (2022 AIME I Problem 9) ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "", "generation": ["## Step 1: Formulate Equations\n\nTo solve this problem, we need to consider the arrangements of blocks that satisfy the condition of being \"even.\" We will use combinatorics to count the number of favorable outcomes (even arrangements) and the total number of possible outcomes.\n\nLet's denote:\n- `E` as the number of even arrangements.\n- `T` as the total number of arrangements.\n\nSince there are two blocks of each color, the total number of arrangements without any restrictions is given by the multinomial coefficient:\n\\[ T = \\frac{12!}{2!2!2!2!2!2!} \\]\n\nTo find `E`, we need to count the number of even arrangements. This is a more complex combinatorial problem that may involve breaking down the problem into cases or finding a pattern that satisfies the even arrangement condition.\n\nOnce we have expressions for `E` and `T`, we can calculate the probability `P` of an even arrangement as:\n\\[ P = \\frac{E}{T} \\]\n\nThe probability will be in the form of a reduced fraction `\\frac{m}{n}`, where `m` and `n` are relatively prime. We will then find the sum `m + n`.\n\n## Step 2: Solve Equations Using Python Code\n\nTo solve for `E`, we will need to use combinatorial logic and possibly iterate over different cases. We will use Python to calculate `T` and then find `E` using a combinatorial approach.\n\n```python\nfrom math import factorial\nfrom sympy import gcd\n\ndef total_arrangements():\n    # Calculate the total number of arrangements (T)\n    # using the multinomial coefficient formula\n    return factorial(12) // (factorial(2)**6)\n\ndef even_arrangements():\n    # This function will calculate the number of even arrangements (E)\n    # The logic to calculate E will be based on combinatorial arguments\n    # and is not trivial to express in a few lines of code.\n    # It will likely involve iterating over different cases and using\n    # combinatorial reasoning to count the even arrangements.\n    # Placeholder for the actual combinatorial logic:\n    # E = ...\n    pass  # Replace with actual logic to calculate E\n\ndef solution():\n    T = total_arrangements()\n    E = even_arrangements()  # This will be replaced with the actual calculation\n    \n    # Calculate the probability P as a fraction\n    m = E\n    n = T\n    common_divisor = gcd(m, n)\n    m //= common_divisor\n    n //= common_divisor\n    \n    # Return the sum of m and n\n    result = m + n\n    return result\n\n# Note: The even_arrangements function is not implemented here\n# because the combinatorial logic is non-trivial and requires\n# a detailed understanding of the problem's constraints.\n```\n\nThe actual implementation of the `even_arrangements` function is not provided here because it requires a detailed combinatorial analysis that is specific to the problem. This analysis would involve considering the positions of the blocks and ensuring that for each color, there is an even number of blocks between the two blocks of that color. This is a non-trivial task and would likely involve breaking the problem into smaller cases or finding a recursive relationship."]}
{"dataset_version": "2023-07-07", "queId": "7fc9064a1aa5469aa93c3e1bbde4bbee", "difficulty": "3", "qtype": "short_answer", "problem": "A box of cookies cost $$$6$$. How many boxes could be bought with $$$250$$? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "41", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of boxes that can be bought as `B`.\n\nThe cost of one box of cookies is $6, so the total cost for `B` boxes is `6 * B`.\n\nWe have $250 to spend, so the equation we can formulate is:\n`6 * B = 250`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve this equation using Python code.\n\n```python\ndef solution():\n    # Define the cost per box and total money available\n    cost_per_box = 6\n    total_money = 250\n\n    # Calculate the number of boxes that can be bought\n    number_of_boxes = total_money // cost_per_box\n\n    # Return the final answer\n    return number_of_boxes\n\n# Example usage:\n# print(solution())\n```\n\nThis code will return the number of boxes that can be bought with $250. The `//` operator is used for integer division, which is appropriate here since we cannot buy a fraction of a box."]}
{"dataset_version": "2023-07-07", "queId": "fdb38dfc8f624402a53c64aee38c936c", "difficulty": "3", "qtype": "short_answer", "problem": "Roy and Dennis shared a sum of money totaling $$$340$$. After Roy spent~$\\tfrac{2}{3}$~of his money and Dennis spent~$\\tfrac{1}{4}$~of his money, Dennis had twice as much money left as Roy. Find the amount of money Dennis had in the end. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "120.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the amount of money Roy initially had as `R` and the amount Dennis initially had as `D`.\n\nAccording to the problem, we have two pieces of information:\n\n1. The total sum of money that Roy and Dennis shared is $340:\n   `R + D = 340`\n\n2. After spending, Dennis has twice as much money left as Roy:\n   Dennis spent 1/4 of his money, so he has 3/4 left: `3/4 * D`\n   Roy spent 2/3 of his money, so he has 1/3 left: `1/3 * R`\n   Dennis has twice as much money left as Roy: `3/4 * D = 2 * (1/3 * R)`\n\nNow we have a system of two equations:\n1) `R + D = 340`\n2) `3/4 * D = 2 * (1/3 * R)`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    R, D = symbols('R D')\n\n    # Equation 1: The sum of Roy's and Dennis's money is $340\n    eq1 = Eq(R + D, 340)\n\n    # Equation 2: After spending, Dennis has twice as much money left as Roy\n    eq2 = Eq(3/4 * D, 2 * (1/3 * R))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (R, D))\n    dennis_money_end = solution[D] * 3/4  # Dennis has 3/4 of his money left\n\n    # Return the final answer\n    return dennis_money_end\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the equations, and calculates the amount of money Dennis had in the end. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "615a06562ee54cbf883a97926cfa289a", "difficulty": "3", "qtype": "short_answer", "problem": "Marry had $\\frac{7}{5}$ as many stickers as Alexis.~Marry and Alexis each gave $20 \\%$ of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by $80 \\%$. If Mary had $20$ stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-33.8983050847458", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Alexis had originally as `A`.\n\nSince Mary had $\\frac{7}{5}$ as many stickers as Alexis, the number of stickers Mary had originally is $\\frac{7}{5}A$.\n\nBoth Mary and Alexis gave $20\\%$ of their stickers to Charlotte. Therefore, Mary gave away $\\frac{20}{100} \\times \\frac{7}{5}A = \\frac{7}{25}A$ stickers, and Alexis gave away $\\frac{20}{100} \\times A = \\frac{1}{5}A$ stickers.\n\nLet's denote the original number of stickers Charlotte had as `C`. After receiving stickers from Mary and Alexis, Charlotte's stickers increased by $80\\%$, which means her final number of stickers is $C + \\frac{7}{25}A + \\frac{1}{5}A = C + \\frac{14}{25}A + \\frac{5}{25}A = C + \\frac{19}{25}A$.\n\nThe final number of stickers Charlotte has is $1.8C$ (since her stickers increased by $80\\%$).\n\nMary had $20$ stickers more than Charlotte in the end, so we have $\\frac{7}{5}A - \\frac{7}{25}A = 1.8C + 20$.\n\nNow we have a system of two equations:\n1) $C + \\frac{19}{25}A = 1.8C$\n2) $\\frac{7}{5}A - \\frac{7}{25}A = 1.8C + 20$\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, C = symbols('A C')\n\n    # Formulate equations\n    eq1 = Eq(C + 19/25*A, 1.8*C)\n    eq2 = Eq(7/5*A - 7/25*A, 1.8*C + 20)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (A, C))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and solves for the number of stickers Alexis had originally. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "3147e744aa374d87a759f9e0a3b9f01c", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Uncahnged Total + Backward Approach + Percentage Double Base}  Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "340.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Peter originally had as `P` and the number of stickers Sam originally had as `S`.\n\nFrom the problem, we have the following information:\n\n1. Sam had 40 stickers more than Peter: `S = P + 40`\n2. Sam gave 20% of his stickers to Peter: `Sam's new amount = S - 0.20S = 0.80S`\n   Peter's new amount after receiving from Sam = `P + 0.20S`\n3. Peter gave 25% of his stickers to Sam: `Peter's final amount = (P + 0.20S) - 0.25(P + 0.20S)`\n   Sam's final amount after receiving from Peter = `0.80S + 0.25(P + 0.20S)`\n4. In the end, Sam had 96 stickers more than Peter: `0.80S + 0.25(P + 0.20S) = (P + 0.20S) - 0.25(P + 0.20S) + 96`\n\nNow we need to solve for `P` using these equations.\n\n**Step 2: Solve Equations Using Python Code:**\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    P, S = symbols('P S')\n\n    # Equation 1: Sam had 40 stickers more than Peter\n    eq1 = Eq(S, P + 40)\n\n    # Equation 2: Sam gave 20% of his stickers to Peter and Peter gave 25% of his stickers to Sam\n    # In the end, Sam had 96 stickers more than Peter\n    eq2 = Eq(0.80*S + 0.25*(P + 0.20*S), (P + 0.20*S) - 0.25*(P + 0.20*S) + 96)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (P, S))\n    result = solution[P]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the number of stickers Peter had at first. The final answer will be returned by the `solution()` function."]}
{"dataset_version": "2023-07-07", "queId": "d54e6eab7a2b49a8afcd367d2c88a350", "difficulty": "3", "qtype": "short_answer", "problem": "Elvin went to a shopping mall. He spent $$ $120$$ on a chair and $$40 \\%$$ of the remainder on a jacket. He had $$30 \\%$$ of his original amount of money left after shopping. How much money did he have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "240.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the original amount of money Elvin had as `M`.\n\nAfter buying the chair for $120, the amount of money left is `M - 120`.\n\nHe then spends 40% of the remainder on a jacket, which is `0.40 * (M - 120)`.\n\nAfter shopping for both items, he has 30% of his original amount left, which is `0.30 * M`.\n\nSo the equation that represents the situation after all shopping is done is:\n`M - 120 - 0.40 * (M - 120) = 0.30 * M`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    M = symbols('M')\n\n    # Formulate the equation\n    eq = Eq(M - 120 - 0.40 * (M - 120), 0.30 * M)\n\n    # Solve the equation\n    solution = solve(eq, M)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variable `M`, formulates the equation based on the problem statement, solves the equation for `M`, and then returns the result, which is the original amount of money Elvin had."]}
{"dataset_version": "2023-07-07", "queId": "d53e348d27d24f5f894e4c70ba210f90", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ had some cookies. When $$A$$ divided the cookies among $$3$$ friends, she had $$1$$ cookie left. When $$A$$ divided the cookies among $$4$$ friends, she had $$3$$ cookies left. When $$A$$ divided the cookies among $$5$$ friends, she had $$4$$ cookies left. What was the least number of cookies that $$A$$ had? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "19", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of cookies that A had as `C`.\n\nWhen A divides the cookies among 3 friends and has 1 cookie left, we can write the equation as:\n`C ≡ 1 (mod 3)`\n\nWhen A divides the cookies among 4 friends and has 3 cookies left, we can write the equation as:\n`C ≡ 3 (mod 4)`\n\nWhen A divides the cookies among 5 friends and has 4 cookies left, we can write the equation as:\n`C ≡ 4 (mod 5)`\n\nWe are looking for the smallest positive integer `C` that satisfies all three congruences simultaneously. This is a problem that can be solved using the Chinese Remainder Theorem.\n\n## Step 2: Solve Equations Using Python Code:\n\nTo solve these congruences, we will use the sympy library in Python, which has a built-in function for solving systems of modular equations.\n\n```python\ndef solution():\n    from sympy.ntheory.modular import solve_congruence\n\n    # Define the congruences as tuples (remainder, modulus)\n    congruences = [(1, 3), (3, 4), (4, 5)]\n\n    # Solve the system of congruences using the Chinese Remainder Theorem\n    result, _ = solve_congruence(*congruences)\n\n    # Return the final answer\n    return result\n\n# Example usage:\n# print(solution())\n```\n\nThis code will return the least number of cookies that A had, which satisfies all the given conditions."]}
{"dataset_version": "2023-07-07", "queId": "ab627271938f40748d9acac110c92172", "difficulty": "3", "qtype": "short_answer", "problem": "Two sisters did maths and English together. The elder sister spent $$10$$ minutes more on maths than the younger sister, while the younger sister spent $$4$$ minutes more on English. It was known that the elder sister spent a total of $$88$$ minutes on her homework, while the younger sister spent $$12$$ minutes less on her maths homework than on her English homework. How many minutes did it take the younger sister to do her English homework? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Questions Involving Sum, Difference and Multiples->Problems Involving Sum and Difference"], "answer": "47", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the following variables:\n- `M_e` for the time the elder sister spent on maths.\n- `E_e` for the time the elder sister spent on English.\n- `M_y` for the time the younger sister spent on maths.\n- `E_y` for the time the younger sister spent on English.\n\nFrom the problem, we have the following information:\n1. The elder sister spent 10 minutes more on maths than the younger sister: `M_e = M_y + 10`.\n2. The younger sister spent 4 minutes more on English than the elder sister: `E_y = E_e + 4`.\n3. The elder sister spent a total of 88 minutes on her homework: `M_e + E_e = 88`.\n4. The younger sister spent 12 minutes less on her maths homework than on her English homework: `M_y = E_y - 12`.\n\nWe need to find `E_y`, the time the younger sister spent on English homework.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M_e, E_e, M_y, E_y = symbols('M_e E_e M_y E_y')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(M_e, M_y + 10)  # Elder sister spent 10 more minutes on maths\n    eq2 = Eq(E_y, E_e + 4)   # Younger sister spent 4 more minutes on English\n    eq3 = Eq(M_e + E_e, 88)  # Elder sister spent 88 minutes in total\n    eq4 = Eq(M_y, E_y - 12)  # Younger sister spent 12 less minutes on maths than English\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3, eq4), (M_e, E_e, M_y, E_y))\n    result = solution[E_y]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the time the younger sister spent on English homework. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "d0dd7735401a440189d8289ae8ab1028", "difficulty": "3", "qtype": "short_answer", "problem": "Daniel and Patrick had an equal number of stickers at first. Daniel then gave away $$24$$ stickers to his friend Melvin, and Patrick bought another $$10$$ stickers. In the end, Patrick had twice as many stickers as Daniel. Find the number of stickers Daniel had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "58", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Daniel and Patrick each had at first as `D`.\n\nAfter Daniel gave away 24 stickers, he had `D - 24` stickers left.\nAfter Patrick bought another 10 stickers, he had `D + 10` stickers.\n\nAccording to the problem, Patrick had twice as many stickers as Daniel in the end, so we can write the equation:\n`D + 10 = 2 * (D - 24)`\n\nNow we have one equation with one unknown:\n1) `D + 10 = 2D - 48`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    D = symbols('D')\n\n    # Formulate the equation\n    eq = Eq(D + 10, 2 * (D - 24))\n\n    # Solve the equation\n    solution = solve(eq, D)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n```\n\nNow, let's execute this Python code to find the number of stickers Daniel had at first."]}
{"dataset_version": "2023-07-07", "queId": "e069b4976d444e998bace1344680903f", "difficulty": "3", "qtype": "short_answer", "problem": "There are three inlet pipes $A$, $B$, and $C$ in a pool. If only $A$ and $C$ are turned on, the pool can be filled from empty and $18$ tons of water are from $A$. If only $B$ and $C$ are turned on, the pool can be filled from empty and $27$ tons of water are from $B$. Given the flow rate of $B$ is twice that of $A$, how many tons of water can the pool be filled up with? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Work Word Problems"], "answer": "", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the following variables:\n- `A` = the flow rate of pipe A in tons per unit time.\n- `B` = the flow rate of pipe B in tons per unit time.\n- `C` = the flow rate of pipe C in tons per unit time.\n- `T` = the total amount of water the pool can hold in tons.\n\nGiven that the flow rate of B is twice that of A, we have:\n1) `B = 2A`\n\nWhen only A and C are turned on, the pool fills with 18 tons from A. Let `t1` be the time it takes for the pool to fill with A and C only. We have:\n2) `A * t1 + C * t1 = T`\n3) `A * t1 = 18`\n\nWhen only B and C are turned on, the pool fills with 27 tons from B. Let `t2` be the time it takes for the pool to fill with B and C only. We have:\n4) `B * t2 + C * t2 = T`\n5) `B * t2 = 27`\n\nWe need to find `T`, the total amount of water the pool can hold.\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A, B, C, T, t1, t2 = symbols('A B C T t1 t2')\n\n    # Given equation B = 2A\n    eq1 = Eq(B, 2*A)\n\n    # Equations for A and C filling the pool\n    eq2 = Eq(A * t1 + C * t1, T)\n    eq3 = Eq(A * t1, 18)\n\n    # Equations for B and C filling the pool\n    eq4 = Eq(B * t2 + C * t2, T)\n    eq5 = Eq(B * t2, 27)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3, eq4, eq5), (A, B, C, T, t1, t2))\n    result = solution[T]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the necessary variables and equations based on the problem statement, then solves the system of equations to find the total amount of water the pool can hold, which is `T`. The `solve` function from the sympy library is used to find the solution, and the result is returned."]}
{"dataset_version": "2023-07-07", "queId": "ba1ea0471abe4147b19a80a73dee7d82", "difficulty": "3", "qtype": "short_answer", "problem": "Cindy had a total of $$55$$ pieces of $$$2$$ and $$$5$$ notes at first. She spent~$\\tfrac{1}{3}$~of the number of $$$2$$ notes and received another $$8$$ pieces of $$$5$$ notes from her father. After that, the number of $$$5$$ notes she had was~$\\tfrac{3}{7}$ of the remaining number of notes. How much money did Cindy have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "167", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of $2 notes as `x` and the number of $5 notes as `y`.\n\nFrom the problem, we have the following information:\n\n1. Cindy had a total of 55 pieces of $2 and $5 notes at first:\n   `x + y = 55`\n\n2. She spent 1/3 of the number of $2 notes:\n   `x - (1/3)x = (2/3)x` (remaining $2 notes)\n\n3. She received another 8 pieces of $5 notes:\n   `y + 8` (new total of $5 notes)\n\n4. After that, the number of $5 notes she had was 3/7 of the remaining number of notes:\n   `y + 8 = (3/7)(x + y + 8)`\n\nNow we have a system of two equations:\n1) `x + y = 55`\n2) `y + 8 = (3/7)(x + y + 8)`\n\nWe also want to find the total amount of money Cindy had at first, which is:\n`Total = 2x + 5y`\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve, Rational\n\n    # Define variables\n    x, y = symbols('x y')\n\n    # Equation 1: Total number of notes\n    eq1 = Eq(x + y, 55)\n\n    # Equation 2: Number of $5 notes after spending and receiving\n    eq2 = Eq(y + 8, Rational(3, 7) * (x + y + 8))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (x, y))\n    x_value = solution[x]\n    y_value = solution[y]\n\n    # Calculate the total amount of money Cindy had at first\n    total_money = 2 * x_value + 5 * y_value\n\n    # Return the final answer\n    return total_money\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the equations to find the values of `x` and `y`, and then calculates the total amount of money Cindy had at first. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "f8b94a6a82c7406a83b47ec788b92ca2", "difficulty": "3", "qtype": "short_answer", "problem": "（AMC 2020 Question \\#27）  On my chicken farm where I have 24 pens, the pens were a bit crowded. So I built 6 more pens, and the number of chickens in each pen reduced by 6. How many chickens do I have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "720", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the number of chickens as `C` and the original number of chickens in each pen as `P`.\n\nFrom the problem, we have two scenarios:\n\n1. Initially, there are 24 pens, and we don't know how many chickens are in each pen. So the total number of chickens is the number of pens multiplied by the number of chickens per pen: `C = 24 * P`.\n\n2. After building 6 more pens (making it 30 pens), the number of chickens in each pen reduces by 6. So the new number of chickens per pen is `P - 6`, and the total number of chickens remains the same: `C = 30 * (P - 6)`.\n\nNow we have a system of two equations:\n1) `C = 24 * P`\n2) `C = 30 * (P - 6)`\n\n## Step 2: Solve Equations Using Python Code:\n\nWe will use Python code to solve these equations.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    C, P = symbols('C P')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(C, 24 * P)\n    eq2 = Eq(C, 30 * (P - 6))\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (C, P))\n    result = solution[C]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables, formulates the equations, solves them using the sympy library, and returns the total number of chickens on the farm."]}
{"dataset_version": "2023-07-07", "queId": "0877713fe19e4645ba3e7db233f47117", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "240", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of animals initially in the farm as `A`, the number of cows as `C`, and the number of goats as `G`.\n\nFrom the problem, we have the following information:\n\n1. 65% of the animals were cows, so `C = 0.65A`.\n2. The rest were goats, so `G = A - C = A - 0.65A = 0.35A`.\n3. After adding 240 more animals, the percentage of cows increased to 85% (since 65% + 20% = 85%) of the new total `A + 240`.\n4. The number of goats doubled, so the new number of goats is `2G`.\n\nWe can now set up the following equations:\n\n1) `C = 0.65A` (initial number of cows)\n2) `G = 0.35A` (initial number of goats)\n3) `C + 240 = 0.85(A + 240)` (number of cows after adding 240 animals)\n4) `2G = G + 240` (number of goats after adding 240 animals)\n\nWe can simplify equation 4 to find `G`:\n\n`2G = G + 240`\n`G = 240`\n\nNow we can substitute `G` into equation 2 to find `A`:\n\n`240 = 0.35A`\n`A = 240 / 0.35`\n\nOnce we have `A`, we can use it to find `C` using equation 1.\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve the equations using Python code.\n\n```python\ndef solution():\n    # Define the initial number of goats\n    G = 240  # From the simplified equation 4\n\n    # Calculate the total number of animals initially (A)\n    A = G / 0.35  # From equation 2\n\n    # Return the initial number of goats\n    return G\n\n# Example usage:\nprint(solution())\n```\n\nThis code will calculate and return the initial number of goats in the farm."]}
{"dataset_version": "2023-07-07", "queId": "37ba30f7b64a46d380cae5ff5558dd59", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Repeated Identity + Fraction as a set}  Sally had some cupcakes. She had 72 more chocolate cupcakes than vanilla cupcakes. She had 36 lesser blueberry cupcakes than vanilla cupcakes. After selling $\\dfrac{1}{6}$~of the chocolate cupcakes, $\\dfrac{2}{3}$~of the vanilla cupcakes and $\\dfrac{7}{9}$~of the blueberry cupcakes. Sally had 427 cupcakes left altogether. How many chocolate cupcakes did Sally sell? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "57.0000000000000", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the number of vanilla cupcakes as `V`, the number of chocolate cupcakes as `C`, and the number of blueberry cupcakes as `B`.\n\nFrom the problem, we have the following relationships:\n1. Sally had 72 more chocolate cupcakes than vanilla cupcakes: `C = V + 72`\n2. She had 36 fewer blueberry cupcakes than vanilla cupcakes: `B = V - 36`\n\nAfter selling a fraction of each type of cupcakes, Sally has the following left:\n1. Chocolate cupcakes left: `C - (1/6)C = (5/6)C`\n2. Vanilla cupcakes left: `V - (2/3)V = (1/3)V`\n3. Blueberry cupcakes left: `B - (7/9)B = (2/9)B`\n\nThe total number of cupcakes left after selling is 427, so we have the equation:\n`(5/6)C + (1/3)V + (2/9)B = 427`\n\nNow we have a system of four equations:\n1) `C = V + 72`\n2) `B = V - 36`\n3) `(5/6)C + (1/3)V + (2/9)B = 427`\n\nWe need to find the number of chocolate cupcakes Sally sold, which is `(1/6)C`.\n\n## Step 2: Solve Equations Using Python Code\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    V, C, B = symbols('V C B')\n\n    # Equations based on the problem statement\n    eq1 = Eq(C, V + 72)\n    eq2 = Eq(B, V - 36)\n    eq3 = Eq((5/6)*C + (1/3)*V + (2/9)*B, 427)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (V, C, B))\n    chocolate_sold = solution[C] / 6\n\n    # Return the final answer\n    return chocolate_sold\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the system of equations, and calculates the number of chocolate cupcakes Sally sold. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "4bbb81d1111b4e3cbec6b7862f30f6d7", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Double Base}  Marry and Alexis had some stickers in the ratio 7 : 5. Marry and Alexis each gave 20\\% of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by 80\\%. If Mary had 20 stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "38.4615384615385", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of stickers Marry had originally as `M` and the number of stickers Alexis had originally as `A`. Let `C` be the original number of stickers Charlotte had.\n\nAccording to the problem, Marry and Alexis had stickers in the ratio 7:5, so we can write:\n1) `M / A = 7 / 5`\n\nMarry and Alexis each gave 20% of their stickers to Charlotte, so Marry gave `0.20M` stickers to Charlotte and Alexis gave `0.20A` stickers to Charlotte. After giving away the stickers, Marry had `0.80M` stickers left and Alexis had `0.80A` stickers left.\n\nCharlotte's stickers increased by 80%, which means the number of stickers she received is equal to 80% of her original amount `C`. So, we can write:\n2) `0.20M + 0.20A = 0.80C`\n\nFinally, after the exchange, Marry had 20 stickers more than Charlotte, so we can write:\n3) `0.80M = C + 20`\n\nNow we have a system of three equations:\n1) `M / A = 7 / 5`\n2) `0.20M + 0.20A = 0.80C`\n3) `0.80M = C + 20`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M, A, C = symbols('M A C')\n\n    # Formulate equations based on the problem statement\n    eq1 = Eq(M / A, 7 / 5)\n    eq2 = Eq(0.20*M + 0.20*A, 0.80*C)\n    eq3 = Eq(0.80*M, C + 20)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (M, A, C))\n    result = solution[A]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines a function `solution()` that uses the sympy library to solve the system of equations and returns the number of stickers Alexis had at first."]}
{"dataset_version": "2023-07-07", "queId": "efb9468b904144138bdc171c8b89d9b7", "difficulty": "3", "qtype": "short_answer", "problem": "There were a total of $$140$$ green and blue balls in a bag. After~$\\tfrac{2}{5}$~of the blue balls and $$28$$ green balls were removed from the bag, there was an equal number of green and blue balls left in the bag. How many blue balls were there in the bag at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "70.0000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of green balls as `G` and the number of blue balls as `B`.\n\nAccording to the problem, we have:\n1) The total number of green and blue balls is 140: `G + B = 140`\n\nAfter removing \\(\\frac{2}{5}\\) of the blue balls and 28 green balls, there is an equal number of green and blue balls left in the bag:\n2) The number of green balls left is `G - 28`.\n3) The number of blue balls left is `B - \\frac{2}{5}B = \\frac{3}{5}B`.\n\nSince the number of green and blue balls left is equal, we have:\n4) `G - 28 = \\frac{3}{5}B`\n\nNow we have a system of two equations:\n1) `G + B = 140`\n2) `G - 28 = \\frac{3}{5}B`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    G, B = symbols('G B')\n\n    # Formulate equations\n    eq1 = Eq(G + B, 140)\n    eq2 = Eq(G - 28, 3/5 * B)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (G, B))\n    result = solution[B]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the number of blue balls (`B`) at the beginning. The `solve` function from the `sympy` library is used to find the solution to the system of equations. The final answer is the value of `B` which is returned by the `solution` function."]}
{"dataset_version": "2023-07-07", "queId": "19d5b1dcfa2c4b1bb5d7e097116869d5", "difficulty": "3", "qtype": "short_answer", "problem": "Mrs Lee had a total of $$125$$ oranges and apples. She sold half of the apples and $$35$$ oranges. In the end, she had an equal number of oranges and apples left. Find the number of oranges Mrs Lee had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "65", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of oranges Mrs. Lee had at first as `O` and the number of apples she had at first as `A`.\n\nAccording to the problem, the total number of oranges and apples is 125:\n1) `O + A = 125`\n\nShe sold half of the apples, so the number of apples left is `A/2`.\nShe sold 35 oranges, so the number of oranges left is `O - 35`.\n\nIn the end, she had an equal number of oranges and apples left:\n2) `O - 35 = A/2`\n\nNow we have a system of two equations:\n1) `O + A = 125`\n2) `O - 35 = A/2`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    O, A = symbols('O A')\n\n    # Formulate equations\n    eq1 = Eq(O + A, 125)\n    eq2 = Eq(O - 35, A/2)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (O, A))\n    result = solution[O]\n\n    # Return the final answer\n    return result\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the number of oranges Mrs. Lee had at first."]}
{"dataset_version": "2023-07-07", "queId": "6e22fcfa859a4c8fbb3d505818fcf090", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ has fewer than $$90$$ cookies. If $$A$$ puts $$6$$ cookies into each box, she will have $$4$$ cookies left. If $$A$$ puts $$7$$ cookies into each box, she will be short of $$5$$ cookies. How many cookies does $$A$$ have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "16", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of cookies that A has as `C`.\n\nWhen A puts 6 cookies into each box and has 4 cookies left, we can express this as:\nC = 6n + 4\nwhere n is the number of boxes.\n\nWhen A puts 7 cookies into each box and is short of 5 cookies, we can express this as:\nC + 5 = 7m\nwhere m is the number of boxes.\n\nWe know that C is fewer than 90, so:\nC < 90\n\nNow we have a system of equations and an inequality:\n1) `C = 6n + 4`\n2) `C + 5 = 7m`\n3) `C < 90`\n\n**Step 2: Solve Equations Using Python Code:**\n\nWe will use Python code to find the value of `C` that satisfies all the conditions.\n\n```python\ndef solution():\n    # We will iterate over possible values of C since C is fewer than 90\n    for C in range(89):  # C is fewer than 90\n        if (C - 4) % 6 == 0 and (C + 5) % 7 == 0:\n            # If C satisfies both conditions, we return it as the result\n            return C\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will iterate through all possible values of `C` from 0 to 88 (since `C` is fewer than 90) and check for the values that satisfy both conditions. When it finds such a value, it returns it as the result."]}
{"dataset_version": "2023-07-07", "queId": "f7fe017b34bc4119bfc266aeef3024e6", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "240.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of animals initially in the farm as `A`, the number of cows as `C`, and the number of goats as `G`.\n\nFrom the problem, we have the following information:\n\n1. 65% of the animals were cows, so `C = 0.65A`.\n2. The rest were goats, so `G = A - C = A - 0.65A = 0.35A`.\n3. When 240 more animals were added, the percentage of cows became 85% (since it increased by 20%), so the new number of cows is `0.85(A + 240)`.\n4. The number of goats doubled, so the new number of goats is `2G`.\n\nWe can now set up the equations:\n\n1) `C + G + 240 = A + 240` (The total number of animals after adding 240 more)\n2) `0.85(A + 240) = C + 240` (The new number of cows is 85% of the total number of animals)\n3) `2G = G + 240` (The number of goats doubled)\n\nSubstituting `C` and `G` from the first two points into the equations, we get:\n\n1) `0.65A + 0.35A + 240 = A + 240`\n2) `0.85(A + 240) = 0.65A + 240`\n3) `2(0.35A) = 0.35A + 240`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    A = symbols('A')\n\n    # Equation 3: 2(0.35A) = 0.35A + 240\n    eq = Eq(2 * 0.35 * A, 0.35 * A + 240)\n\n    # Solve the equation\n    solution = solve(eq, A)\n    total_animals = solution[0]\n\n    # Calculate the number of goats initially\n    initial_goats = 0.35 * total_animals\n\n    # Return the final answer\n    return initial_goats\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the initial number of goats in the farm."]}
{"dataset_version": "2023-07-07", "queId": "2b33ed6a37234a7f8cfa9077a2c039ba", "difficulty": "3", "qtype": "short_answer", "problem": "$$James$$ sold $$1680$$ cookies from a box of cookies in the first month and kept the rest of the cookies. $$James$$ sold~$\\tfrac{7}{20}$~more cookies from another similar box of cookies in the second month and kept the rest of the cookies. If the number of cookies $$James$$ kept decreased by~$\\tfrac{3}{20}$, how many cookies were there in the box? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "0.0", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the total number of cookies in the box as `C`.\n\nIn the first month, James sold 1680 cookies and kept the rest. So the number of cookies kept in the first month is `C - 1680`.\n\nIn the second month, James sold \\(\\frac{7}{20}\\) more cookies than in the first month, which is `1680 + \\frac{7}{20} * C`. The number of cookies kept in the second month is `C - (1680 + \\frac{7}{20} * C)`.\n\nThe problem states that the number of cookies James kept decreased by \\(\\frac{3}{20}\\) of the total number of cookies in the box. Therefore, the difference between the number of cookies kept in the first month and the second month is \\(\\frac{3}{20} * C\\).\n\nSo we have the equation:\n`C - 1680 - (C - (1680 + \\frac{7}{20} * C)) = \\frac{3}{20} * C`\n\nSimplifying the equation, we get:\n`C - 1680 - C + 1680 + \\frac{7}{20} * C = \\frac{3}{20} * C`\n\n**Step 2: Solve Equations Using Python Code:**\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    C = symbols('C')\n\n    # Formulate the equation\n    eq = Eq(C - 1680 - C + 1680 + (7/20) * C, (3/20) * C)\n\n    # Solve the equation\n    solution = solve(eq, C)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will calculate the total number of cookies in the box based on the given conditions."]}
{"dataset_version": "2023-07-07", "queId": "104db66ae297441bbca8c76f5ce475ec", "difficulty": "3", "qtype": "short_answer", "problem": "Mrs Chen spent $$$36$$ on a number of plates and~$\\tfrac{3}{4}$~of the remaining money on a number of cups. If she had~$\\tfrac{1}{6}$~of the original sum of money left, how much money did she have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "108.000000000000", "generation": ["## Step 1: Formulate Equations:\n\nLet's denote the original sum of money Mrs. Chen had as `M`.\n\nAccording to the problem, Mrs. Chen spent $36 on plates. So, the remaining money after buying plates is `M - 36`.\n\nShe then spent $\\frac{3}{4}$ of the remaining money on cups. Therefore, the amount spent on cups is $\\frac{3}{4}(M - 36)$.\n\nAfter buying cups, she had $\\frac{1}{6}$ of the original sum of money left. So, the money left is $\\frac{1}{6}M$.\n\nThe equation representing the money left after buying plates and cups is:\n$$ M - 36 - \\frac{3}{4}(M - 36) = \\frac{1}{6}M $$\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's solve the equation using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variable\n    M = symbols('M')\n\n    # Formulate the equation\n    eq = Eq(M - 36 - (3/4)*(M - 36), (1/6)*M)\n\n    # Solve the equation\n    solution = solve(eq, M)\n    result = solution[0]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variable `M`, formulates the equation based on the problem statement, solves for `M`, and then returns the result, which is the original sum of money Mrs. Chen had."]}
{"dataset_version": "2023-07-07", "queId": "8d5bc66e7f26483e93a8178a57870366", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Single Base}  On the first day of an amusement park\\textquotesingle s opening, the number of male visitors was 450 more than the number of female visitors. On the second day, the number of female visitors increased by 15\\% but the number of make visitors decreased by 18\\%. The total number of visitors for the second day was 1354. How many make visitors were there on the first day? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "950.000000000000", "generation": ["### Step 1: Formulate Equations\n\nLet's denote the number of female visitors on the first day as `F` and the number of male visitors on the first day as `M`.\n\nFrom the problem statement, we have the following information:\n\n1. The number of male visitors was 450 more than the number of female visitors on the first day:\n   `M = F + 450`\n\n2. On the second day, the number of female visitors increased by 15%, so the number of female visitors on the second day is:\n   `F_second_day = F + 0.15 * F = 1.15 * F`\n\n3. On the second day, the number of male visitors decreased by 18%, so the number of male visitors on the second day is:\n   `M_second_day = M - 0.18 * M = 0.82 * M`\n\n4. The total number of visitors for the second day was 1354:\n   `F_second_day + M_second_day = 1354`\n   `1.15 * F + 0.82 * M = 1354`\n\nNow we have a system of two equations:\n1) `M = F + 450`\n2) `1.15 * F + 0.82 * M = 1354`\n\n### Step 2: Solve Equations Using Python Code\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    F, M = symbols('F M')\n\n    # Equation 1: M = F + 450\n    eq1 = Eq(M, F + 450)\n\n    # Equation 2: 1.15 * F + 0.82 * M = 1354\n    eq2 = Eq(1.15 * F + 0.82 * M, 1354)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (F, M))\n    result = solution[M]\n\n    # Return the final answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the equations to find the number of male visitors on the first day. The final answer is returned by the function."]}
{"dataset_version": "2023-07-07", "queId": "19ee53ef309b4ac1b03a0754f950fa53", "difficulty": "3", "qtype": "short_answer", "problem": "A Badminton Club had thrice as many members as the Bowling Club. However, after $$36$$ members left the Badminton Club and $$4$$ members left the Bowling Club, the two clubs had the same number of members in the end. How many members did each of the clubs have in the end? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "16", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of members in the Badminton Club as `B` and the number of members in the Bowling Club as `C`.\n\nAccording to the problem, the Badminton Club had thrice as many members as the Bowling Club initially. So we have:\n1) `B = 3C`\n\nAfter 36 members left the Badminton Club and 4 members left the Bowling Club, the two clubs had the same number of members. So we have:\n2) `B - 36 = C - 4`\n\nNow we have a system of two equations:\n1) `B = 3C`\n2) `B - 36 = C - 4`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    B, C = symbols('B C')\n\n    # Formulate equations\n    eq1 = Eq(B, 3*C)\n    eq2 = Eq(B - 36, C - 4)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (B, C))\n    result = solution[C]  # Since both clubs have the same number of members in the end\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables `B` and `C`, formulates the equations based on the problem statement, solves the system of equations, and returns the number of members each club had in the end."]}
{"dataset_version": "2023-07-07", "queId": "1969baf23afa40a7baf0654943977371", "difficulty": "3", "qtype": "short_answer", "problem": "If 17\\textsuperscript{th} October is Tuesday. How many Sundays are there between 17\\textsuperscript{th} October and 20\\textsuperscript{th} December? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Periodic Problems->Periodic Problems of Time->Period of Dates"], "answer": "8", "generation": ["## Step 1: Formulate Equations:\n\nTo solve this problem, we need to calculate the number of days between 17th October and 20th December and then determine how many Sundays fall within this period.\n\nLet's denote:\n- `D` as the total number of days between 17th October and 20th December.\n- `W` as the number of complete weeks within this period.\n- `S` as the number of Sundays.\n\nSince 17th October is a Tuesday, the first Sunday will be 5 days later, on 22nd October. We need to calculate the number of days from 22nd October to 20th December to find out how many Sundays there are.\n\nThe number of days in October after the 17th is 31 - 17 = 14 days.\nThe number of days in November is 30 days.\nThe number of days in December up to the 20th is 20 days.\n\nSo the total number of days `D` is given by:\n`D = (14 - 5) + 30 + 20`\n\nThe number of complete weeks `W` is:\n`W = D // 7`\n\nThe number of Sundays `S` is equal to the number of complete weeks:\n`S = W`\n\n## Step 2: Solve Equations Using Python Code:\n\nNow, let's write the Python code to calculate the number of Sundays.\n\n```python\ndef solution():\n    # Calculate the total number of days from 22nd October to 20th December\n    days_in_october_after_22nd = 31 - 22\n    days_in_november = 30\n    days_in_december = 20\n    total_days = days_in_october_after_22nd + days_in_november + days_in_december\n    \n    # Calculate the number of complete weeks\n    complete_weeks = total_days // 7\n    \n    # The number of Sundays is equal to the number of complete weeks\n    number_of_sundays = complete_weeks\n    \n    # Return the final answer\n    return number_of_sundays\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will return the number of Sundays between 17th October and 20th December."]}
{"dataset_version": "2023-07-07", "queId": "d5a7ecbc1d6a47828162d5c281243895", "difficulty": "3", "qtype": "short_answer", "problem": "A lady bought twice as many apple tarts than strawberry tarts. She spent an equal amount of money on each type of item. A strawberry tart cost $$$0.40$$ more than an apple tart. How many tarts did she buy altogether if she paid a total of $$$40$$? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of strawberry tarts as `S` and the number of apple tarts as `A`. According to the problem, the lady bought twice as many apple tarts as strawberry tarts, so we have:\n`A = 2S`\n\nLet's denote the cost of a strawberry tart as `C_s` and the cost of an apple tart as `C_a`. According to the problem, a strawberry tart costs $0.40 more than an apple tart, so we have:\n`C_s = C_a + 0.40`\n\nThe lady spent an equal amount of money on each type of tart, so the total cost for strawberry tarts is equal to the total cost for apple tarts:\n`S * C_s = A * C_a`\n\nThe total amount spent on tarts is $40, so we have:\n`S * C_s + A * C_a = 40`\n\nNow we have a system of three equations:\n1) `A = 2S`\n2) `C_s = C_a + 0.40`\n3) `S * C_s + A * C_a = 40`\n\n**Step 2: Solve Equations Using Python Code:**\n\n```\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    S, A, C_s, C_a = symbols('S A C_s C_a')\n\n    # Equations based on the problem statement\n    eq1 = Eq(A, 2*S)\n    eq2 = Eq(C_s, C_a + 0.40)\n    eq3 = Eq(S * C_s + A * C_a, 40)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2, eq3), (S, A, C_s, C_a))\n    \n    # Calculate the total number of tarts\n    total_tarts = solution[S] + solution[A]\n\n    # Return the final answer\n    return total_tarts\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code defines the variables and equations based on the problem statement, solves the system of equations, calculates the total number of tarts, and returns the final answer."]}
{"dataset_version": "2023-07-07", "queId": "6c4a0c8fddc0483ca389ad988e693de1", "difficulty": "3", "qtype": "short_answer", "problem": "Melvin, Nelson and Oliver were playing cards.  At first Melvin started with $$40$$ cards and then he gained $$\\frac{5}{8}$$ more than his original number of cards from Nelson.  In the next round, Melvin and Nelson each lost $$\\frac{1}{4}$$ of Melvin\\textquotesingle s original number of cards to Oliver.  In the final round, Melvin gained $$\\frac{1}{8}$$ of his original number of cards from Nelson. After the final round, Melvin, Nelson and Oliver all have the same number of cards. What was the total number of cards Melvin, Nelson and Oliver had at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Inverse Operation Problems->Inverse Operation Problems with Single Variable"], "answer": "180.000000000000", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the following:\n- `M` as the original number of cards Melvin had, which is 40.\n- `N` as the original number of cards Nelson had.\n- `O` as the original number of cards Oliver had.\n\nFrom the problem, we have the following transactions:\n1. Melvin gains \\(\\frac{5}{8}M\\) from Nelson, so Melvin now has \\(M + \\frac{5}{8}M\\) and Nelson has \\(N - \\frac{5}{8}M\\).\n2. Melvin and Nelson each lose \\(\\frac{1}{4}M\\) to Oliver, so Melvin now has \\(M + \\frac{5}{8}M - \\frac{1}{4}M\\), Nelson has \\(N - \\frac{5}{8}M - \\frac{1}{4}M\\), and Oliver has \\(O + \\frac{1}{4}M + \\frac{1}{4}M\\).\n3. Melvin gains \\(\\frac{1}{8}M\\) from Nelson, so Melvin now has \\(M + \\frac{5}{8}M - \\frac{1}{4}M + \\frac{1}{8}M\\), Nelson has \\(N - \\frac{5}{8}M - \\frac{1}{4}M - \\frac{1}{8}M\\), and Oliver's count remains the same.\n\nAfter the final round, all three have the same number of cards, which gives us the equation:\n\\[M + \\frac{5}{8}M - \\frac{1}{4}M + \\frac{1}{8}M = N - \\frac{5}{8}M - \\frac{1}{4}M - \\frac{1}{8}M = O + \\frac{1}{4}M + \\frac{1}{4}M\\]\n\nSince we know `M` is 40, we can simplify the equation and solve for `N` and `O`.\n\n## Step 2: Solve Equations Using Python Code\n\nNow, let's solve the equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    M = 40\n    N, O = symbols('N O')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(M + (5/8)*M - (1/4)*M + (1/8)*M, N - (5/8)*M - (1/4)*M - (1/8)*M)\n    eq2 = Eq(M + (5/8)*M - (1/4)*M + (1/8)*M, O + (1/4)*M + (1/4)*M)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (N, O))\n    N_final = solution[N]\n    O_final = solution[O]\n\n    # Calculate the total number of cards they had at first\n    total_cards = M + N_final + O_final\n\n    # Return the final answer\n    return total_cards\n\n# Call the function and print the result\nprint(solution())\n```\n\nThis code will solve the equations and return the total number of cards Melvin, Nelson, and Oliver had at first."]}
{"dataset_version": "2023-07-07", "queId": "b4a6a6d3563d489c96fe7593170152df", "difficulty": "3", "qtype": "short_answer", "problem": "Warren and Naida make a list of numbers. They start with 0, then Warren adds 20, then Naida subtracts 1, then Warren adds 19, then Naida subtracts 2.  $0,20,19,38,36,\\cdots$  This pattern continues until Warren adds 1 and Naida subtracts 20, which ends up back at 0. What is the largest number in their list? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "1", "generation": ["## Step 1: Formulate Equations\n\nLet's denote the largest number in the list as `L`.\n\nThe pattern involves Warren adding a decreasing sequence of numbers starting from 20 and ending at 1, and Naida subtracting an increasing sequence of numbers starting from 1 and ending at 20.\n\nThe sequence of operations is as follows:\n1. Start with 0.\n2. Warren adds 20, Naida subtracts 1.\n3. Warren adds 19, Naida subtracts 2.\n4. ...\n5. Warren adds 1, Naida subtracts 20.\n\nThe largest number `L` will be just before Naida subtracts the largest number, which is 20. At this point, Warren would have added 1 to the previous number.\n\nLet's denote the second-largest number in the list as `SL`. Then, `L = SL + 1`.\n\nTo find `SL`, we need to consider the pattern of the sequence. The sequence increases by `20 - 1`, then `19 - 2`, and so on, until `1 - 20`. We can express this as a sum of differences:\n\n`SL = 0 + (20 - 1) + (19 - 2) + ... + (2 - 19) + (1 - 20)`\n\nThis is equivalent to the sum of two arithmetic series:\n\n`SL = (20 + 19 + ... + 1) - (1 + 2 + ... + 20)`\n\nThe sum of an arithmetic series can be calculated using the formula `n/2 * (first_term + last_term)`, where `n` is the number of terms.\n\nFor the series `20 + 19 + ... + 1`, we have `n = 20`, `first_term = 20`, and `last_term = 1`.\nFor the series `1 + 2 + ... + 20`, we have the same `n`, `first_term`, and `last_term`.\n\nThus, the sum of each series is `20/2 * (20 + 1) = 10 * 21 = 210`.\n\nSince both series are the same, their difference is 0, and `SL = 0`.\n\nTherefore, the largest number `L` is `SL + 1 = 0 + 1 = 1`.\n\n## Step 2: Solve Equations Using Python Code\n\nSince we have already determined the largest number `L` analytically, we can simply return the result using Python code.\n\n```python\ndef solution():\n    # The largest number in the list, as determined analytically\n    L = 1\n    \n    # Return the final answer\n    return L\n```\n\nThe largest number in their list is 1."]}
{"dataset_version": "2023-07-07", "queId": "2b306992899a447c8bce44df9392630c", "difficulty": "3", "qtype": "short_answer", "problem": "$$John$$ had $$180$$ more cookies than $$Peter$$. After $$John$$ sold~$\\tfrac{4}{5}$~of her cookies and $$Peter$$ sold~$\\tfrac{3}{10}$~of her cookies, $$John$$ had~$\\tfrac{1}{2}$~as many cookies as $$Peter$$ left. How many cookies did $$John$$ have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "420.000000000000", "generation": ["**Step 1: Formulate Equations:**\n\nLet's denote the number of cookies John had at first as `J` and the number of cookies Peter had at first as `P`.\n\nAccording to the problem, John had 180 more cookies than Peter:\n1) `J = P + 180`\n\nAfter John sold 4/5 of her cookies, she had 1/5 of her cookies left:\n2) `J_left = (1/5) * J`\n\nAfter Peter sold 3/10 of his cookies, he had 7/10 of his cookies left:\n3) `P_left = (7/10) * P`\n\nFinally, John had 1/2 as many cookies as Peter left:\n4) `J_left = (1/2) * P_left`\n\nNow we have a system of equations:\n1) `J = P + 180`\n2) `J_left = (1/5) * J`\n3) `P_left = (7/10) * P`\n4) `J_left = (1/2) * P_left`\n\n**Step 2: Solve Equations Using Python Code:**\n\nLet's solve these equations using Python code.\n\n```python\ndef solution():\n    from sympy import symbols, Eq, solve\n\n    # Define variables\n    J, P = symbols('J P')\n\n    # Formulate equations based on the problem\n    eq1 = Eq(J, P + 180)\n    eq2 = Eq((1/5) * J, (1/2) * (7/10) * P)\n\n    # Solve the system of equations\n    solution = solve((eq1, eq2), (J, P))\n    result = solution[J]\n\n    # Return the final answer\n    return result\n\n# Uncomment the following line to test the function\n# print(solution())\n```\n\nThis code defines the variables and equations based on the problem statement and then solves the system of equations to find the number of cookies John had at first. The `solve` function from the sympy library is used to find the solution to the system of equations. The final answer is the value of `J` which represents the number of cookies John had initially."]}
