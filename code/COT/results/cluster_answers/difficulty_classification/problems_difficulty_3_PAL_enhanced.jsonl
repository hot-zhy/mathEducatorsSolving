{"dataset_version": "2023-07-07", "queId": "24e6a79cbcf3471baf6993ecdd2917eb", "difficulty": "3", "qtype": "short_answer", "problem": "David had a total of $$40$$ notes. The notes were either $$$2$$ or $$$10$$ notes. After he spent $$40$$\\% of the $$$10$$ notes and $$25$$\\% of the $$$2$$ notes on a gift, he had~$\\tfrac{4}{5}$~as many $$$10$$ notes as $$$2$$ notes left. How much did the gift cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "90.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much the gift cost that David bought.\n    # David had a total of 40 notes, which were either $2 or $10 notes.\n    # After spending 40% of the $10 notes and 25% of the $2 notes, he had 4/5 as many $10 notes as $2 notes left.\n\n    # Let's denote the number of $10 notes as T and the number of $2 notes as N.\n    # We have two equations based on the problem's description:\n    # 1) T + N = 40 (total number of notes)\n    # 2) (1 - 0.40) * T = (4/5) * (1 - 0.25) * N (relation between the remaining $10 and $2 notes)\n\n    # We can solve these equations to find T and N.\n\n    from sympy import symbols, Eq, solve\n\n    T, N = symbols('T N')\n    # Equation based on the total number of notes\n    total_notes_eq = Eq(T + N, 40)\n    # Equation based on the remaining notes after spending\n    remaining_notes_eq = Eq((1 - 0.40) * T, (4/5) * (1 - 0.25) * N)\n\n    # Solve the system of equations\n    solutions = solve((total_notes_eq, remaining_notes_eq), (T, N))\n\n    # Extract solutions for T and N\n    T_solution = solutions[T]\n    N_solution = solutions[N]\n\n    # Calculate the cost of the gift\n    cost_of_gift = 0.40 * T_solution * 10 + 0.25 * N_solution * 2\n    result = cost_of_gift.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the cost of the gift David bought by solving a system of equations representing the number of $10 and $2 notes he had and the amount he spent from each. The result is returned as a floating-point number."]}
{"dataset_version": "2023-07-07", "queId": "7f06cc0235094faaa81a0a2fb9cab606", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam and Peter had some stickers in the ratio 7 : 5. Sam and Peter each gave 20\\% of their stivkers to John. As a result, John's stickers increased by 80\\%. If Sam had 20 stickers more than John in the end, how many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "53.5714285714286", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam and Peter had stickers in the ratio 7 : 5.\n    # They both gave 20% of their stickers to John, increasing John's stickers by 80%.\n    # In the end, Sam had 20 stickers more than John.\n\n    # Let's denote the initial number of stickers Sam and Peter had as S and P, respectively.\n    # According to the ratio, S/P = 7/5.\n    # Let J be the initial number of stickers John had.\n    # After giving away stickers, Sam has S - 0.2S left, and Peter has P - 0.2P left.\n    # John's stickers increased by 80%, so he has J + 0.8J after receiving stickers.\n    # Sam had 20 stickers more than John in the end, so S - 0.2S = J + 1.8J + 20.\n\n    # We can set up equations based on the problem's description:\n    # S/P = 7/5\n    # S - 0.2S = J + 1.8J + 20\n    # 0.2S + 0.2P = 1.8J (since the stickers given to John by Sam and Peter are the increase John had)\n\n    from sympy import symbols, Eq, solve\n\n    S, P, J = symbols('S P J')\n    # Equation based on the ratio\n    ratio_equation = Eq(S/P, 7/5)\n    # Equation based on the final number of stickers Sam and John had\n    sam_john_equation = Eq(S - 0.2*S, J + 1.8*J + 20)\n    # Equation based on the stickers given to John\n    john_stickers_equation = Eq(0.2*S + 0.2*P, 1.8*J)\n\n    # Solve the system of equations\n    solutions = solve((ratio_equation, sam_john_equation, john_stickers_equation), (S, P, J))\n\n    # Extract the solution for P (Peter's initial stickers)\n    P_initial = solutions[P]\n    result = P_initial.evalf()\n    return result\n\n```\nThis code defines a function `solution()` that sets up and solves a system of equations based on the given problem. It returns the initial number of stickers Peter had."]}
{"dataset_version": "2023-07-07", "queId": "707f06cacc044e1d85aef697dea2c32f", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Single Base}  65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "14.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of goats in a farm.\n    # Initially, 65% of the animals were cows and the rest were goats.\n    # When 240 more animals were added, the percentage of cows increased to 85% and the number of goats doubled.\n    \n    # Let T be the total initial number of animals.\n    # Initial number of cows C = 65% of T, and initial number of goats G = 35% of T.\n    # After adding 240 animals, total becomes T + 240.\n    # The number of goats doubles, so new number of goats = 2G.\n    # New percentage of cows = 85% of (T + 240).\n\n    # Solving for T and then finding G using these relations.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    # Initial cows and goats\n    C = 0.65 * T\n    G = 0.35 * T\n\n    # Equation after addition of animals\n    new_total = T + 240\n    new_cows = 0.85 * new_total  # 85% are now cows\n    equation = Eq(new_cows, C + 240 - 2 * G)\n\n    # Solve for T\n    T_solution = solve(equation, T)[0]\n\n    # Calculate initial number of goats\n    G_initial = G.subs(T, T_solution)\n    result = G_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "19d110feae03410cb8fbd2510aacfe2a", "difficulty": "3", "qtype": "short_answer", "problem": "P can complete a job in 12 days working 8 hours a day. Q can complete the same job in 8 days working 10 hours a day. If both P and Q work together, working 8 hours a day, how many days can they complete the job?（⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "5.454545454545454", "generation": ["```python\ndef solution():\n    # The problem is to find out how many days P and Q can complete the job together, working 8 hours a day.\n    \n    # Let's denote the total work by W.\n    # P can complete the job in 12 days working 8 hours a day, so P's work rate is W / (12 * 8).\n    # Q can complete the job in 8 days working 10 hours a day, so Q's work rate is W / (8 * 10).\n    \n    # When P and Q work together for 8 hours a day, their combined work rate is the sum of their individual work rates.\n    # We need to find the number of days (D) they will take to complete the job working together for 8 hours a day.\n    # The equation is: D * 8 * (P's rate + Q's rate) = W.\n\n    # P's rate = W / (12 * 8)\n    # Q's rate = W / (8 * 10)\n    # Combined rate = W / (12 * 8) + W / (8 * 10)\n    # D * 8 * (W / (12 * 8) + W / (8 * 10)) = W\n    # D = W / (8 * (W / (12 * 8) + W / (8 * 10)))\n    # Since W cancels out, we can solve for D directly.\n\n    # Calculate the combined work rate of P and Q\n    P_rate = 1 / (12 * 8)\n    Q_rate = 1 / (8 * 10)\n    combined_rate = P_rate + Q_rate\n\n    # Calculate the number of days D they will take to complete the job working together\n    D = 1 / (8 * combined_rate)\n    result = D\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "250641e98bbf4da6a3ad1c67bad85305", "difficulty": "3", "qtype": "short_answer", "problem": "65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "14.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of goats in a farm.\n    # Initially, 65% of the animals were cows and the rest were goats.\n    # When 240 more animals were added, the percentage of cows increased to 85% and the number of goats doubled.\n    \n    # Let T be the total initial number of animals.\n    # Initial number of cows C = 65% of T, and initial number of goats G = 35% of T.\n    # After adding 240 animals, total becomes T + 240.\n    # The number of goats doubles, so new number of goats = 2G.\n    # New percentage of cows = 85% of (T + 240).\n\n    # Solving for T and then finding G using these relations.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    # Initial cows and goats\n    C = 0.65 * T\n    G = 0.35 * T\n\n    # Equation after addition of animals\n    new_total = T + 240\n    new_cows = 0.85 * new_total  # 85% are now cows\n    equation = Eq(new_cows, C + 240 - 2 * G)\n\n    # Solve for T\n    T_solution = solve(equation, T)[0]\n\n    # Calculate initial number of goats\n    G_initial = G.subs(T, T_solution)\n    result = G_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "af4a495ebf5c4ddcacec30bac10e45e8", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ has fewer than $$40$$ cookies. If $$A$$ puts $$6$$ cookies into each box, she will have $$5$$ cookies left. If $$A$$ puts $$5$$ cookies into each box, she will be short of $$3$$ cookies. How many cookies does $$A$$ have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "17", "generation": ["```python\ndef solution():\n    # The problem is to find the number of cookies A has, which is fewer than 40.\n    # If A puts 6 cookies into each box, she will have 5 cookies left.\n    # If A puts 5 cookies into each box, she will be short of 3 cookies.\n\n    # Let's denote the number of cookies A has as C.\n    # According to the problem, C when divided by 6 leaves a remainder of 5.\n    # Also, C is 3 less than a multiple of 5.\n\n    # We can set up two equations based on the problem's description:\n    # C = 6n + 5 (where n is a non-negative integer)\n    # C + 3 = 5m (where m is a non-negative integer)\n\n    # We need to find a value for C that satisfies both equations and is less than 40.\n\n    for n in range(40):  # We iterate through possible values of n\n        C = 6 * n + 5\n        if (C + 3) % 5 == 0 and C < 40:  # Check if C satisfies both conditions\n            result = C\n            break\n\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "a16e80d24e034bddb8280d950f5a08b1", "difficulty": "3", "qtype": "short_answer", "problem": "Miss Jenny is separating some candies for class A and class B. If each student in class A gets $4$ candies, $20$ more candies are needed. If each student in class B can get $6$ candies, there will be $16$ candies left. It is known that the number of students in class A is twice of class B. How many candies does Miss Jenny have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Distribution Problems"], "answer": "4.00000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of candies Miss Jenny has.\n    # If each student in class A gets 4 candies, 20 more candies are needed.\n    # If each student in class B gets 6 candies, there will be 16 candies left.\n    # The number of students in class A is twice the number of students in class B.\n\n    # Let B be the number of students in class B.\n    # Then, the number of students in class A is 2B.\n    # Total candies needed for class A is 4 * 2B = 8B, but 20 more are needed.\n    # Total candies needed for class B is 6B, and 16 are left.\n\n    # We can set up two equations:\n    # 1. 8B + 20 = total number of candies\n    # 2. 6B + 16 = total number of candies\n\n    # Since both expressions equal the total number of candies, we can set them equal to each other:\n    # 8B + 20 = 6B + 16\n\n    from sympy import symbols, Eq, solve\n\n    B = symbols('B')\n    # Equation based on the problem's description\n    equation = Eq(8 * B + 20, 6 * B + 16)\n\n    # Solve for B\n    B_solution = solve(equation, B)[0]\n\n    # Calculate the total number of candies\n    total_candies = 6 * B_solution + 16\n    result = total_candies.evalf()\n    return result\n\n```\nNow, let's execute the function to find the answer."]}
{"dataset_version": "2023-07-07", "queId": "2927ab094a1741819a4e2a25ebabc6e7", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "14.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of goats in a farm.\n    # Initially, 65% of the animals were cows and the rest were goats.\n    # When 240 more animals were added, the percentage of cows increased to 85% and the number of goats doubled.\n    \n    # Let T be the total initial number of animals.\n    # Initial number of cows C = 65% of T, and initial number of goats G = 35% of T.\n    # After adding 240 animals, total becomes T + 240.\n    # The number of goats doubles, so new number of goats = 2G.\n    # New percentage of cows = 85% of (T + 240).\n\n    # Solving for T and then finding G using these relations.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    # Initial cows and goats\n    C = 0.65 * T\n    G = 0.35 * T\n\n    # Equation after addition of animals\n    new_total = T + 240\n    new_cows = 0.85 * new_total  # 85% are now cows\n    equation = Eq(new_cows, C + 240 - 2 * G)\n\n    # Solve for T\n    T_solution = solve(equation, T)[0]\n\n    # Calculate initial number of goats\n    G_initial = G.subs(T, T_solution)\n    result = G_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "a51a939a7af045ed9ba206d87ac10cdc", "difficulty": "3", "qtype": "short_answer", "problem": "A year is called a lucky year if the sum of its digits is 18. For example, 1917 is a lucky year since 1+9+1+7=18. How many lucky years are there between 2018 and 2108? （⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "3", "generation": ["```python\ndef solution():\n    # The task is to find the number of lucky years between 2018 and 2108.\n    # A year is a lucky year if the sum of its digits equals 18.\n\n    # The approach is to iterate through each year in the range and check if the sum of its digits is 18.\n    \n    def is_lucky_year(year):\n        # Function to check if a year is a lucky year\n        return sum(int(digit) for digit in str(year)) == 18\n\n    # Count lucky years between 2018 and 2108\n    lucky_years_count = 0\n    for year in range(2018, 2109):  # Include 2108 in the range\n        if is_lucky_year(year):\n            lucky_years_count += 1\n\n    result = lucky_years_count\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "1e6694bd51114d55895dbe80e548b123", "difficulty": "3", "qtype": "short_answer", "problem": "$$4$$ individuals pass the ball to each other and they pass it to others immediately when they catch the ball, starting from $$A$$ as the first pass, the number of different methods that after $$3$$ passes the ball returns to $$A$$ is~\\uline{~~~~~~~~~~}~. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "6", "generation": ["```python\ndef solution():\n    # The problem is to find the number of different methods that after 3 passes the ball returns to A.\n    # There are 4 individuals: A, B, C, and D.\n    # A passes the ball first, and after 3 passes, it must return to A.\n    # The sequence of passes can be represented as A -> X -> Y -> A, where X and Y are any of the other 3 individuals.\n    # X cannot be A because A cannot pass the ball to himself.\n    # Y cannot be A because the ball must return to A only after the third pass.\n    # Y also cannot be X because the ball cannot be passed back immediately to the person who just passed it.\n\n    # Let's calculate the number of different methods.\n\n    # A can pass the ball to 3 different individuals (B, C, or D).\n    num_passes_from_A = 3\n\n    # After A passes the ball, the next individual (X) can pass the ball to 2 different individuals (not A or themselves).\n    num_passes_from_X = 2\n\n    # The total number of different methods is the product of the two possibilities.\n    total_methods = num_passes_from_A * num_passes_from_X\n\n    result = total_methods\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "8c7bad2823b64ce9bd000eca653f9f98", "difficulty": "3", "qtype": "short_answer", "problem": "At a party, every $$4$$th guest gets a face mask and every $$10$$th guest gets a mug. What is the position of the first guest that will get both a face mask and a mug? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Factors and Multiples"], "answer": "20", "generation": ["To find the position of the first guest that will get both a face mask and a mug, we need to find the least common multiple (LCM) of 4 and 10, since the LCM will give us the first position that is a multiple of both 4 and 10.\n\n```\ndef solution():\n    # The problem is to find the least common multiple (LCM) of 4 and 10.\n    # The LCM will give us the position of the first guest that gets both a face mask and a mug.\n\n    from math import gcd\n\n    # Function to find LCM\n    def lcm(x, y):\n        return x * y // gcd(x, y)\n\n    # Find LCM of 4 and 10\n    result = lcm(4, 10)\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "b2e74fd3787345abaed2bffc05eda905", "difficulty": "3", "qtype": "short_answer", "problem": "Elias had $$5$$ times as many stickers as Aileen. After Elias gave away $$88$$ stickers and Aileen lost $$8$$ stickers, they had the same number of stickers left. How many stickers did each of them have in the end? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "(12.0000000000000, 12.0000000000000)", "generation": ["```python\ndef solution():\n    # The problem is to find the number of stickers Elias and Aileen each had in the end.\n    # Initially, Elias had 5 times as many stickers as Aileen.\n    # After Elias gave away 88 stickers and Aileen lost 8 stickers, they had the same number of stickers.\n\n    # Let A be the initial number of stickers Aileen had.\n    # Then, Elias had 5A stickers initially.\n    # After the changes, Elias had 5A - 88 stickers and Aileen had A - 8 stickers.\n    # We set these equal to each other to find A.\n\n    from sympy import symbols, Eq, solve\n\n    A = symbols('A')\n    # Equation based on the problem's description\n    equation = Eq(5 * A - 88, A - 8)\n\n    # Solve for A\n    A_solution = solve(equation, A)[0]\n\n    # Calculate the number of stickers each had in the end\n    Elias_end = 5 * A_solution - 88\n    Aileen_end = A_solution - 8\n    result = (Elias_end.evalf(), Aileen_end.evalf())\n    return result\n\n```\nThis code defines a function `solution` that calculates the number of stickers Elias and Aileen each had in the end after Elias gave away 88 stickers and Aileen lost 8 stickers, given that Elias initially had 5 times as many stickers as Aileen. The function returns a tuple with the final number of stickers for Elias and Aileen."]}
{"dataset_version": "2023-07-07", "queId": "ed32aedbb2a34499a71cf190747aeb19", "difficulty": "3", "qtype": "short_answer", "problem": "Student $$A$$ and Student $$B$$ both had a mathematic test. Student $$B$$ told student $$A$$ \"If you gave me $$24$$ points, my result would be $$2$$ points less than yours.\" Student A told student B \"if you gave me $$25$$ points, then my result would be $$5$$ times that of yours.\" What is the score Student $$A$$ got on the mathematic test? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Questions Involving Sum, Difference and Multiples->Problems of Difference and Multiple"], "answer": "70.0000000000000", "generation": ["```python\ndef solution():\n    # Let's denote the score of Student A as A and the score of Student B as B.\n    # According to Student B, if A gave B 24 points, B's score would be 2 points less than A's score.\n    # So, B + 24 = A - 2\n    # According to Student A, if B gave A 25 points, A's score would be 5 times B's score.\n    # So, A + 25 = 5 * (B - 25)\n\n    from sympy import symbols, Eq, solve\n\n    A, B = symbols('A B')\n    # Equations based on the problem's description\n    equation1 = Eq(B + 24, A - 2)\n    equation2 = Eq(A + 25, 5 * (B - 25))\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (A, B))\n\n    # Extract the score of Student A\n    A_score = solutions[A]\n    result = A_score.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "020a47d927424600b54866be0f9e7377", "difficulty": "3", "qtype": "short_answer", "problem": "A school library had $$3900$$ books. The ratio of the number of Chinese, Malay and English books is $$4 : 3 : 6$$. When the school bought $$510$$ new books, the number of Chinese books increased by $$20$$\\% and the number of Malay books increased by $$10$$\\%. Find the percentage increase in the number of English books. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Percentage Calculation"], "answer": "10.0", "generation": ["```python\ndef solution():\n    # The problem is to find the percentage increase in the number of English books.\n    # Initially, the ratio of Chinese, Malay, and English books is 4:3:6.\n    # The total number of books is 3900.\n    # After purchasing 510 new books, the number of Chinese books increased by 20% and Malay books by 10%.\n\n    # Let's denote the initial number of Chinese, Malay, and English books as C, M, and E respectively.\n    # According to the ratio, we have C:M:E = 4:3:6.\n    # Therefore, C = 4/13 * total_books, M = 3/13 * total_books, E = 6/13 * total_books.\n\n    total_books = 3900\n    new_books = 510\n\n    # Calculate the initial number of books for each language\n    C_initial = 4 / 13 * total_books\n    M_initial = 3 / 13 * total_books\n    E_initial = 6 / 13 * total_books\n\n    # Calculate the new number of Chinese and Malay books after the increase\n    C_new = C_initial * 1.20  # 20% increase\n    M_new = M_initial * 1.10  # 10% increase\n\n    # Since the total number of books is now total_books + new_books,\n    # and we know the new number of Chinese and Malay books,\n    # we can find the new number of English books.\n    E_new = total_books + new_books - C_new - M_new\n\n    # Calculate the percentage increase in the number of English books\n    E_increase_percentage = ((E_new - E_initial) / E_initial) * 100\n\n    result = E_increase_percentage\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "7e469a60ae594c1eb1c906000dd9e1b3", "difficulty": "3", "qtype": "short_answer", "problem": "Woody organised a quiz night in the toy room. He asked $25$ questions.  For each correct answer you gained $4$ points.  For each incorrect answer you lost $2$ points.  For each question you did not attempt you scored $0$ point.  Rex answered all but one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19", "generation": ["```python\ndef solution():\n    # The problem is to find the number of correct answers Rex had.\n    # There were 25 questions in total.\n    # For each correct answer, Rex gained 4 points.\n    # For each incorrect answer, Rex lost 2 points.\n    # Rex did not attempt one question and answered the rest.\n    # Rex's total score was 66 points.\n\n    # Let C be the number of correct answers and I be the number of incorrect answers.\n    # Since Rex did not attempt one question, the total number of questions he answered is 24.\n    # Therefore, C + I = 24.\n    # The score from correct answers is 4C and the score lost from incorrect answers is -2I.\n    # The total score is 4C - 2I = 66.\n\n    from sympy import symbols, Eq, solve\n\n    C, I = symbols('C I')\n    # Equation based on the problem's description\n    answered_questions = Eq(C + I, 24)\n    score_equation = Eq(4*C - 2*I, 66)\n\n    # Solve the system of equations\n    solutions = solve((answered_questions, score_equation), (C, I))\n\n    # Extract the number of correct answers\n    correct_answers = solutions[C]\n    result = correct_answers\n    return result\n\n```\nThis code defines a function `solution` that calculates the number of correct answers Rex had during the quiz night. It sets up a system of equations based on the given conditions and solves for the number of correct answers. The result is then returned."]}
{"dataset_version": "2023-07-07", "queId": "3d7b8c3bc3f54a2dbce551c74529dd16", "difficulty": "3", "qtype": "short_answer", "problem": "David had a total of $$38$$ notes. The notes are either $$$2$$ notes or $$$10$$ notes. After he spent $$80$$\\% of the $$$10$$ notes and $$75$$\\% of the $$$2$$ notes on a fan, he was left with thrice as many $$$10$$ notes as $$$2$$ notes. How much did the fan cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "252.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much the fan cost.\n    # David had a total of 38 notes, consisting of $2 and $10 notes.\n    # After spending 80% of the $10 notes and 75% of the $2 notes, he was left with thrice as many $10 notes as $2 notes.\n\n    # Let's denote the number of $10 notes as T and the number of $2 notes as F (for two).\n    # We have two equations:\n    # 1) T + F = 38 (total number of notes)\n    # 2) (1 - 0.80) * T = 3 * (1 - 0.75) * F (thrice as many $10 notes as $2 notes left after spending)\n\n    from sympy import symbols, Eq, solve\n\n    T, F = symbols('T F')\n    # Equation based on the total number of notes\n    total_notes_eq = Eq(T + F, 38)\n    # Equation based on the remaining notes after spending\n    remaining_notes_eq = Eq((1 - 0.80) * T, 3 * (1 - 0.75) * F)\n\n    # Solve the system of equations\n    solutions = solve((total_notes_eq, remaining_notes_eq), (T, F))\n\n    # Calculate the number of notes spent\n    T_spent = 0.80 * solutions[T]\n    F_spent = 0.75 * solutions[F]\n\n    # Calculate the cost of the fan\n    fan_cost = T_spent * 10 + F_spent * 2\n    result = fan_cost.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the cost of the fan by setting up a system of equations based on the given conditions and solving for the number of $10 and $2 notes. It then calculates the amount spent on the fan and returns the result."]}
{"dataset_version": "2023-07-07", "queId": "94bb6ae56dbd4a98a0fbeaa59c7d8691", "difficulty": "3", "qtype": "short_answer", "problem": "Miss Jenny is separating some candies for class A and class B. If each student in class A gets $4$ candies, $20$ more candies are needed. If each student in class B can get $6$ candies, there will be $16$ candies left. It is known that the number of students in class A is twice of class B. How many candies does Miss Jenny have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Distribution Problems"], "answer": "-124.000000000000", "generation": ["```python\ndef solution():\n    # Let's denote the number of students in class B as B and in class A as A.\n    # According to the problem, A = 2B.\n    # If each student in class A gets 4 candies, 20 more candies are needed.\n    # If each student in class B gets 6 candies, there will be 16 candies left.\n    # We can set up two equations based on this information:\n    # 4A + 20 = total number of candies\n    # 6B - 16 = total number of candies\n    # Since A = 2B, we can substitute A in the first equation and solve for B.\n\n    from sympy import symbols, Eq, solve\n\n    B = symbols('B')\n    A = 2 * B  # Number of students in class A is twice of class B\n\n    # Equation for class A\n    equation_A = Eq(4 * A + 20, 6 * B - 16)\n\n    # Solve for B\n    B_solution = solve(equation_A, B)[0]\n\n    # Calculate the total number of candies\n    total_candies = 6 * B_solution - 16\n    result = total_candies.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the number of candies Miss Jenny has by setting up equations based on the given conditions and solving for the unknowns. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "cd9d85bed1d74e6cb214e001f0a094e3", "difficulty": "3", "qtype": "short_answer", "problem": "Rasidah had $$$48$$ less than Chai Seng. Rasidah spent~$\\tfrac{3}{5}$~of her money and Chai Seng spent~$\\tfrac{6}{7}$~of his money. In the end, Chai Seng had~$\\tfrac{1}{2}$~as much money left as Rasidah. Find the amount of money Rasidah had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "120.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the amount of money Rasidah had at first.\n    # Rasidah had $48 less than Chai Seng.\n    # Rasidah spent 3/5 of her money and Chai Seng spent 6/7 of his money.\n    # In the end, Chai Seng had 1/2 as much money left as Rasidah.\n\n    # Let's denote Rasidah's initial amount of money as R and Chai Seng's initial amount as C.\n    # According to the problem, C = R + $48.\n    # After spending, Rasidah has 2/5 of R left and Chai Seng has 1/7 of C left.\n    # Finally, Chai Seng has 1/2 as much money left as Rasidah: 1/7 * C = 1/2 * 2/5 * R.\n\n    from sympy import symbols, Eq, solve\n\n    R = symbols('R')\n    C = R + 48  # Chai Seng's initial amount\n\n    # Equation based on the problem's description\n    equation = Eq(1/7 * C, 1/2 * 2/5 * R)\n\n    # Solve for R\n    rasidah_initial = solve(equation, R)[0]\n    result = rasidah_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "b02ecddb14a14da0b461c2caa96532c3", "difficulty": "3", "qtype": "short_answer", "problem": "Ema had $$$360$$ less than Keng Wee. Ema spent~$\\tfrac{1}{4}$~of her money and Keng Wee spent~$\\tfrac{4}{7}$~of his money. In the end, Keng Wee and Ema had the same amount of money left. Find the amount of money Keng Wee had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "840.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial amount of money Keng Wee had.\n    # Ema had $360 less than Keng Wee.\n    # Ema spent 1/4 of her money and Keng Wee spent 4/7 of his money.\n    # In the end, they both had the same amount of money left.\n\n    # Let's denote the initial amount of money Keng Wee had as K.\n    # Then, the initial amount of money Ema had is K - $360.\n    # After spending, Ema has 3/4 of her initial money, and Keng Wee has 3/7 of his initial money.\n    # We can set up an equation: 3/4 * (K - $360) = 3/7 * K.\n\n    from sympy import symbols, Eq, solve\n\n    K = symbols('K')\n    # Equation based on the problem's description\n    equation = Eq(3/4 * (K - 360), 3/7 * K)\n\n    # Solve for K\n    keng_wee_initial = solve(equation, K)[0]\n    result = keng_wee_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "c94ef69eb1ea40b382fada9c92ec874e", "difficulty": "3", "qtype": "short_answer", "problem": "John had $\\frac{5}{13}$ of the amount of Jessie\\textquotesingle s money. Jessie then transferred $$ $600$$ to John. As a result, John\\textquotesingle s money became $50 \\%$ of the amount of Jessie\\textquotesingle s money. How much money did they have in total? $ $$~\\uline{~~~~~~~~~~}~ ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "10800.0000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total amount of money John and Jessie had together.\n    # Initially, John had 5/13 of Jessie's money.\n    # Jessie transferred $600 to John, and then John had 50% of Jessie's money.\n\n    # Let J be the amount of money John had initially, and M be the amount of money Jessie had initially.\n    # According to the problem, J = 5/13 * M.\n    # After transferring $600, John's money becomes J + $600, and Jessie's money becomes M - $600.\n    # At this point, John's money is 50% of Jessie's money, so J + $600 = 1/2 * (M - $600).\n\n    from sympy import symbols, Eq, solve\n\n    J, M = symbols('J M')\n    # Initial relation between John's and Jessie's money\n    initial_relation = Eq(J, 5/13 * M)\n\n    # Relation after transferring $600\n    transfer_relation = Eq(J + 600, 1/2 * (M - 600))\n\n    # Solve the system of equations\n    solutions = solve((initial_relation, transfer_relation), (J, M))\n\n    # Calculate total amount of money they had initially\n    total_money = solutions[J] + solutions[M]\n    result = total_money.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "f96223372da84682a7c29924dbb659bb", "difficulty": "3", "qtype": "short_answer", "problem": "A box could contain $$8$$ cookies. There were $$298$$ cookies. How many boxes were needed? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "38", "generation": ["```python\ndef solution():\n    # The problem is to find out how many boxes are needed to contain 298 cookies,\n    # given that each box can contain 8 cookies.\n\n    # Let's denote the number of cookies as C and the number of boxes as B.\n    # Each box can contain 8 cookies, so we need to divide the total number of cookies by 8\n    # and round up to the nearest whole number because we can't have a fraction of a box.\n\n    import math\n\n    C = 298  # Total number of cookies\n    cookies_per_box = 8\n\n    # Calculate the number of boxes needed\n    B = math.ceil(C / cookies_per_box)\n    result = B\n    return result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "36563a3f9be64d47a2d4bd411b572cae", "difficulty": "3", "qtype": "short_answer", "problem": "On the first day of an amusement park\\textquotesingle s opening, the number of male visitors was $450$ more than the number of female visitors. On the second day, the number of female visitors increased by $15 \\%$ but the number of male visitors decreased by $18 \\%$. The total number of visitors for the second day was $1354$. How many visitors were there on the first day? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "1450.00000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of visitors on the first day of an amusement park's opening.\n    # On the first day, the number of male visitors was 450 more than the number of female visitors.\n    # On the second day, the number of female visitors increased by 15% and the number of male visitors decreased by 18%.\n    # The total number of visitors for the second day was 1354.\n\n    # Let F be the number of female visitors on the first day.\n    # Then, male visitors M = F + 450.\n    # On the second day, female visitors increased to F + 0.15F and male visitors decreased to M - 0.18M.\n    # Total visitors on the second day: 1354 = (F + 0.15F) + (M - 0.18M)\n\n    from sympy import symbols, Eq, solve\n\n    F = symbols('F')\n    M = F + 450  # Male visitors on the first day\n\n    # Equation for the second day\n    second_day_visitors = 1354\n    equation = Eq(second_day_visitors, (F + 0.15 * F) + (M - 0.18 * M))\n\n    # Solve for F\n    F_solution = solve(equation, F)[0]\n\n    # Calculate total number of visitors on the first day\n    total_first_day = F_solution + M.subs(F, F_solution)\n    result = total_first_day.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "fa72055fad084ab58ad10b1fda0c68de", "difficulty": "3", "qtype": "short_answer", "problem": "On the first day of an amusement park's opening, the number of make visitors was 450 more than the number of female visitors. On the second day, the number of female visitors increased by 15\\% but the number of make visitors decreased by 18\\%. The total number of visitors for the second day was 1354. How many make visitors were there on the first day? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "950.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the number of male visitors on the first day.\n    # On the first day, the number of male visitors was 450 more than the number of female visitors.\n    # On the second day, the number of female visitors increased by 15% and the number of male visitors decreased by 18%.\n    # The total number of visitors on the second day was 1354.\n\n    # Let F be the number of female visitors on the first day.\n    # Then, male visitors M = F + 450.\n    # On the second day, female visitors increased to F + 0.15F and male visitors decreased to M - 0.18M.\n    # Total visitors on the second day: 1354 = (F + 0.15F) + (M - 0.18M)\n\n    from sympy import symbols, Eq, solve\n\n    F = symbols('F')\n    M = F + 450  # Male visitors on the first day\n\n    # Equation for the second day\n    total_second_day = 1354\n    equation = Eq(total_second_day, (F + 0.15*F) + (M - 0.18*M))\n\n    # Solve for F\n    F_solution = solve(equation, F)[0]\n\n    # Calculate the number of male visitors on the first day\n    M_first_day = M.subs(F, F_solution)\n    result = M_first_day.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code defines a function `solution()` that calculates the number of male visitors on the first day of an amusement park's opening, given the conditions described in the problem. The function uses algebraic methods to set up an equation and solve for the unknown variable. The result is then returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "d0e55b24b2d94a99a067394ed0971714", "difficulty": "3", "qtype": "short_answer", "problem": "Mr Krishnan spent $$$740$$ of his monthly salary on a DVD player and~$\\tfrac{3}{4}$~of the remaining money on a television set. If he had~$\\tfrac{1}{5}$~of his salary left, how much was his salary for the month? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "3700.00000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out Mr. Krishnan's monthly salary.\n    # He spent $740 on a DVD player and 3/4 of the remaining money on a television set.\n    # He had 1/5 of his salary left.\n\n    # Let's denote the monthly salary as S.\n    # After spending $740 on a DVD player, he had S - $740 left.\n    # Then, he spent 3/4 of the remaining money on a television set, leaving him with 1/4 of (S - $740).\n    # Finally, he had 1/5 of the monthly salary, S, left.\n\n    # We can set up an equation: 1/5 * S = 1/4 * (S - $740).\n\n    from sympy import symbols, Eq, solve\n\n    S = symbols('S')\n    # Equation based on the problem's description\n    equation = Eq(1/5 * S, 1/4 * (S - 740))\n\n    # Solve for S\n    monthly_salary = solve(equation, S)[0]\n    result = monthly_salary.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "6dff7252335c45c0a2fdec728a95565a", "difficulty": "3", "qtype": "short_answer", "problem": "A rectangular piece of white paper ~measures 1.36m by 0.8m. We need to cut it into squares of the same size and make the square area as large as possible, and there is no white paper left at the end. How many squares can we cut?（⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules"], "answer": "170", "generation": ["To solve this problem, we need to find the largest square that can be cut from the rectangular piece of paper without leaving any remainder. This means we need to find the greatest common divisor (GCD) of the two sides of the rectangle, which will give us the side length of the largest possible square. Once we have the side length of the square, we can calculate how many such squares can be cut from the rectangle.\n\nHere's how we can do it in Python:\n\n```python\nfrom math import gcd\n\ndef solution():\n    # Dimensions of the rectangular piece of paper in meters\n    length = 1.36\n    width = 0.8\n\n    # Convert meters to centimeters to work with whole numbers\n    length_cm = int(length * 100)  # 136 cm\n    width_cm = int(width * 100)    # 80 cm\n\n    # Find the greatest common divisor (GCD) of the two sides\n    side_of_square_cm = gcd(length_cm, width_cm)\n\n    # Calculate the number of squares that can be cut out\n    num_squares_length = length_cm // side_of_square_cm\n    num_squares_width = width_cm // side_of_square_cm\n    total_squares = num_squares_length * num_squares_width\n\n    result = total_squares\n    return result\n\n```\n\nThis code will return the number of squares that can be cut from the rectangular piece of paper with the largest possible area for each square."]}
{"dataset_version": "2023-07-07", "queId": "5b9cd44e2a8d46b2b9f5c8533ec96089", "difficulty": "3", "qtype": "short_answer", "problem": "In a streaming exercise, students were asked to choose between two subjects, which was Grade $$A$$ Math or Grade $$B$$ Math. $$80$$\\% of the students chose Grade $$A$$ Math, $$35$$\\% of the students chose Grade $$B$$ Math and $$10$$\\% of the students chose neither subjects. Given that a total of $$75$$ students actually chose both Grade $$A$$ and Grade $$B$$ Math, how many students were involved in the streaming exercise? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Finding the Base"], "answer": "300.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of students involved in the streaming exercise.\n    # 80% chose Grade A Math, 35% chose Grade B Math, and 10% chose neither.\n    # 75 students chose both Grade A and Grade B Math.\n\n    # Let's denote the total number of students as S.\n    # According to the principle of inclusion-exclusion:\n    # Total students = Students who chose A + Students who chose B - Students who chose both + Students who chose neither\n\n    # We have the following percentages:\n    # Students who chose A = 80% of S\n    # Students who chose B = 35% of S\n    # Students who chose neither = 10% of S\n    # Students who chose both = 75 (given)\n\n    # The equation becomes:\n    # S = 0.80S + 0.35S - 75 + 0.10S\n\n    from sympy import symbols, Eq, solve\n\n    S = symbols('S')\n    # Equation based on the problem's description\n    equation = Eq(S, 0.80 * S + 0.35 * S - 75 + 0.10 * S)\n\n    # Solve for S\n    total_students = solve(equation, S)[0]\n    result = total_students.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "1ddfd41822fc4ff5909fb0c086a9e1cc", "difficulty": "3", "qtype": "short_answer", "problem": "Miss Jenny is separating some candies for class A and class B. If each student in class A get $4$ candies, $20$ more candies are needed. If each student in class B can get $6$ candies, there will be $16$ candies left. It is known that the number of students in class A is twice of class B. How many candies does Miss Jenny havve? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Distribution Problems"], "answer": "124.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of candies Miss Jenny has.\n    # If each student in class A gets 4 candies, 20 more candies are needed.\n    # If each student in class B gets 6 candies, there will be 16 candies left.\n    # The number of students in class A is twice the number of students in class B.\n\n    # Let B be the number of students in class B.\n    # Then, the number of students in class A is 2B.\n    # Total candies needed for class A is 4 * 2B = 8B.\n    # Total candies needed for class B is 6 * B = 6B.\n    # We have two equations:\n    # 1. Total candies = 8B - 20 (20 more needed for class A)\n    # 2. Total candies = 6B + 16 (16 candies left for class B)\n\n    # Since both expressions equal the total candies, we can set them equal to each other:\n    # 8B - 20 = 6B + 16\n\n    from sympy import symbols, Eq, solve\n\n    B = symbols('B')\n    # Equation based on the problem's description\n    equation = Eq(8 * B - 20, 6 * B + 16)\n\n    # Solve for B\n    B_solution = solve(equation, B)[0]\n\n    # Calculate total number of candies\n    total_candies = 6 * B_solution + 16\n    result = total_candies.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "6d1e50acecb5443699ff1409bbab9ab1", "difficulty": "3", "qtype": "short_answer", "problem": "Woody participated in a math skills competition. There are $25$ questions in total.  For each correct answer he gained $4$ points.  For each incorrect answer he lost $2$ points.  For each question he did not attempt, he scores $0$ point.  Woody answered all but one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the number of correct answers Woody had.\n    # There are 25 questions in total.\n    # For each correct answer, Woody gains 4 points.\n    # For each incorrect answer, Woody loses 2 points.\n    # For each question not attempted, Woody scores 0 points.\n    # Woody answered all but one of the questions and got a score of 66 points.\n\n    # Let C be the number of correct answers and I be the number of incorrect answers.\n    # Since Woody answered all but one question, the total number of answered questions is 24.\n    # Therefore, C + I = 24.\n    # The total score is the number of correct answers times 4 minus the number of incorrect answers times 2.\n    # So, the score equation is 4C - 2I = 66.\n\n    # We can use the first equation to express I in terms of C: I = 24 - C.\n    # Substituting I in the score equation, we get 4C - 2(24 - C) = 66.\n\n    from sympy import symbols, Eq, solve\n\n    C = symbols('C')\n    # Equation based on the problem's description\n    equation = Eq(4 * C - 2 * (24 - C), 66)\n\n    # Solve for C\n    correct_answers = solve(equation, C)[0]\n    result = correct_answers.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "973a7aa6ad0b475ca38055bf318f176b", "difficulty": "3", "qtype": "short_answer", "problem": "Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "720.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam had 40 more stickers than Peter initially.\n    # Sam gave 20% of his stickers to Peter, and Peter gave 25% of his stickers to Sam.\n    # In the end, Sam had 96 stickers more than Peter.\n\n    # Let P be the initial number of stickers Peter had.\n    # Then, Sam had P + 40 stickers initially.\n    # After the exchange, Sam has (P + 40) - 0.20*(P + 40) + 0.25*P\n    # And Peter has P + 0.20*(P + 40) - 0.25*P\n    # The difference in the end is 96 stickers: (P + 40) - 0.20*(P + 40) + 0.25*P - (P + 0.20*(P + 40) - 0.25*P) = 96\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    # Sam's stickers after exchange\n    Sam_final = (P + 40) - 0.20*(P + 40) + 0.25*P\n    # Peter's stickers after exchange\n    Peter_final = P + 0.20*(P + 40) - 0.25*P\n    # Equation based on the difference in the end\n    equation = Eq(Sam_final - Peter_final, 96)\n\n    # Solve for P\n    P_initial = solve(equation, P)[0]\n    result = P_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "e3aa5800105743d5b2435db12b158401", "difficulty": "3", "qtype": "short_answer", "problem": "Kiera spent $$ $740$$ of her monthly salary on a new phone and $75 \\%$ of the remaining money on her rent. If she had~$\\dfrac{1}{5}$~of her salary left, how much was her salary for the month? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "3700.00000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out Kiera's monthly salary.\n    # She spent $740 on a new phone and 75% of the remaining money on rent.\n    # She had 1/5 of her salary left.\n\n    # Let's denote the monthly salary as S.\n    # After spending $740 on a phone, she had S - $740 left.\n    # Then, she spent 75% of the remaining money on rent, leaving her with 25% of (S - $740).\n    # Finally, she had 1/5 of the salary, S, left.\n\n    # We can set up an equation: 1/5 * S = 1/4 * (S - $740).\n\n    from sympy import symbols, Eq, solve\n\n    S = symbols('S')\n    # Equation based on the problem's description\n    equation = Eq(1/5 * S, 1/4 * (S - 740))\n\n    # Solve for S\n    monthly_salary = solve(equation, S)[0]\n    result = monthly_salary.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "5d63dffe5e5b4c6195a4e20ccdebb0f0", "difficulty": "3", "qtype": "short_answer", "problem": "$$Amelia$$ had $$160$$ cookies and $$Bala$$ had $$320$$ more cookies than $$Daniel$$. $$Bala$$ had~$\\tfrac{1}{2}$~as many cookies as $$Amelia$$, $$Carl$$ and $$Daniel$$. $$Carl$$ had~$\\tfrac{3}{4}$~as many cookies as $$Amelia$$, $$Bala$$ and $$Daniel$$. They had $$6230$$ cookies in total. How many cookies did $$Daniel$$ have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "", "generation": ["```python\ndef solution():\n    # The problem is to find the number of cookies Daniel had.\n    # Amelia had 160 cookies.\n    # Bala had 320 more cookies than Daniel.\n    # Bala had 1/2 as many cookies as Amelia, Carl, and Daniel combined.\n    # Carl had 3/4 as many cookies as Amelia, Bala, and Daniel combined.\n    # They had 6230 cookies in total.\n\n    # Let D be the number of cookies Daniel had.\n    # Then, Bala had D + 320 cookies.\n    # Bala had 1/2 as many cookies as Amelia, Carl, and Daniel combined: B = 1/2 * (A + C + D)\n    # Carl had 3/4 as many cookies as Amelia, Bala, and Daniel combined: C = 3/4 * (A + B + D)\n    # Total cookies: A + B + C + D = 6230\n\n    from sympy import symbols, Eq, solve\n\n    A = 160  # Amelia's cookies\n    D = symbols('D')\n    B = D + 320  # Bala's cookies\n    C = 3/4 * (A + B + D)  # Carl's cookies\n\n    # Equation for Bala's cookies based on the problem's description\n    equation_B = Eq(B, 1/2 * (A + C + D))\n\n    # Solve for D using the total cookies equation\n    total_cookies = Eq(A + B + C + D, 6230)\n    D_solution = solve((equation_B, total_cookies), D)[D]\n\n    result = D_solution.evalf()\n    return result\n\n```\nNow, let's execute the function to find out how many cookies Daniel had."]}
{"dataset_version": "2023-07-07", "queId": "210032ce53ff4939827463e6a45cdfea", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "14.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of goats in a farm.\n    # Initially, 65% of the animals were cows and the rest were goats.\n    # When 240 more animals were added, the percentage of cows increased to 85% and the number of goats doubled.\n    \n    # Let T be the total initial number of animals.\n    # Initial number of cows C = 65% of T, and initial number of goats G = 35% of T.\n    # After adding 240 animals, total becomes T + 240.\n    # The number of goats doubles, so new number of goats = 2G.\n    # New percentage of cows = 85% of (T + 240).\n\n    # Solving for T and then finding G using these relations.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    # Initial cows and goats\n    C = 0.65 * T\n    G = 0.35 * T\n\n    # Equation after addition of animals\n    new_total = T + 240\n    new_cows = 0.85 * new_total  # 85% are now cows\n    equation = Eq(new_cows, C + 240 - 2 * G)\n\n    # Solve for T\n    T_solution = solve(equation, T)[0]\n\n    # Calculate initial number of goats\n    G_initial = G.subs(T, T_solution)\n    result = G_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "e705de293fcb400b9a1dfb656dfa1166", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ had some cookies. If $$A$$ packed $$8$$ cookies into each box, she would not have any cookies left. If $$A$$ packed $$9$$ cookies into each box, she would have $$1$$ cookie left. What was the least number of cookies that $$A$$ had? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "73", "generation": ["```python\ndef solution():\n    # The problem is to find the least number of cookies A had.\n    # If A packed 8 cookies into each box, there would be no cookies left.\n    # If A packed 9 cookies into each box, there would be 1 cookie left.\n    \n    # The least number of cookies that satisfies both conditions is the least common multiple (LCM) of 8 and 9, plus 1.\n    # Since 8 and 9 are coprime (no common factors other than 1), their LCM is simply their product.\n    # Therefore, the least number of cookies is 8 * 9 + 1.\n\n    cookies = 8 * 9 + 1\n    result = cookies\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "0c251d28e5f34b3790b5b39adc9a140b", "difficulty": "3", "qtype": "short_answer", "problem": "David spent $$$75$$ of his money on a number of CDs. He spent~$\\tfrac{1}{4}$~of the remaining money on a number of batteries. Given that he was left with~$\\tfrac{1}{3}$~of the original sum of money, how much money did David have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "135.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much money David had originally.\n    # He spent $75 on CDs and 1/4 of the remaining money on batteries. He was left with 1/3 of the original sum.\n\n    # Let's denote the original sum of money as X.\n    # After spending $75 on CDs, he had X - $75 left.\n    # Then, he spent 1/4 of the remaining money on batteries, leaving him with 3/4 of (X - $75).\n    # Finally, he had 1/3 of the original sum, X, left.\n\n    # We can set up an equation: 1/3 * X = 3/4 * (X - $75).\n\n    from sympy import symbols, Eq, solve\n\n    X = symbols('X')\n    # Equation based on the problem's description\n    equation = Eq(1/3 * X, 3/4 * (X - 75))\n\n    # Solve for X\n    original_sum = solve(equation, X)[0]\n    result = original_sum.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "e5c1b794ac8648ec850e93b55dab48de", "difficulty": "3", "qtype": "short_answer", "problem": "Rasidah had $$$48$$ less than Chai Seng. Rasidah spent~$\\tfrac{3}{5}$~of her money and Chai Seng spent~$\\tfrac{6}{7}$~of his money. In the end, Chai Seng had~$\\tfrac{1}{2}$~as much money left as Rasidah. Find the amount of money Rasidah had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "120.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial amount of money Rasidah had.\n    # Rasidah had $48 less than Chai Seng.\n    # Rasidah spent 3/5 of her money and Chai Seng spent 6/7 of his money.\n    # In the end, Chai Seng had 1/2 as much money left as Rasidah.\n\n    # Let R be the amount of money Rasidah had initially.\n    # Chai Seng had R + $48 initially.\n    # Rasidah has 2/5 of her money left after spending.\n    # Chai Seng has 1/7 of his money left after spending.\n    # Chai Seng's remaining money is 1/2 of Rasidah's remaining money.\n\n    # We can set up an equation: 1/7 * (R + $48) = 1/2 * (2/5 * R).\n\n    from sympy import symbols, Eq, solve\n\n    R = symbols('R')\n    # Equation based on the problem's description\n    equation = Eq(1/7 * (R + 48), 1/2 * (2/5 * R))\n\n    # Solve for R\n    rasidah_initial = solve(equation, R)[0]\n    result = rasidah_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "de23539233a540d8a78444b87207ab4f", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ had $$9$$ big boxes of cookies. Each big box had $$660$$ cookies. $$A$$ packed the cookies into small boxes. Each small box could contain $$600$$ cookies. How many small boxes were needed? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "10", "generation": ["```python\ndef solution():\n    # The problem is to find out how many small boxes are needed to pack all the cookies.\n    # A had 9 big boxes of cookies, each containing 660 cookies.\n    # Each small box can contain 600 cookies.\n\n    # Let's calculate the total number of cookies and then divide by the number of cookies each small box can contain.\n\n    # Total number of cookies\n    total_cookies = 9 * 660\n    # Number of cookies each small box can contain\n    cookies_per_small_box = 600\n\n    # Calculate the number of small boxes needed\n    # Since we cannot have a fraction of a box, we need to round up to the next whole number.\n    from math import ceil\n\n    small_boxes_needed = ceil(total_cookies / cookies_per_small_box)\n    result = small_boxes_needed\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "1b7cc025e9e347ce80741fb93834ea0c", "difficulty": "3", "qtype": "short_answer", "problem": "There is a planet in the universe that uses Base 3 notation. When Mr. Lv moved to this planet and changed his ID card, he had to change his age from Base 10 to Base 3 notation. Mr. Lv found that, as long as the original Base 10 age added a \"0 \" at the end, is the age in Base 3. How old is Mr. Lv? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules"], "answer": "None", "generation": ["To solve this problem, we need to find a number in base 10 that, when a \"0\" is appended to it in base 3, represents the same number. This means that the base 10 number is equal to its base 3 representation times 3 (since appending a \"0\" in base 3 is equivalent to multiplying by the base, which is 3).\n\nLet's denote Mr. Lv's age in base 10 as `x`. Then, the base 3 representation of `x` with a \"0\" appended at the end would be `x * 3`. We need to find an `x` such that its base 3 representation is equal to `x` itself.\n\nWe can solve this by converting a base 10 number to base 3 and checking if the condition holds true. We'll iterate over a reasonable range of ages and check each one.\n\n```python\ndef solution():\n    # Function to convert base 10 number to base 3\n    def to_base_3(n):\n        if n == 0:\n            return '0'\n        digits = ''\n        while n:\n            digits = str(n % 3) + digits\n            n //= 3\n        return digits\n\n    # Iterate over a range of possible ages\n    for age in range(1, 100):  # Assuming Mr. Lv's age is less than 100\n        base_3_age = to_base_3(age)\n        if int(base_3_age + '0', 3) == age:\n            result = age\n            return result\n\n# Call the solution function and print the result\nprint(solution())\n```\n\nThis code will iterate through ages 1 to 99 and find the age that satisfies the condition given in the problem. The `to_base_3` function converts a base 10 number to base 3, and the `if` condition checks if appending a \"0\" to the base 3 representation gives the original number when converted back to base 10."]}
{"dataset_version": "2023-07-07", "queId": "5da1575e00d448078124140f108f6b1b", "difficulty": "3", "qtype": "short_answer", "problem": "Segments $\\overline{AB}$, $\\overline{AC}$ and $\\overline{AD}$ are edges of a cube and $\\overline{AG}$ is a diagonal through the center of the cube. Point $P$ satisfies $PB=60\\sqrt{10}$, $PC=60\\sqrt{5}$, $PD=120\\sqrt{2}$ and $PG=36\\sqrt{7}$. What is $PA$? (2021 AIME I Problem 6) ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "211.962260791868", "generation": ["```python\ndef solution():\n    # The problem is to find the length of PA given the lengths of PB, PC, PD, and PG.\n    # Since AB, AC, and AD are edges of a cube and AG is a diagonal through the center,\n    # we can use the Pythagorean theorem in 3D to find the edge length of the cube.\n    # Let x be the edge length of the cube. Then AG, the space diagonal, is x * sqrt(3).\n    # We are given that PG = 36 * sqrt(7), so we can find x using the equation:\n    # AG^2 = PG^2 + PA^2, where AG = x * sqrt(3) and PG = 36 * sqrt(7).\n\n    from sympy import symbols, Eq, solve, sqrt\n\n    x = symbols('x', real=True, positive=True)\n    PA = symbols('PA', real=True, positive=True)\n\n    # Given lengths\n    PB = 60 * sqrt(10)\n    PC = 60 * sqrt(5)\n    PD = 120 * sqrt(2)\n    PG = 36 * sqrt(7)\n\n    # Using the Pythagorean theorem in 3D for the cube's diagonal AG\n    # AG = x * sqrt(3)\n    # PG^2 + PA^2 = AG^2\n    equation = Eq(PG**2 + PA**2, (x * sqrt(3))**2)\n\n    # We also know that PB, PC, and PD are diagonals on the faces of the cube, so:\n    # PB^2 = 2*x^2, PC^2 = 2*x^2, PD^2 = 2*x^2\n    # We can use these to find x\n    equations = [\n        Eq(PB**2, 2*x**2),\n        Eq(PC**2, 2*x**2),\n        Eq(PD**2, 2*x**2)\n    ]\n\n    # Solve for x using one of the equations (since they should all yield the same x)\n    x_solution = solve(equations[0], x)[0]\n\n    # Now solve for PA using the value of x and the equation for AG\n    PA_solution = solve(equation.subs(x, x_solution), PA)[0]\n\n    result = PA_solution.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code defines a function `solution()` that calculates the length of PA using the given lengths of PB, PC, PD, and PG, and the properties of a cube. It uses the Pythagorean theorem in 3D to find the edge length of the cube and then solves for PA. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "e55659b67fec48ffadc5d661886b3f84", "difficulty": "3", "qtype": "short_answer", "problem": "A group of $$200$$ students were interviewed to find out whether they enjoyed swimming, jogging, swimming and jogging, or neither of the two sports. $$82$$\\% of the students indicated that they liked swimming, $$54$$\\% of them indicated that they liked jogging and $$16$$\\% indicated that they did not like either of the two sports. How many students enjoyed both swimming and jogging? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Finding the Base"], "answer": "104.0", "generation": ["```python\ndef solution():\n    # The problem is to find the number of students who enjoyed both swimming and jogging.\n    # Total number of students = 200\n    # 82% liked swimming, 54% liked jogging, and 16% liked neither.\n    \n    # Let S be the number of students who liked swimming,\n    # J be the number of students who liked jogging,\n    # B be the number of students who liked both,\n    # N be the number of students who liked neither.\n\n    # We have the following information:\n    # S = 82% of total students\n    # J = 54% of total students\n    # N = 16% of total students\n    # S + J - B = Total students - N (since those who like both are counted twice in S and J)\n\n    total_students = 200\n    S = 0.82 * total_students\n    J = 0.54 * total_students\n    N = 0.16 * total_students\n\n    # Calculate the number of students who liked both swimming and jogging\n    B = S + J - (total_students - N)\n    result = B\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "f8f2a1e9445b4dcda537fd994f74f84b", "difficulty": "3", "qtype": "short_answer", "problem": "Jeremy had a total of $$116$$ notes that were either $$$5$$ or $$$10$$ notes. After he spent $$60$$\\% of the $$$10$$ notes and $$25$$\\% of the $$$5$$ notes on a bag, he was left with~$\\tfrac{4}{7}$~as many $$$10$$ notes as $$$5$$ notes. How much did the bag cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "430.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the cost of the bag that Jeremy bought.\n    # Jeremy had a total of 116 notes consisting of $5 and $10 notes.\n    # After spending 60% of the $10 notes and 25% of the $5 notes, he was left with 4/7 as many $10 notes as $5 notes.\n\n    # Let's denote the number of $10 notes as T and the number of $5 notes as F.\n    # The total number of notes is T + F = 116.\n    # After spending, he has 40% of T and 75% of F left.\n    # The remaining $10 notes are 4/7 of the remaining $5 notes: 0.4T = 4/7 * 0.75F.\n\n    # We can set up two equations based on the problem's description:\n    # 1) T + F = 116\n    # 2) 0.4T = 4/7 * 0.75F\n\n    from sympy import symbols, Eq, solve\n\n    T, F = symbols('T F')\n    # Equation 1: Total number of notes\n    equation1 = Eq(T + F, 116)\n    # Equation 2: Remaining $10 notes are 4/7 of the remaining $5 notes\n    equation2 = Eq(0.4 * T, 4/7 * 0.75 * F)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (T, F))\n\n    # Calculate the number of $10 and $5 notes spent\n    T_spent = 0.6 * solutions[T]\n    F_spent = 0.25 * solutions[F]\n\n    # Calculate the cost of the bag\n    cost = T_spent * 10 + F_spent * 5\n    result = cost.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the cost of the bag Jeremy bought by setting up a system of equations based on the given information and solving for the number of $10 and $5 notes. The cost is then calculated by multiplying the number of notes spent by their respective values."]}
{"dataset_version": "2023-07-07", "queId": "f11cc314015c4356be0ae68d5c3ced7c", "difficulty": "3", "qtype": "short_answer", "problem": "The ratio of Don\\textquotesingle s stickers to Ben\\textquotesingle s stickers was $2 : 3$. After Don\\textquotesingle s bought another $10$ stickers and Ben lost $5$ stickers, the ratio became $6 : 7$. Find the number of stickers Don had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Ratios and Proportions"], "answer": "50.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Don had.\n    # Initially, the ratio of Don's stickers to Ben's stickers was 2:3.\n    # After Don bought 10 more stickers and Ben lost 5 stickers, the ratio became 6:7.\n\n    # Let D be the initial number of Don's stickers and B be the initial number of Ben's stickers.\n    # According to the initial ratio, D/B = 2/3.\n    # After the changes, (D + 10)/(B - 5) = 6/7.\n\n    from sympy import symbols, Eq, solve\n\n    D, B = symbols('D B')\n    # Initial ratio equation\n    initial_ratio = Eq(D/B, 2/3)\n    # Final ratio equation after buying and losing stickers\n    final_ratio = Eq((D + 10)/(B - 5), 6/7)\n\n    # Solve the system of equations\n    solutions = solve((initial_ratio, final_ratio), (D, B))\n\n    # Extract the solution for D\n    D_initial = solutions[D]\n    result = D_initial.evalf()\n    return result\n\n```\nThis code defines a function `solution` that sets up and solves the system of equations representing the initial and final ratios of Don's and Ben's stickers. It returns the initial number of stickers Don had."]}
{"dataset_version": "2023-07-07", "queId": "1a6a4bcf3e384d149434758e9e9ee954", "difficulty": "3", "qtype": "short_answer", "problem": "Sam and Peter had some stickers in the ratio 7 : 5. Sam and Peter each gave 20\\% of their stivkers to John. As a result, John's stickers increased by 80\\%. If Sam had 20 stickers more than John in the end, how many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "500.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam and Peter had stickers in the ratio 7:5 and both gave 20% of their stickers to John.\n    # John's stickers increased by 80%.\n    # In the end, Sam had 20 stickers more than John.\n\n    # Let's denote the initial number of stickers Sam and Peter had as S and P respectively.\n    # S/P = 7/5 => S = (7/5)P\n    # Let J be the initial number of stickers John had.\n    # After giving away stickers, Sam has S - 0.2S = 0.8S and Peter has P - 0.2P = 0.8P.\n    # John has J + 0.2S + 0.2P after receiving stickers.\n    # John's stickers increased by 80%, so J + 0.2S + 0.2P = 1.8J.\n    # Sam has 20 more stickers than John in the end, so 0.8S = 1.8J + 20.\n\n    # We have two equations:\n    # 1) 0.2S + 0.2P = 0.8J\n    # 2) 0.8S = 1.8J + 20\n\n    # We can solve these equations to find P, the initial number of stickers Peter had.\n\n    from sympy import symbols, Eq, solve\n\n    P, J = symbols('P J')\n    S = (7/5) * P  # Relation between Sam's and Peter's stickers\n\n    # Equation 1 after giving away stickers\n    equation1 = Eq(0.2 * S + 0.2 * P, 0.8 * J)\n\n    # Equation 2 after Sam has 20 more stickers than John\n    equation2 = Eq(0.8 * S, 1.8 * J + 20)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (P, J))\n\n    # Extract the solution for P\n    P_initial = solutions[P]\n    result = P_initial.evalf()\n    return result\n\n```\nThis code defines a function `solution()` that calculates the initial number of stickers Peter had based on the given problem. It uses algebraic methods to set up equations representing the relationships between the number of stickers Sam, Peter, and John have before and after the exchange. It then solves these equations using the `sympy` library to find the value of `P`, which is the initial number of stickers Peter had. The result is returned as a floating-point number."]}
{"dataset_version": "2023-07-07", "queId": "7463bf137d564fbabe4d8eb8c8c7ee34", "difficulty": "3", "qtype": "short_answer", "problem": "David had a total of $$72$$ notes. The notes were either $$$2$$ notes or $$$10$$ notes. After he spent $$90$$\\% of the $$$10$$ notes and $$75$$\\% of the $$$2$$ notes on a gift, he was left with twice as many $$$10$$ notes as $$$2$$ notes. How much did the gift cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "558.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much the gift cost that David bought.\n    # David had a total of 72 notes, consisting of $2 and $10 notes.\n    # After spending 90% of the $10 notes and 75% of the $2 notes, he had twice as many $10 notes as $2 notes.\n\n    # Let's denote the number of $10 notes as T and the number of $2 notes as F.\n    # The total number of notes is T + F = 72.\n    # After spending, he has 0.1T $10 notes and 0.25F $2 notes left.\n    # He is left with twice as many $10 notes as $2 notes, so 0.1T = 2 * 0.25F.\n\n    # We can set up two equations based on the problem's description:\n    # T + F = 72\n    # 0.1T = 2 * 0.25F\n\n    from sympy import symbols, Eq, solve\n\n    T, F = symbols('T F')\n    # Equations based on the problem's description\n    total_notes_eq = Eq(T + F, 72)\n    spent_notes_eq = Eq(0.1 * T, 2 * 0.25 * F)\n\n    # Solve the system of equations\n    solutions = solve((total_notes_eq, spent_notes_eq), (T, F))\n\n    # Calculate the number of $10 and $2 notes\n    T_solution = solutions[T]\n    F_solution = solutions[F]\n\n    # Calculate the amount spent on the gift\n    spent_10_notes = 0.9 * T_solution * 10  # 90% of $10 notes\n    spent_2_notes = 0.75 * F_solution * 2   # 75% of $2 notes\n    gift_cost = spent_10_notes + spent_2_notes\n    result = gift_cost.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "4f9c4a2d52664632815cca87ff3639cd", "difficulty": "3", "qtype": "short_answer", "problem": "There are $1007$ parterres in a straight line. A sprinkler must be installed in the middle of each two parterres. What is the minimum number of sprinklers needed to be installed at least? (ignoring the size of~parterres) ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "1006", "generation": ["```python\ndef solution():\n    # The problem is to find the minimum number of sprinklers needed to be installed between 1007 parterres in a straight line.\n    # A sprinkler is installed in the middle of each two parterres.\n    # Since there are 1007 parterres, there will be 1006 spaces between them where sprinklers can be installed.\n\n    # The number of sprinklers needed is one less than the number of parterres because the first and last parterre do not need a sprinkler on both sides.\n\n    number_of_parterres = 1007\n    # Calculate the number of sprinklers needed\n    number_of_sprinklers = number_of_parterres - 1\n    result = number_of_sprinklers\n    return result\n\n```"]}
{"dataset_version": "2023-07-07", "queId": "7b38d775bba24657ba681d25822af411", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Double Base}  Marry had~$\\dfrac{7}{5}$~as many stickers as Alexis.~Marry and Alexis each gave 20\\% of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by 80\\%. If Mary had 20 stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "500.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Alexis had.\n    # Marry had 7/5 times the stickers Alexis had.\n    # Both Marry and Alexis gave 20% of their stickers to Charlotte, resulting in an 80% increase in Charlotte's stickers.\n    # In the end, Mary had 20 stickers more than Charlotte.\n\n    # Let A be the number of stickers Alexis had initially.\n    # Then, Marry had 7/5 * A stickers initially.\n    # After giving away 20%, Marry has 80% left, so she has 0.8 * 7/5 * A stickers.\n    # Alexis has 80% of her initial stickers left, so she has 0.8 * A stickers.\n    # Let C be the initial number of stickers Charlotte had.\n    # Charlotte's stickers increased by 80%, so she has C + 0.8 * C = 1.8 * C stickers in the end.\n    # Marry has 20 stickers more than Charlotte in the end, so 0.8 * 7/5 * A = 1.8 * C + 20.\n\n    # We need to find the value of A that satisfies the equation above.\n\n    from sympy import symbols, Eq, solve\n\n    A, C = symbols('A C')\n    # Equation based on the problem's description\n    equation = Eq(0.8 * 7/5 * A, 1.8 * C + 20)\n\n    # We also know that Charlotte received 20% of Marry's and Alexis's stickers, which equals the 80% increase.\n    # So, 0.2 * 7/5 * A + 0.2 * A = 0.8 * C\n    equation_charlotte = Eq(0.2 * 7/5 * A + 0.2 * A, 0.8 * C)\n\n    # Solve the system of equations for A and C\n    solutions = solve((equation, equation_charlotte), (A, C))\n\n    # Extract the solution for A\n    A_solution = solutions[A]\n    result = A_solution.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "f1a2fc61d2954912aabcdce67bec8fd1", "difficulty": "3", "qtype": "short_answer", "problem": "$$Sam$$ and $$Tim$$ had $$1170$$ cookies. After $$Sam$$ ate~$\\tfrac{1}{4}$~of her cookie and $$Tim$$ bought~$\\tfrac{1}{5}$~more cookies, $$Sam$$ had $$663$$ fewer cookies than $$Tim$$. How many cookies did $$Sam$$ eat? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "95.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how many cookies Sam ate.\n    # Sam and Tim had 1170 cookies in total.\n    # After Sam ate 1/4 of her cookies and Tim bought 1/5 more cookies, Sam had 663 fewer cookies than Tim.\n\n    # Let's denote the number of cookies Sam had originally as S, and Tim as T.\n    # We know that S + T = 1170.\n    # After Sam ate 1/4 of her cookies, she had 3/4S left.\n    # Tim bought 1/5 more cookies, so he had T + 1/5T = 6/5T.\n    # After these transactions, Sam had 663 fewer cookies than Tim: 3/4S = 6/5T - 663.\n\n    # We can set up a system of equations based on the problem's description:\n    # S + T = 1170\n    # 3/4S = 6/5T - 663\n\n    from sympy import symbols, Eq, solve\n\n    S, T = symbols('S T')\n    # Equation based on the total number of cookies\n    equation1 = Eq(S + T, 1170)\n    # Equation based on the number of cookies after eating and buying\n    equation2 = Eq(3/4 * S, 6/5 * T - 663)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (S, T))\n\n    # Calculate how many cookies Sam ate\n    cookies_eaten_by_sam = solutions[S] / 4\n    result = cookies_eaten_by_sam.evalf()\n    return result\n\n```\nThis function will return the number of cookies Sam ate."]}
{"dataset_version": "2023-07-07", "queId": "f2d1624bd6914f419871977e97929aae", "difficulty": "3", "qtype": "short_answer", "problem": "$\\tfrac{3}{4}$~of Chelsia\\textquotesingle s money is the same as~$\\tfrac{5}{6}$~of Brian\\textquotesingle s money. If Chelsia has $$$24$$ more than Brian, how much money do Chelsia and Brian have altogether? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "456.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total amount of money Chelsia and Brian have together.\n    # 3/4 of Chelsia's money is the same as 5/6 of Brian's money.\n    # Chelsia has $24 more than Brian.\n\n    # Let's denote Chelsia's money as C and Brian's money as B.\n    # According to the problem, we have the following equations:\n    # (3/4) * C = (5/6) * B\n    # C = B + 24\n\n    # We need to solve these equations to find the values of C and B.\n\n    from sympy import symbols, Eq, solve\n\n    C, B = symbols('C B')\n    # Equation based on the problem's description\n    equation1 = Eq(3/4 * C, 5/6 * B)\n    equation2 = Eq(C, B + 24)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (C, B))\n\n    # Calculate the total amount of money\n    total_money = solutions[C] + solutions[B]\n    result = total_money.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "c6d0a3426bdd48c09f8e5ed6be864293", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "720.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam had 40 more stickers than Peter initially.\n    # Sam gave 20% of his stickers to Peter, and Peter gave 25% of his stickers to Sam.\n    # In the end, Sam had 96 stickers more than Peter.\n\n    # Let P be the initial number of stickers Peter had.\n    # Then, Sam had P + 40 stickers initially.\n    # After the exchange, Sam has (P + 40) - 0.20*(P + 40) + 0.25*P stickers.\n    # Peter has P + 0.20*(P + 40) - 0.25*P stickers.\n    # The difference in the end is 96 stickers: (P + 40) - 0.20*(P + 40) + 0.25*P - (P + 0.20*(P + 40) - 0.25*P) = 96.\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    # Sam's stickers after exchange\n    Sam_final = (P + 40) - 0.20*(P + 40) + 0.25*P\n    # Peter's stickers after exchange\n    Peter_final = P + 0.20*(P + 40) - 0.25*P\n    # Equation based on the difference in the end\n    equation = Eq(Sam_final - Peter_final, 96)\n\n    # Solve for P\n    P_initial = solve(equation, P)[0]\n    result = P_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "39ff6ce753bc44909a9a09937c88d468", "difficulty": "3", "qtype": "short_answer", "problem": "Marry and Alexis had some stickers in the ratio 7 : 5. Marry and Alexis each gave 20\\% of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by 80\\%. If Mary had 20 stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "38.4615384615385", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Alexis had.\n    # Marry and Alexis had stickers in the ratio 7:5.\n    # They both gave 20% of their stickers to Charlotte, resulting in an 80% increase in Charlotte's stickers.\n    # In the end, Mary had 20 stickers more than Charlotte.\n\n    # Let M be the initial number of stickers Marry had, and A be the initial number of stickers Alexis had.\n    # Let C be the initial number of stickers Charlotte had.\n    # After giving away stickers, Marry has M - 0.2M, Alexis has A - 0.2A, and Charlotte has C + 0.2M + 0.2A.\n    # The increase in Charlotte's stickers is 80%, so 0.2M + 0.2A = 0.8C.\n    # Marry's final number of stickers is M - 0.2M = 0.8M, and she has 20 more than Charlotte's final amount.\n\n    # We have the following equations:\n    # 1) M/A = 7/5\n    # 2) 0.2M + 0.2A = 0.8C\n    # 3) 0.8M = C + 20\n\n    # We can solve these equations to find the values of M, A, and C.\n\n    from sympy import symbols, Eq, solve\n\n    M, A, C = symbols('M A C')\n    # Equation based on the ratio of stickers\n    ratio_eq = Eq(M/A, 7/5)\n    # Equation based on the increase in Charlotte's stickers\n    increase_eq = Eq(0.2*M + 0.2*A, 0.8*C)\n    # Equation based on Marry's final number of stickers\n    final_eq = Eq(0.8*M, C + 20)\n\n    # Solve the system of equations\n    solutions = solve((ratio_eq, increase_eq, final_eq), (M, A, C))\n\n    # Extract the solution for Alexis's initial number of stickers\n    A_initial = solutions[A]\n    result = A_initial.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "a543d8cd5bcf46c784fc4a1226cbbd55", "difficulty": "3", "qtype": "short_answer", "problem": "At an art exhibition, $$37 \\%$$ of the visitors were men and the rest were women and children in the ratio of $$4 : 5$$. If there are $$12$$ more men than children, how many women were at the art exhibition? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "168.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the number of women at the art exhibition.\n    # 37% of the visitors were men, and the rest were women and children in the ratio of 4:5.\n    # There are 12 more men than children.\n\n    # Let's denote the total number of visitors as V.\n    # Then, the number of men M = 37% of V.\n    # The number of women and children together is W + C = 63% of V.\n    # The ratio of women to children is 4:5, so we can say 4x = number of women and 5x = number of children.\n    # We also know that M = C + 12.\n\n    # We can set up the equations:\n    # M = 0.37V\n    # W + C = 0.63V\n    # W = 4x\n    # C = 5x\n    # M = C + 12\n\n    from sympy import symbols, Eq, solve\n\n    V, x = symbols('V x')\n    M = 0.37 * V\n    W = 4 * x\n    C = 5 * x\n\n    # Equation based on the problem's description\n    equation1 = Eq(M, C + 12)\n    equation2 = Eq(W + C, 0.63 * V)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (V, x))\n\n    # Calculate the number of women using the value of x\n    W_value = W.subs(x, solutions[x])\n    result = W_value.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the number of women at the art exhibition based on the given conditions and returns the result."]}
{"dataset_version": "2023-07-07", "queId": "ffe4e2fccc06432695daf3045845a872", "difficulty": "3", "qtype": "short_answer", "problem": "Samuel spent~$\\tfrac{1}{6}$~of his money and an additional $$$5$$ on a DVD. He then spent~$\\tfrac{2}{5}$~of his remaining money and an additional $$$12$$ on a number of magazines. If he had $$$24$$ left, how much money did he have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "78.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much money Samuel had originally.\n    # He spent 1/6 of his money and an additional $5 on a DVD.\n    # Then, he spent 2/5 of his remaining money and an additional $12 on magazines.\n    # He had $24 left in the end.\n\n    # Let's denote the original sum of money as M.\n    # After spending 1/6 of his money and $5 on a DVD, he had M - 1/6*M - $5 left.\n    # Then, he spent 2/5 of the remaining money and $12 on magazines.\n    # He had $24 left in the end.\n\n    # We can set up an equation based on the remaining money:\n    # 24 = (M - 1/6*M - 5) - 2/5*(M - 1/6*M - 5) - 12\n\n    from sympy import symbols, Eq, solve\n\n    M = symbols('M')\n    # Equation based on the problem's description\n    remaining_after_DVD = M - 1/6*M - 5\n    remaining_after_magazines = remaining_after_DVD - 2/5*remaining_after_DVD - 12\n    equation = Eq(remaining_after_magazines, 24)\n\n    # Solve for M\n    original_money = solve(equation, M)[0]\n    result = original_money.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "2f184eae91df42e18de5b645882a1cc1", "difficulty": "3", "qtype": "short_answer", "problem": "$\\tfrac{1}{6}$~of $$Tim\\textquotesingle s$$ cookies were equal to~$\\tfrac{3}{8}$~of $$Tyler\\textquotesingle s$$ cookies. After $$Tyler$$ sold $$96$$ cookies, $$Tim$$ had $$9$$ times as many cookies as $$Tyler$$. How many cookies were there at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "416.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of cookies Tim and Tyler had.\n    # 1/6 of Tim's cookies were equal to 3/8 of Tyler's cookies.\n    # After Tyler sold 96 cookies, Tim had 9 times as many cookies as Tyler.\n\n    # Let T be the number of Tim's cookies and Y be the number of Tyler's cookies.\n    # According to the problem, 1/6 * T = 3/8 * Y.\n    # After selling, Tim has 9 times the cookies Tyler has left: T = 9 * (Y - 96).\n\n    from sympy import symbols, Eq, solve\n\n    T, Y = symbols('T Y')\n    # Equation based on the problem's description\n    equation1 = Eq(1/6 * T, 3/8 * Y)\n    equation2 = Eq(T, 9 * (Y - 96))\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (T, Y))\n    T_initial = solutions[T]\n    Y_initial = solutions[Y]\n\n    # Calculate the total number of cookies at first\n    total_cookies_initial = T_initial + Y_initial\n    result = total_cookies_initial.evalf()\n    return result\n\n```\nThis code defines a function `solution` that sets up and solves a system of equations based on the given problem. It returns the total initial number of cookies Tim and Tyler had."]}
{"dataset_version": "2023-07-07", "queId": "f4a9a527d7144792b53639888c6da554", "difficulty": "3", "qtype": "short_answer", "problem": "Sally had some cupcakes. She had $72$ more chocolate cupcakes than vanilla cupcakes. She had $36$ lesser blueberry cupcakes than vanilla cupcakes. After selling $\\dfrac{1}{6}$~of the chocolate cupcakes, $\\dfrac{2}{3}$~of the vanilla cupcakes and $\\dfrac{7}{9}$~of the blueberry cupcakes, Sally is left with $427$ cupcakes altogether. How many chocolate cupcakes did Sally sell? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "57.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find how many chocolate cupcakes Sally sold.\n    # She had 72 more chocolate cupcakes than vanilla and 36 less blueberry cupcakes than vanilla.\n    # After selling fractions of each type, she is left with 427 cupcakes altogether.\n\n    # Let V be the number of vanilla cupcakes.\n    # Then, chocolate cupcakes C = V + 72 and blueberry cupcakes B = V - 36.\n    # Sally sold 1/6 of C, 2/3 of V, and 7/9 of B.\n    # Total cupcakes after selling: 427 = C - 1/6C + V - 2/3V + B - 7/9B\n\n    from sympy import symbols, Eq, solve\n\n    V = symbols('V')\n    C = V + 72  # Chocolate cupcakes\n    B = V - 36  # Blueberry cupcakes\n\n    # Equation after selling\n    cupcakes_left = 427\n    equation = Eq(cupcakes_left, C - C/6 + V - 2*V/3 + B - 7*B/9)\n\n    # Solve for V\n    V_solution = solve(equation, V)[0]\n\n    # Calculate initial number of chocolate cupcakes\n    C_initial = C.subs(V, V_solution)\n    # Calculate how many chocolate cupcakes were sold\n    chocolate_sold = C_initial / 6\n    result = chocolate_sold.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code defines a function `solution()` that calculates the number of chocolate cupcakes Sally sold. It uses algebraic methods to set up an equation based on the given information and then solves for the number of vanilla cupcakes. From there, it calculates the initial number of chocolate cupcakes and determines how many were sold. The result is returned at the end of the function."]}
{"dataset_version": "2023-07-07", "queId": "620fcfd4b5dc4851a21f52802f067616", "difficulty": "3", "qtype": "short_answer", "problem": "A box contains some red marbles and white marbles.  The ratio of red to white marbles in this box is $3:2$.  Pip puts some red balls into the box, and the ratio of red to white balls becomes $5:3$.  Then Bud puts some white balls into the box, and the ratio of red to white balls becomes $5:4$.  Given that the number of balls put by Bud is $100$ more than the number of balls put by Pip.  How many white balls are there in the box at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Ratios and Proportions"], "answer": "600.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of white marbles in a box.\n    # Initially, the ratio of red to white marbles is 3:2.\n    # After Pip adds some red marbles, the ratio becomes 5:3.\n    # Then Bud adds some white marbles, and the ratio becomes 5:4.\n    # Bud adds 100 more marbles than Pip.\n\n    # Let R be the initial number of red marbles and W be the initial number of white marbles.\n    # Let P be the number of red marbles added by Pip and B be the number of white marbles added by Bud.\n    # We have two ratios to work with: 3/2 = R/W and 5/3 = (R+P)/(W) and 5/4 = (R+P)/(W+B).\n    # We also know that B = P + 100.\n\n    from sympy import symbols, Eq, solve\n\n    R, W, P, B = symbols('R W P B')\n\n    # Initial ratio of red to white marbles\n    initial_ratio = Eq(R/W, 3/2)\n\n    # Ratio after Pip adds red marbles\n    pip_ratio = Eq((R + P)/W, 5/3)\n\n    # Ratio after Bud adds white marbles\n    bud_ratio = Eq((R + P)/(W + B), 5/4)\n\n    # Bud adds 100 more marbles than Pip\n    bud_pip_marbles = Eq(B, P + 100)\n\n    # Solve the system of equations\n    solutions = solve((initial_ratio, pip_ratio, bud_ratio, bud_pip_marbles), (R, W, P, B))\n\n    # Extract the solution for the initial number of white marbles\n    W_initial = solutions[W]\n    result = W_initial.evalf()\n    return result\n\n```\nThis code defines a function `solution()` that sets up and solves a system of equations based on the given problem. It returns the initial number of white marbles in the box."]}
{"dataset_version": "2023-07-07", "queId": "cc66cd3f11294d1984b5cf049794398d", "difficulty": "3", "qtype": "short_answer", "problem": "Somi gave $80 \\%$ of her chocolates to her students and $\\frac{2}{5}$ of the remaining chocolates to her children. If she had $$108$$ chocolates left, how many chocolates did she have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "900.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of chocolates Somi had.\n    # She gave away 80% of her chocolates to her students and then 2/5 of the remaining chocolates to her children.\n    # She is left with 108 chocolates.\n\n    # Let's denote the original number of chocolates as C.\n    # After giving away 80%, she had 20% of C left.\n    # Then, she gave away 2/5 of the remaining chocolates, leaving her with 3/5 of 20% of C.\n    # This remaining amount is equal to 108 chocolates.\n\n    # We can set up an equation: 3/5 * 20% * C = 108.\n\n    from sympy import symbols, Eq, solve\n\n    C = symbols('C')\n    # Equation based on the problem's description\n    equation = Eq(3/5 * (20/100) * C, 108)\n\n    # Solve for C\n    initial_chocolates = solve(equation, C)[0]\n    result = initial_chocolates.evalf()\n    return result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "58827db30bfe41e3aa8887dbbf840403", "difficulty": "3", "qtype": "short_answer", "problem": "Clarice is reading a magazine. The number of pages she has read to the number of pages she has not read is $$1 : 5$$. If she reads another $$80$$ pages, the number of pages she has read would become $$70 \\%$$ of the total number of pages. How many pages are there in the magazine?~\\uline{~~~~~~~~~~}~ ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "150.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of pages in the magazine.\n    # Initially, the ratio of pages read to pages not read is 1:5.\n    # After reading another 80 pages, the pages read become 70% of the total number of pages.\n\n    # Let R be the number of pages read initially and T be the total number of pages.\n    # According to the initial ratio, R = 1/6 * T (since R to T-R is 1:5, R is 1 part out of 6 total parts).\n    # After reading 80 more pages, the pages read become 70% of the total, so R + 80 = 0.7 * T.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    R = T / 6  # Initial pages read\n\n    # Equation after reading 80 more pages\n    equation = Eq(R + 80, 0.7 * T)\n\n    # Solve for T\n    total_pages = solve(equation, T)[0]\n    result = total_pages.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code defines a function `solution()` that calculates the total number of pages in the magazine based on the given conditions and returns the result. The function uses the `sympy` library to define a symbolic variable `T` for the total number of pages, sets up an equation based on the problem statement, solves for `T`, and then evaluates and returns the numerical result."]}
{"dataset_version": "2023-07-07", "queId": "bab761c62984431592b8726b89f2c00c", "difficulty": "3", "qtype": "short_answer", "problem": "Sam had $40$ stickers more than Peter. Sam gave $20 \\%$ of his stickers to Peter. In return, Peter gave $25 \\%$ of his stickers to Sam. In the end, Sam has $96$ stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "720.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam had 40 more stickers than Peter initially.\n    # Sam gave 20% of his stickers to Peter, and Peter gave 25% of his stickers to Sam.\n    # In the end, Sam has 96 stickers more than Peter.\n\n    # Let P be the initial number of stickers Peter had.\n    # Then, Sam had P + 40 stickers initially.\n    # After the exchange, Sam has P + 40 - 0.20*(P + 40) + 0.25*P stickers.\n    # Peter has P + 0.20*(P + 40) - 0.25*P stickers.\n    # The difference in the end is 96 stickers: (P + 40 - 0.20*(P + 40) + 0.25*P) - (P + 0.20*(P + 40) - 0.25*P) = 96.\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    # Sam's stickers after exchange\n    Sam_final = P + 40 - 0.20*(P + 40) + 0.25*P\n    # Peter's stickers after exchange\n    Peter_final = P + 0.20*(P + 40) - 0.25*P\n    # Equation based on the difference in the end\n    equation = Eq(Sam_final - Peter_final, 96)\n\n    # Solve for P\n    P_initial = solve(equation, P)[0]\n    result = P_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "3443aaa6a82a4aa1acae9f85d2a28ffe", "difficulty": "3", "qtype": "short_answer", "problem": "Jolie baked some cookies. She threw away~$\\dfrac{3}{5}$~of the cookies as they were burnt, and she sold $75 \\%$ of the remaining cookies. Given that the number of cookies she burnt was $$42$$ more than the number of cookies she sold, how many cookies did Jolie bake at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "140.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of cookies Jolie baked initially.\n    # She threw away 3/5 of the cookies because they were burnt.\n    # She sold 75% of the remaining cookies.\n    # The number of burnt cookies was 42 more than the number of cookies she sold.\n\n    # Let's denote the total number of cookies as C.\n    # Number of burnt cookies = 3/5 * C.\n    # Number of remaining cookies = 2/5 * C.\n    # Number of sold cookies = 75% of remaining cookies = 75/100 * (2/5 * C).\n    # According to the problem, burnt cookies - sold cookies = 42.\n\n    from sympy import symbols, Eq, solve\n\n    C = symbols('C')\n    burnt_cookies = 3/5 * C\n    sold_cookies = 75/100 * (2/5 * C)\n\n    # Equation based on the problem's description\n    equation = Eq(burnt_cookies - sold_cookies, 42)\n\n    # Solve for C\n    total_cookies = solve(equation, C)[0]\n    result = total_cookies.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "74c598a697fa4036ba52acb5c3dae9a8", "difficulty": "3", "qtype": "short_answer", "problem": "Sally had some cupcakes. She had 72 more chocolate cupcakes than vanilla cupcakes. She had 36 lesser blueberry cupcakes than vanilla cupcakes. After selling $\\dfrac{1}{6}$~of the chocolate cupcakes, $\\dfrac{2}{3}$~of the vanilla cupcakes and $\\dfrac{7}{9}$~of the blueberry cupcakes. Sally had 427 cupcakes left altogether. How many chocolate cupcakes did Sally sell? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "57.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find how many chocolate cupcakes Sally sold.\n    # She had 72 more chocolate cupcakes than vanilla and 36 less blueberry cupcakes than vanilla.\n    # After selling fractions of each type, she is left with 427 cupcakes altogether.\n\n    # Let V be the number of vanilla cupcakes.\n    # Then, chocolate cupcakes C = V + 72 and blueberry cupcakes B = V - 36.\n    # Sally sold 1/6 of C, 2/3 of V, and 7/9 of B.\n    # Total cupcakes after selling: 427 = C - 1/6C + V - 2/3V + B - 7/9B\n\n    from sympy import symbols, Eq, solve\n\n    V = symbols('V')\n    C = V + 72  # Chocolate cupcakes\n    B = V - 36  # Blueberry cupcakes\n\n    # Equation after selling\n    cupcakes_left = 427\n    equation = Eq(cupcakes_left, C - C/6 + V - 2*V/3 + B - 7*B/9)\n\n    # Solve for V\n    V_solution = solve(equation, V)[0]\n\n    # Calculate initial number of chocolate cupcakes\n    C_initial = C.subs(V, V_solution)\n    # Calculate how many chocolate cupcakes were sold\n    chocolate_sold = C_initial / 6\n    result = chocolate_sold.evalf()\n    return result\n```\nThis code will calculate the number of chocolate cupcakes Sally sold after selling a fraction of her cupcakes and being left with 427 cupcakes in total."]}
{"dataset_version": "2023-07-07", "queId": "a4c428257cff4445a4d9df7423135eaf", "difficulty": "3", "qtype": "short_answer", "problem": "Jeremy has the same size toy cars in his box in which 5 are red, 9 are blue and 4 are white. How many cars does he need to pick from the box without looking to e sure he will get 3 toy cars of the same colour? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules->Statistics and Probability->Questions Involving Probability->Typical Probability Problems->Picking Balls Randomly"], "answer": "7", "generation": ["```python\ndef solution():\n    # The problem is to find the minimum number of cars Jeremy needs to pick to ensure he gets 3 toy cars of the same color.\n    # Jeremy has 5 red, 9 blue, and 4 white toy cars.\n\n    # Worst-case scenario:\n    # Jeremy picks 2 red, then 2 blue, then 2 white (not getting 3 of the same color yet).\n    # With the next pick, no matter the color, he will have 3 of that color.\n\n    # Calculate the number of cars he needs to pick\n    cars_needed = 2 * 3 + 1  # 2 each of red, blue, white, and 1 more to ensure 3 of the same color\n\n    result = cars_needed\n    return result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "cc3b876c55ae46299e40246b9eafb3d1", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "720.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam had 40 more stickers than Peter initially.\n    # Sam gave 20% of his stickers to Peter, and Peter gave 25% of his stickers to Sam.\n    # In the end, Sam had 96 stickers more than Peter.\n\n    # Let P be the initial number of stickers Peter had.\n    # Then, Sam had P + 40 stickers initially.\n    # After the exchange, Sam has (P + 40) - 0.20*(P + 40) + 0.25*P stickers.\n    # Peter has P + 0.20*(P + 40) - 0.25*P stickers.\n    # The difference in the end is 96 stickers: (P + 40) - 0.20*(P + 40) + 0.25*P - (P + 0.20*(P + 40) - 0.25*P) = 96.\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    # Sam's stickers after exchange\n    Sam_final = (P + 40) - 0.20*(P + 40) + 0.25*P\n    # Peter's stickers after exchange\n    Peter_final = P + 0.20*(P + 40) - 0.25*P\n    # Equation based on the final difference\n    equation = Eq(Sam_final - Peter_final, 96)\n\n    # Solve for P\n    P_initial = solve(equation, P)[0]\n    result = P_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "938d2bcb3f644872a707547c2058d4a7", "difficulty": "3", "qtype": "short_answer", "problem": "In a class,~$\\tfrac{1}{4}$~of the students and an additional $$3$$ boys like badminton.~$\\tfrac{1}{3}$~of the remaining students in the class less $$3$$ like table tennis and the rest of the $$25$$ students in the class like football. How many students are there in the class? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "48.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of students in the class.\n    # 1/4 of the students and an additional 3 boys like badminton.\n    # 1/3 of the remaining students less 3 like table tennis.\n    # The rest of the 25 students like football.\n\n    # Let's denote the total number of students as S.\n    # Number of students who like badminton: 1/4 * S + 3\n    # Number of students remaining after badminton: S - (1/4 * S + 3)\n    # Number of students who like table tennis: 1/3 * (S - (1/4 * S + 3)) - 3\n    # Number of students who like football: 25\n\n    # We can set up an equation based on the total number of students:\n    # S = (1/4 * S + 3) + (1/3 * (S - (1/4 * S + 3)) - 3) + 25\n\n    from sympy import symbols, Eq, solve\n\n    S = symbols('S')\n    # Equation based on the problem's description\n    equation = Eq(S, (1/4 * S + 3) + (1/3 * (S - (1/4 * S + 3)) - 3) + 25)\n\n    # Solve for S\n    total_students = solve(equation, S)[0]\n    result = total_students.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "6657a223a619480aabc4ab2e4d50e627", "difficulty": "3", "qtype": "short_answer", "problem": "Sam Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "720.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Peter had.\n    # Sam had 40 more stickers than Peter initially.\n    # Sam gave 20% of his stickers to Peter, and Peter gave 25% of his stickers to Sam.\n    # In the end, Sam had 96 stickers more than Peter.\n\n    # Let P be the initial number of stickers Peter had.\n    # Then, Sam had P + 40 stickers initially.\n    # After the exchange, Sam has (P + 40) - 0.20*(P + 40) + 0.25*P stickers.\n    # Peter has P + 0.20*(P + 40) - 0.25*P stickers.\n    # The difference in the end is 96 stickers: (P + 40) - 0.20*(P + 40) + 0.25*P - (P + 0.20*(P + 40) - 0.25*P) = 96.\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    # Sam's stickers after exchange\n    Sam_final = (P + 40) - 0.20*(P + 40) + 0.25*P\n    # Peter's stickers after exchange\n    Peter_final = P + 0.20*(P + 40) - 0.25*P\n    # Equation based on the difference in the end\n    equation = Eq(Sam_final - Peter_final, 96)\n\n    # Solve for P\n    P_initial = solve(equation, P)[0]\n    result = P_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "09b093e35e3d45d0b688e30cc6a0ba76", "difficulty": "3", "qtype": "short_answer", "problem": "A rich man bought a house two years ago.  The houseing market is buoyant, and after a year the house had increased in value by 10\\%, so the value was £11,000 in the last year. In this year, the housing market slumps. The house loses 10\\% of its value.  Comparing with the original price, calculate the amount of profit or loss in this year. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-1099.9999999999854", "generation": ["```python\ndef solution():\n    # The problem is to find the profit or loss of the house compared to the original price after two years.\n    # In the first year, the house increased in value by 10%, resulting in a value increase of £11,000.\n    # In the second year, the house loses 10% of its value.\n\n    # Let's denote the original price of the house as P.\n    # After the first year, the value of the house is P + 10% of P, which is 1.1 * P.\n    # We know that 1.1 * P - P = £11,000, which means 0.1 * P = £11,000.\n    # Therefore, P = £11,000 / 0.1.\n\n    # After the second year, the house loses 10% of its value, so the new value is 0.9 * (1.1 * P).\n    # The profit or loss compared to the original price is the new value minus the original price.\n\n    # Calculate the original price P\n    P = 11000 / 0.1\n\n    # Calculate the new value after the second year\n    new_value = 0.9 * (1.1 * P)\n\n    # Calculate the profit or loss\n    profit_or_loss = new_value - P\n    result = profit_or_loss\n    return result\n\n```\nThis function will calculate the amount of profit or loss the rich man made on the house after two years, considering the 10% increase in the first year and the 10% loss in the second year."]}
{"dataset_version": "2023-07-07", "queId": "12bef96eae3c41e78b2c7c959b7cb247", "difficulty": "3", "qtype": "short_answer", "problem": "If 5\\textsuperscript{th~}May is Monday. How many Sundays are there between 5\\textsuperscript{th} May and 7\\textsuperscript{th} June? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Periodic Problems->Periodic Problems of Time->Period of Dates"], "answer": "4", "generation": ["```python\ndef solution():\n    # The problem is to find the number of Sundays between 5th May and 7th June, given that 5th May is a Monday.\n    \n    # Since 5th May is a Monday, the first Sunday after this date will be on 11th May.\n    # We need to count the number of Sundays from 11th May to 7th June inclusive.\n\n    # We can calculate the number of days between 11th May and 7th June and then divide by 7 (the number of days in a week) to find the number of Sundays.\n\n    from datetime import datetime, timedelta\n\n    # Define the start and end dates\n    start_date = datetime(2020, 5, 11)  # Year is arbitrary since we are only interested in the days of the week\n    end_date = datetime(2020, 6, 7)\n\n    # Calculate the number of days between the two dates\n    delta = end_date - start_date\n\n    # Calculate the number of Sundays\n    # We add 1 to include both the start and end dates in the count\n    number_of_sundays = delta.days // 7 + 1\n\n    result = number_of_sundays\n    return result\n\n# Note: The year is not specified in the problem, so we assume a non-leap year for the calculation.\n# The result will be the same for any year since we are only interested in the days of the week.\n```"]}
{"dataset_version": "2023-07-07", "queId": "f4fc1897652e40b78918728180071644", "difficulty": "3", "qtype": "short_answer", "problem": "If 4 construction companies can build a $$900\\rm m$$ expressway in $$5$$ days, how many days will 6 construction companies take to build a $$5400\\rm m$$ expressway? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Work Word Problems->Simple Work Word Problems"], "answer": "20.0", "generation": ["```python\ndef solution():\n    # The problem is to find out how many days 6 construction companies will take to build a 5400m expressway.\n    # Given that 4 construction companies can build a 900m expressway in 5 days.\n\n    # Let's denote the number of days 6 construction companies will take to build a 5400m expressway as D.\n\n    # The work done is directly proportional to the number of companies and inversely proportional to the number of days.\n    # Therefore, (companies1 * days1) / expressway1 = (companies2 * days2) / expressway2\n\n    # We can set up a proportion based on the given information:\n    # (4 companies * 5 days) / 900m = (6 companies * D days) / 5400m\n\n    # Solving for D:\n    companies1 = 4\n    days1 = 5\n    expressway1 = 900\n    companies2 = 6\n    expressway2 = 5400\n\n    # Cross-multiplication to find D\n    D = (companies1 * days1 * expressway2) / (companies2 * expressway1)\n\n    result = D\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code will calculate the number of days 6 construction companies will take to build a 5400m expressway based on the given proportion."]}
{"dataset_version": "2023-07-07", "queId": "a77bd217c8b244528cdb996bbf73a46b", "difficulty": "3", "qtype": "short_answer", "problem": "A packet of cookies can contain $$7$$ cookies. How many packets are needed to contain $$118$$ cookies? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "17", "generation": ["```python\ndef solution():\n    # The problem is to find out how many packets are needed to contain 118 cookies,\n    # given that each packet can contain 7 cookies.\n\n    # Let's denote the number of packets needed as N.\n    # Since each packet can contain 7 cookies, we can divide the total number of cookies by 7\n    # and round up to the nearest whole number to find the number of packets needed.\n\n    import math\n\n    # Total number of cookies\n    total_cookies = 118\n    # Number of cookies per packet\n    cookies_per_packet = 7\n\n    # Calculate the number of packets needed\n    packets_needed = math.ceil(total_cookies / cookies_per_packet)\n\n    result = packets_needed\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "32cc18556b6c45a9b298776fc2cefc3a", "difficulty": "3", "qtype": "short_answer", "problem": "Woody organised a quiz night in the toy room He asked $25$ questions.  For each correct answer you gained $4$ points.  For each incorrect answer you lost $2$ points.  For each question you did not attempt you scored $0$ points.  Rex answered all bur one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19", "generation": ["```python\ndef solution():\n    # The problem is to find the number of correct answers Rex had.\n    # There were 25 questions in total.\n    # For each correct answer, Rex gained 4 points.\n    # For each incorrect answer, Rex lost 2 points.\n    # Rex did not attempt one question and got a score of 66 points.\n\n    # Let C be the number of correct answers and I be the number of incorrect answers.\n    # Since Rex answered all but one question, the number of questions answered is 24.\n    # Therefore, C + I = 24.\n    # The total score is the number of correct answers times 4 minus the number of incorrect answers times 2.\n    # So, the score equation is 4C - 2I = 66.\n\n    # We can solve this system of equations to find the value of C.\n\n    from sympy import symbols, Eq, solve\n\n    C, I = symbols('C I')\n    # Equation based on the number of questions answered\n    questions_answered_eq = Eq(C + I, 24)\n    # Equation based on the score\n    score_eq = Eq(4*C - 2*I, 66)\n\n    # Solve the system of equations\n    solutions = solve((questions_answered_eq, score_eq), (C, I))\n\n    # Extract the number of correct answers\n    correct_answers = solutions[C]\n    result = correct_answers\n    return result\n\n```\nThis function will return the number of correct answers Rex had during the quiz night."]}
{"dataset_version": "2023-07-07", "queId": "cecb4b4d838e4a73937b529a2db06ceb", "difficulty": "3", "qtype": "short_answer", "problem": "A box could contain $$9$$ cookies. There were $$148$$ cookies. How many boxes were needed? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "17", "generation": ["```python\ndef solution():\n    # The problem is to find out how many boxes are needed to contain 148 cookies,\n    # given that each box can contain 9 cookies.\n\n    # Let's denote the number of boxes needed as B.\n    # Since each box can contain 9 cookies, we can calculate B by dividing the total number of cookies by 9.\n    # If there is a remainder, we need an additional box to contain those extra cookies.\n\n    total_cookies = 148\n    cookies_per_box = 9\n\n    # Calculate the number of full boxes needed\n    full_boxes = total_cookies // cookies_per_box\n    # Check if there are any remaining cookies that would require an additional box\n    remaining_cookies = total_cookies % cookies_per_box\n\n    # If there are remaining cookies, add one more box\n    if remaining_cookies > 0:\n        full_boxes += 1\n\n    result = full_boxes\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "6ca3b864aba0479d81b5e2d80e516196", "difficulty": "3", "qtype": "short_answer", "problem": "A rich man bought a house two years ago.  The housing market is buoyant, and after a year the house had increased in value by 10\\%, so the value was £110,000 in the last year. In this year, the housing market slumps. The house loses 10\\% of its value.  Comparing with the original price, calculate the amount of profit or loss in this year. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "-999.9999999999854", "generation": ["```python\ndef solution():\n    # The problem is to find the profit or loss of the house compared to the original price.\n    # The house increased in value by 10% in the first year, making its value £110,000.\n    # In the second year, the house loses 10% of its value.\n\n    # Let's denote the original price of the house as P.\n    # After the first year, the value increased by 10%, so P * 1.10 = £110,000.\n    # We can solve for P to find the original price.\n\n    # After the second year, the house loses 10% of its value, so the new value is 0.9 * £110,000.\n    # The profit or loss is the new value minus the original price P.\n\n    # Calculate the original price P\n    original_price = 110000 / 1.10\n\n    # Calculate the value after the second year\n    second_year_value = 0.9 * 110000\n\n    # Calculate the profit or loss\n    profit_or_loss = second_year_value - original_price\n\n    result = profit_or_loss\n    return result\n\n```"]}
{"dataset_version": "2023-07-07", "queId": "750dbb830f534f51927d1d1d3c9f04f8", "difficulty": "3", "qtype": "short_answer", "problem": "Hanson spent~$\\tfrac{1}{4}$~of his money and an additional $$$3$$ on a number of CDs. He then spent~$\\tfrac{3}{5}$~of the remaining money and an additional $$$6$$ on a number of batteries. Given that he was left with $$$24$$, how much money did Hanson have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "104.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much money Hanson had originally.\n    # He spent 1/4 of his money and an additional $3 on CDs.\n    # Then, he spent 3/5 of the remaining money and an additional $6 on batteries.\n    # He was left with $24 in the end.\n\n    # Let's denote the original sum of money as M.\n    # After spending 1/4 of M and $3 on CDs, he had 3/4 of M - $3 left.\n    # Then, he spent 3/5 of the remaining money on batteries, leaving him with 2/5 of (3/4 of M - $3) - $6.\n    # Finally, he had $24 left.\n\n    # We can set up an equation: 2/5 * (3/4 * M - $3) - $6 = $24.\n\n    from sympy import symbols, Eq, solve\n\n    M = symbols('M')\n    # Equation based on the problem's description\n    equation = Eq(2/5 * (3/4 * M - 3) - 6, 24)\n\n    # Solve for M\n    original_money = solve(equation, M)[0]\n    result = original_money.evalf()\n    return result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "976b95e20676470a955c0924996ff02d", "difficulty": "3", "qtype": "short_answer", "problem": "$$4$$ individuals pass the ball to each other and they pass it to others immediately when they catch the ball, starting from $$A$$ as the first pass, the number of different methods that after $$3$$ passes the ball returns to $$A$$ is~\\uline{~~~~~~~~~~}~. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "6", "generation": ["```python\ndef solution():\n    # The problem is to find the number of different methods that after 3 passes the ball returns to A.\n    # There are 4 individuals: A, B, C, D.\n    # A passes the ball first, and after 3 passes, it must return to A.\n    # The sequence of passes can be represented as A -> X -> Y -> A, where X and Y are any of the other 3 individuals.\n    # Since A cannot pass to himself and the ball must return to A after 3 passes, X and Y must be different individuals.\n\n    # Let's denote the individuals other than A as B, C, D.\n    # The first pass can go to any of the 3 individuals (B, C, D).\n    # The second pass can go to any of the 2 remaining individuals (not A and not the one who received the first pass).\n    # The third pass must go back to A.\n\n    # The number of different methods is the product of the choices for the first and second passes.\n\n    # Number of choices for the first pass\n    first_pass_choices = 3\n    # Number of choices for the second pass\n    second_pass_choices = 2\n\n    # Total number of different methods\n    total_methods = first_pass_choices * second_pass_choices\n    result = total_methods\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "ea7852a3c82f44b998bc40a543ec62cd", "difficulty": "3", "qtype": "short_answer", "problem": "Jeremy had a total of $$57$$ $$$5$$ notes and $$$10$$ notes. After he spent $$60$$\\% of the $$$10$$ notes and $$25$$\\% of the $$$5$$ notes on a bag, he was left with twice as many $$$10$$ notes as $$$5$$ notes. How much did the bag cost? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "285.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the cost of the bag Jeremy bought.\n    # Jeremy had a total of 57 $5 notes and $10 notes.\n    # After spending 60% of the $10 notes and 25% of the $5 notes, he had twice as many $10 notes as $5 notes.\n\n    # Let F be the number of $5 notes and T be the number of $10 notes.\n    # We have two equations:\n    # 1) F + T = 57 (total number of notes)\n    # 2) T - 0.6T = 2 * (F - 0.25F) (twice as many $10 notes as $5 notes after spending)\n\n    from sympy import symbols, Eq, solve\n\n    F, T = symbols('F T')\n    # Equation based on the total number of notes\n    total_notes_eq = Eq(F + T, 57)\n    # Equation based on the remaining notes after spending\n    remaining_notes_eq = Eq(T - 0.6 * T, 2 * (F - 0.25 * F))\n\n    # Solve the system of equations\n    solutions = solve((total_notes_eq, remaining_notes_eq), (F, T))\n\n    # Extract solutions for F and T\n    F_solution = solutions[F]\n    T_solution = solutions[T]\n\n    # Calculate the amount spent on the bag\n    # 60% of the $10 notes and 25% of the $5 notes\n    amount_spent = 0.6 * T_solution * 10 + 0.25 * F_solution * 5\n    result = amount_spent.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the cost of the bag Jeremy bought by solving a system of equations representing the number of $5 and $10 notes before and after the purchase. The result is the evaluated expression for the amount spent."]}
{"dataset_version": "2023-07-07", "queId": "a7318cfeb5c6465bbe4c97e1828d60ef", "difficulty": "3", "qtype": "short_answer", "problem": "Hanson spent~$\\tfrac{1}{4}$~of his money and an additional $$$3$$ on a number of CDs. He then spent~$\\tfrac{3}{5}$~of the remaining money and an additional $$$6$$ on a number of batteries. Given that he was left with $$$24$$, how much money did Hanson have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "104.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find out how much money Hanson had originally.\n    # He spent 1/4 of his money and an additional $3 on CDs.\n    # Then, he spent 3/5 of the remaining money and an additional $6 on batteries.\n    # He was left with $24 in the end.\n\n    # Let's denote the original sum of money as M.\n    # After spending 1/4 of his money and $3 on CDs, he had 3/4 * M - $3 left.\n    # Then, he spent 3/5 of the remaining money on batteries, leaving him with 2/5 of (3/4 * M - $3) - $6.\n    # Finally, he had $24 left.\n\n    # We can set up an equation: 2/5 * (3/4 * M - $3) - $6 = $24.\n\n    from sympy import symbols, Eq, solve\n\n    M = symbols('M')\n    # Equation based on the problem's description\n    equation = Eq(2/5 * (3/4 * M - 3) - 6, 24)\n\n    # Solve for M\n    original_money = solve(equation, M)[0]\n    result = original_money.evalf()\n    return result\n```\n\nThis code defines a function `solution()` that calculates the original amount of money Hanson had before making his purchases. It uses algebraic methods to set up an equation representing the situation described in the problem and then solves for the original sum of money `M`. The result is returned as a floating-point number."]}
{"dataset_version": "2023-07-07", "queId": "5be13676699942f49a395268e1f5d8e8", "difficulty": "3", "qtype": "short_answer", "problem": "There are three inlet pipes $A$, $B$, and $C$ in a pool. If only $A$ and $C$ are turned on, the pool can be filled from full and $18$ tons of water are from $A$. If only $B$ and $C$ are turned on, the pool can be filled from full and $27$ tons of water are from $B$. Given the flow rate of $B$ is twice that of $A$, how many tons of water can the pool be filled up with? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Work Word Problems"], "answer": "36.0000000000000", "generation": ["```python\ndef solution():\n    # Let's denote the flow rate of pipe A as a, B as 2a (since B is twice A), and C as c.\n    # The total amount of water the pool can hold is the sum of the contributions from A and C when B is off,\n    # and from B and C when A is off.\n\n    # When A and C are on, the pool is filled with a + c = 18 tons from A.\n    # When B and C are on, the pool is filled with 2a + c = 27 tons from B.\n    # We need to find the total capacity of the pool, which is a + 2a + c.\n\n    from sympy import symbols, Eq, solve\n\n    a, c = symbols('a c')\n    # Equations based on the problem's description\n    equation1 = Eq(a + c, 18)\n    equation2 = Eq(2*a + c, 27)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (a, c))\n    a_solution = solutions[a]\n    c_solution = solutions[c]\n\n    # Calculate the total capacity of the pool\n    total_capacity = a_solution + 2*a_solution + c_solution\n    result = total_capacity.evalf()\n    return result\n\n```\nThis code defines a function `solution` that sets up and solves a system of equations to find the total capacity of the pool based on the given conditions."]}
{"dataset_version": "2023-07-07", "queId": "4fbbbe33f9d643a79e9eec4d1694212f", "difficulty": "3", "qtype": "short_answer", "problem": "Woody organised a quiz night in the toy room. He asked $25$ questions.  For each correct answer you gained $4$ points.  For each incorrect answer you lost $2$ points.  For each question you did not attempt you scored $0$ points.  Rex answered all but one of the questions and got a score of $66$ points.  How many correct answers did he have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Deducting Marks"], "answer": "19", "generation": ["```python\ndef solution():\n    # The problem is to find the number of correct answers Rex had.\n    # There were 25 questions in total.\n    # For each correct answer, Rex gained 4 points.\n    # For each incorrect answer, Rex lost 2 points.\n    # For each question not attempted, Rex scored 0 points.\n    # Rex answered all but one question and got a score of 66 points.\n\n    # Let C be the number of correct answers and I be the number of incorrect answers.\n    # Since Rex answered all but one question, the number of questions not attempted is 1.\n    # The total number of questions answered by Rex is C + I = 24.\n    # The score from correct answers is 4C and the score from incorrect answers is -2I.\n    # The total score is 66 points.\n\n    # We can set up the equations:\n    # 4C - 2I = 66 (total score from correct and incorrect answers)\n    # C + I = 24 (total questions answered)\n\n    from sympy import symbols, Eq, solve\n\n    C, I = symbols('C I')\n    # Equations based on the problem's description\n    score_equation = Eq(4*C - 2*I, 66)\n    questions_answered_equation = Eq(C + I, 24)\n\n    # Solve the system of equations\n    solutions = solve((score_equation, questions_answered_equation), (C, I))\n\n    # Extract the number of correct answers\n    correct_answers = solutions[C]\n    result = correct_answers\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "99d84eff6ac64f09ab3bcfb4983bcdfc", "difficulty": "3", "qtype": "short_answer", "problem": "Let $$S\\left( n \\right)$$ denotes the sum of the digits of $$n$$ for all positive integers $$n$$.  Find the minimum value of $$m$$ if $$S\\left( m \\right)=5S\\left( m+1 \\right)$$. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "19", "generation": ["To solve this problem, we need to find the minimum value of `m` such that the sum of the digits of `m` is five times the sum of the digits of `m+1`. We can approach this problem by considering the properties of the sum of digits function and how it behaves when incrementing a number by one.\n\nWhen we increment a number by one, the sum of its digits generally increases by one, unless there is a carryover in the decimal representation. For example, incrementing 129 to 130 causes the sum of digits to decrease due to the carryover from 9 to 0 in the units place. This is the key observation we will use to find the minimum `m`.\n\nWe are looking for a situation where `S(m+1)` is significantly smaller than `S(m)` due to carryovers, specifically where `S(m)` is five times `S(m+1)`. This situation occurs when `m` ends with a number of 9's, and `m+1` results in a carryover that reduces the sum of digits drastically.\n\nLet's write a Python function to find the minimum value of `m`:\n\n```python\ndef solution():\n    # Function to calculate the sum of digits of a number\n    def sum_of_digits(n):\n        return sum(int(digit) for digit in str(n))\n\n    # Start with the smallest number that has a sum of digits (1, since 0 is not a positive integer)\n    m = 1\n    while True:\n        # Check if the sum of the digits of m is five times the sum of the digits of m+1\n        if sum_of_digits(m) == 5 * sum_of_digits(m + 1):\n            result = m\n            break\n        m += 1\n\n    return result\n\n# Call the solution function and print the result\nprint(solution())\n```\n\nThis code will iterate through positive integers starting from 1, checking the condition `S(m) == 5 * S(m+1)` until it finds the minimum `m` that satisfies the condition. The function `sum_of_digits` calculates the sum of the digits of a given number. The while loop continues until the condition is met, and then the function returns the result."]}
{"dataset_version": "2023-07-07", "queId": "a295b79b82d040ba90888d02ac50c7b7", "difficulty": "3", "qtype": "short_answer", "problem": "A year is called a Blackjack year if the sum of its digits is 21. For example, 1983 is a Blackjack year since 1+9+8+3=21. How many Blackjack years are there between 1900 and 2000? （⭐⭐⭐⭐） ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "8", "generation": ["```python\ndef solution():\n    # The task is to find the number of Blackjack years between 1900 and 2000.\n    # A year is a Blackjack year if the sum of its digits equals 21.\n\n    # The approach is to iterate through each year in the range and check if the sum of its digits is 21.\n    \n    def is_blackjack_year(year):\n        # Function to check if a year is a Blackjack year\n        return sum(int(digit) for digit in str(year)) == 21\n\n    # Count Blackjack years between 1900 and 2000\n    blackjack_years_count = 0\n    for year in range(1900, 2001):  # Include 2000 in the range\n        if is_blackjack_year(year):\n            blackjack_years_count += 1\n\n    result = blackjack_years_count\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "cd598ad9ace144b2bfb79abe93cbc606", "difficulty": "3", "qtype": "short_answer", "problem": "There is a total of $$125$$ blue and red balls in a bag.~$\\tfrac{2}{5}$~of the blue balls is equal to~$\\tfrac{3}{5}$~of the red balls. How many more blue balls than red balls are there in the bag? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "25.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the difference in the number of blue and red balls in a bag.\n    # There are a total of 125 blue and red balls.\n    # 2/5 of the blue balls is equal to 3/5 of the red balls.\n\n    # Let B be the number of blue balls and R be the number of red balls.\n    # We have two equations:\n    # 1) B + R = 125\n    # 2) (2/5) * B = (3/5) * R\n\n    from sympy import symbols, Eq, solve\n\n    B, R = symbols('B R')\n    # Equation 1: Total number of balls\n    total_balls_eq = Eq(B + R, 125)\n    # Equation 2: Relation between blue and red balls\n    blue_red_relation_eq = Eq(2 * B, 3 * R)\n\n    # Solve the system of equations\n    solutions = solve((total_balls_eq, blue_red_relation_eq), (B, R))\n\n    # Calculate the difference in the number of blue and red balls\n    blue_balls = solutions[B]\n    red_balls = solutions[R]\n    difference = blue_balls - red_balls\n    result = difference.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "904f0cdae54f4d4a9375c041f3a5ebf8", "difficulty": "3", "qtype": "short_answer", "problem": "$$4$$ individuals pass the ball to each other and they pass it to others immediately when they catch the ball, starting from A as the first pass, the number of different methods that after $$3$$ passes the ball being back to A is~\\uline{~~~~~~~~~~}~. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Counting Modules"], "answer": "6", "generation": ["```python\ndef solution():\n    # The problem is to find the number of different methods that after 3 passes the ball is back to A.\n    # There are 4 individuals, let's call them A, B, C, and D.\n    # A starts with the ball and after 3 passes it must return to A.\n    # The sequence of passes can be represented as A -> X -> Y -> A, where X and Y are any of the other 3 individuals.\n    # Since A cannot pass the ball to themselves, X and Y must be either B, C, or D.\n    # Additionally, since the ball is passed immediately, X cannot be the same as Y.\n\n    # Let's count the number of different sequences.\n    # For the first pass, A has 3 choices (B, C, or D).\n    # For the second pass, since the ball cannot be passed back to A immediately, there are 2 choices left.\n    # For the third pass, the ball must go back to A, so there is only 1 choice.\n\n    # The total number of different methods is the product of the number of choices for each pass.\n\n    first_pass_choices = 3  # A can pass to B, C, or D\n    second_pass_choices = 2  # The receiver can pass to two others, not back to A\n    third_pass_choices = 1  # The ball must go back to A\n\n    # Calculate the total number of different methods\n    total_methods = first_pass_choices * second_pass_choices * third_pass_choices\n    result = total_methods\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "b791fcccc3654f3db33c3a0ec7363553", "difficulty": "3", "qtype": "short_answer", "problem": "$$David\\textquotesingle s$$ cookies were cost thrice as much as $$Jeremy\\textquotesingle s$$ cookies. $$David$$ had only $$$0.50$$ cookies while $$Jeremy$$ had~$\\tfrac{3}{5}$~as many $$$0.50$$ cookies as $$$0.10$$ cookies. There were $$60$$ fewer $$$0.10$$ cookies than $$$0.50$$ cookies. How much were $$Jeremy\\textquotesingle s$$ cookies worth? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Chicken-Rabbit Problems->Solving Chicken-Rabbit Problems by Using Hypothesis->Basic Type->Non-typical Types"], "answer": "22.5000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the total worth of Jeremy's cookies.\n    # David's cookies cost thrice as much as Jeremy's cookies.\n    # David had only $0.50 cookies, and Jeremy had 3/5 as many $0.50 cookies as $0.10 cookies.\n    # There were 60 fewer $0.10 cookies than $0.50 cookies.\n\n    # Let's denote the number of $0.50 cookies as C_50 and the number of $0.10 cookies as C_10.\n    # According to the problem, C_10 = C_50 - 60.\n    # Jeremy had 3/5 as many $0.50 cookies as $0.10 cookies, so Jeremy's $0.50 cookies J_50 = 3/5 * C_10.\n    # The worth of Jeremy's cookies is the number of cookies multiplied by their price.\n\n    from sympy import symbols, Eq, solve\n\n    C_50 = symbols('C_50')\n    C_10 = C_50 - 60  # Number of $0.10 cookies\n    J_50 = 3/5 * C_10  # Jeremy's $0.50 cookies\n\n    # Since David's cookies cost thrice as much as Jeremy's cookies, we can write:\n    # David's $0.50 cookies worth = 3 * Jeremy's $0.50 cookies worth\n    # But we know David had only $0.50 cookies, so:\n    # David's $0.50 cookies worth = C_50 * $0.50\n    # Jeremy's $0.50 cookies worth = J_50 * $0.50\n    # Therefore, C_50 * $0.50 = 3 * (J_50 * $0.50)\n    # Simplifying, we get: C_50 = 3 * J_50\n\n    # Now we can solve for C_50 using the equation C_50 = 3 * J_50\n    equation = Eq(C_50, 3 * J_50)\n    C_50_solution = solve(equation, C_50)[0]\n\n    # Calculate the worth of Jeremy's cookies\n    jeremy_cookies_worth = J_50.subs(C_50, C_50_solution) * 0.50\n    result = jeremy_cookies_worth.evalf()\n    return result\n\n```\nNow let's run the function to get the result."]}
{"dataset_version": "2023-07-07", "queId": "8e60fa08b0204229a54c896f7f2968fa", "difficulty": "3", "qtype": "short_answer", "problem": "The ratio of number of apples to number of pears in a box was $$3 : 4$$. When $$36$$ pears were replaced by $$36$$ apples, the number of apples became $1\\frac{1}{2}$ of number of pears. How many apples were there at first?~\\uline{~~~~~~~~~~}~ ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "90", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of apples in a box.\n    # Initially, the ratio of apples to pears is 3:4.\n    # After replacing 36 pears with 36 apples, the number of apples becomes 1.5 times the number of pears.\n\n    # Let A be the initial number of apples and P be the initial number of pears.\n    # The initial ratio gives us A/P = 3/4.\n    # After replacement, the number of apples becomes A + 36 and the number of pears becomes P - 36.\n    # The new ratio is (A + 36)/(P - 36) = 1.5.\n\n    from sympy import symbols, Eq, solve\n\n    A, P = symbols('A P')\n    # Initial ratio equation\n    initial_ratio_eq = Eq(A/P, 3/4)\n    # New ratio equation after replacement\n    new_ratio_eq = Eq((A + 36)/(P - 36), 1.5)\n\n    # Solve the system of equations\n    solutions = solve((initial_ratio_eq, new_ratio_eq), (A, P))\n\n    # Extract the solution for the initial number of apples\n    initial_apples = solutions[A]\n    result = initial_apples\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "01afb46f9dd94497ab3c9968556ca7a1", "difficulty": "3", "qtype": "short_answer", "problem": "There are ten boxes labelled from $1$ to $10$,~ with a total of $425$ cookies in them. Box $1$ has $11$ cookies, and the number of cookies in each box increases by the same amount. What is the difference between the number of cookies in two adjacent boxes? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Practical Application of Arithmetic Progression"], "answer": "7", "generation": ["To solve this problem, we can use the formula for the sum of an arithmetic series. The sum of the series is given by the formula:\n\n\\[ S = \\frac{n}{2} \\times (a_1 + a_n) \\]\n\nwhere \\( S \\) is the sum of the series, \\( n \\) is the number of terms, \\( a_1 \\) is the first term, and \\( a_n \\) is the last term.\n\nIn this case, we know that \\( S = 425 \\) cookies, \\( n = 10 \\) boxes, and \\( a_1 = 11 \\) cookies. We need to find the common difference \\( d \\) between the number of cookies in two adjacent boxes.\n\nThe \\( n \\)-th term of an arithmetic series can also be expressed as:\n\n\\[ a_n = a_1 + (n - 1) \\times d \\]\n\nWe can use these two formulas to set up a system of equations and solve for \\( d \\).\n\nLet's write the code to solve for \\( d \\):\n\n```python\ndef solution():\n    # Given values\n    S = 425  # Total number of cookies\n    n = 10   # Number of boxes\n    a1 = 11  # Number of cookies in the first box\n\n    # Using the sum of arithmetic series formula: S = n/2 * (a1 + an)\n    # and the nth term formula: an = a1 + (n - 1) * d\n    # We can substitute an from the nth term formula into the sum formula to get:\n    # S = n/2 * (2*a1 + (n - 1) * d)\n\n    # Now we solve for d\n    from sympy import symbols, Eq, solve\n\n    d = symbols('d')\n    an = a1 + (n - 1) * d  # nth term formula\n    equation = Eq(S, n/2 * (a1 + an))  # Sum of arithmetic series formula\n\n    # Solve for d\n    d_solution = solve(equation, d)[0]\n    result = d_solution.evalf()\n    return result\n\n# Call the solution function and print the result\nprint(solution())\n```\n\nThis code defines a function `solution()` that calculates the common difference \\( d \\) and returns the result. The `solve()` function from the `sympy` library is used to solve the equation for \\( d \\)."]}
{"dataset_version": "2023-07-07", "queId": "f2e7d75d544640ef95f39ae11d58e429", "difficulty": "3", "qtype": "short_answer", "problem": "$\\tfrac{3}{4}$~of Chelsia\\textquotesingle s money is the same as~$\\tfrac{2}{3}$~of Benson\\textquotesingle s money. If Chelsia had $$$18$$ less than Benson, what is Chelsia and Benson\\textquotesingle s total sum of money? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "306", "generation": ["```python\ndef solution():\n    # The problem is to find the total sum of money that Chelsia and Benson have.\n    # 3/4 of Chelsia's money is the same as 2/3 of Benson's money.\n    # Chelsia had $18 less than Benson.\n\n    # Let's denote Chelsia's money as C and Benson's money as B.\n    # According to the problem, we have two equations:\n    # 1) 3/4 * C = 2/3 * B\n    # 2) C = B - 18\n\n    from sympy import symbols, Eq, solve\n\n    C, B = symbols('C B')\n    # Equation based on the problem's description\n    equation1 = Eq(3/4 * C, 2/3 * B)\n    equation2 = Eq(C, B - 18)\n\n    # Solve the system of equations\n    solutions = solve((equation1, equation2), (C, B))\n    C_solution = solutions[C]\n    B_solution = solutions[B]\n\n    # Calculate the total sum of money\n    total_sum = C_solution + B_solution\n    result = total_sum.evalf()\n    return result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "30f6b3c01a03478b9d6e70cbb8b7a3d4", "difficulty": "3", "qtype": "short_answer", "problem": "A rich man bought a house two years ago.  The houseing market is buoyant, and after a year the house had increased in value by 5\\%, so the value was £10,500 in the last year. In this year, the housing market slumps. The house loses 5\\% of its value.  Comparing with the original price, calculate the amount of profit or loss in this year. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "25.0", "generation": ["```python\ndef solution():\n    # The problem is to find the profit or loss of the house compared to the original price.\n    # The house increased in value by 5% in the first year and then lost 5% of its value in the second year.\n\n    # Let's denote the original price of the house as P.\n    # After the first year, the value increased by 5%, so the value was P * 1.05.\n    # We are given that the value was £10,500 after the first year.\n    # In the second year, the house loses 5% of its value, so the value becomes P * 1.05 * 0.95.\n\n    # We can set up an equation for the first year: P * 1.05 = £10,500.\n\n    # Solve for P to find the original price.\n    original_price_after_first_year = 10500\n    original_price = original_price_after_first_year / 1.05\n\n    # Calculate the value after the second year with a 5% loss.\n    value_after_second_year = original_price * 1.05 * 0.95\n\n    # Calculate the profit or loss by subtracting the original price from the value after the second year.\n    profit_or_loss =original_price - value_after_second_year\n\n    result = profit_or_loss\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "52bf46560c164e7bb42b6bd92f0f48a8", "difficulty": "3", "qtype": "short_answer", "problem": "In a magic show, after giving Leon, one of the audience, a calculator, the magician asks Leon to write his birthday and calculate according to the following steps:  ($1$) Leon inputs his month of birth.  ($2$) Multiply it by $$4$$.  ($3$) Add $$6$$ to the results.  ($4$) Multiply it by $$5$$.  ($5$) Subtract $$20$$ from the results.  ($6$) Multiply it by $$5$$.  ($7$) Add the number to his day of birth.  ($8$) Subtract $$50$$ from the results.  In the end, Leon gets $1126$. Do you know his birthday? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Strategies and Operations->Operational Problem"], "answer": "(0, 11)", "generation": ["```python\ndef solution():\n    # The problem is to reverse the calculation to find Leon's birthday.\n    # Leon ends up with 1126 after performing a series of arithmetic operations on his month and day of birth.\n    # We need to reverse these operations to find the original month and day.\n\n    # Let M be the month of birth and D be the day of birth.\n    # The final number is 1126, and we need to reverse the operations to find M and D.\n\n    # Reverse step (8): Add 50 to the result\n    # Reverse step (7): Subtract the day of birth from the result\n    # Reverse step (6): Divide the result by 5\n    # Reverse step (5): Add 20 to the result\n    # Reverse step (4): Divide the result by 5\n    # Reverse step (3): Subtract 6 from the result\n    # Reverse step (2): Divide the result by 4\n\n    # Perform the reverse operations\n    final_number = 1126\n    step_8 = final_number + 50\n    step_6 = step_8 // 5  # Since we're dealing with days and months, we can use integer division\n    step_5 = step_6 + 20\n    step_4 = step_5 // 5\n    step_3 = step_4 - 6\n    step_2 = step_3 // 4\n\n    # Now, step_2 should be the month of birth multiplied by 100 plus the day of birth\n    # We can extract the month and day from this number\n    M = step_2 // 100\n    D = step_2 % 100\n\n    # Leon's birthday is M (month) and D (day)\n    result = (M, D)\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "d9b27069b97d43039159301e52324136", "difficulty": "3", "qtype": "short_answer", "problem": "Student $$A$$ and Student $$B$$ both had a mathematics test. Student $$B$$ told student $$A$$ \"I scored $$50$$ points less than you in the mathematics test.\" Student A told student B \"if you gave me $$25$$ points, then my score would be $$5$$ times that of yours.\" What is the score Student $$A$$ got on the mathematics test? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Questions Involving Sum, Difference and Multiples->Problems of Difference and Multiple"], "answer": "100", "generation": ["```python\ndef solution():\n    # Let's denote the score of Student A as A and the score of Student B as B.\n    # According to the problem, we have two pieces of information:\n    # 1. B = A - 50 (Student B scored 50 points less than Student A)\n    # 2. A + 25 = 5 * (B - 25) (If Student B gave Student A 25 points, then Student A's score would be 5 times that of Student B's new score)\n\n    from sympy import symbols, Eq, solve\n\n    A, B = symbols('A B')\n    # Equation 1 based on the first piece of information\n    equation1 = Eq(B, A - 50)\n    # Equation 2 based on the second piece of information\n    equation2 = Eq(A + 25, 5 * (B - 25))\n\n    # Solve the system of equations for A and B\n    solutions = solve((equation1, equation2), (A, B))\n\n    # Extract the solution for A\n    A_score = solutions[A]\n    result = A_score.evalf()\n    return result\n\n```\nNow, let's execute the function to find the score Student A got on the mathematics test."]}
{"dataset_version": "2023-07-07", "queId": "b13b087d91c3418cab75e734f729a72f", "difficulty": "3", "qtype": "short_answer", "problem": "Rasidah had $$$48$$ less than Chai Seng. Rasidah spent~$\\tfrac{3}{5}$~of her money and Chai Seng spent~$\\tfrac{6}{7}$~of his money. In the end, Chai Seng had~$\\tfrac{1}{2}$~as much money left as Rasidah. Find the amount of money Rasidah had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "120", "generation": ["```python\ndef solution():\n    # The problem is to find the initial amount of money Rasidah had.\n    # Rasidah had $48 less than Chai Seng.\n    # Rasidah spent 3/5 of her money and Chai Seng spent 6/7 of his money.\n    # In the end, Chai Seng had 1/2 as much money left as Rasidah.\n\n    # Let R be the amount of money Rasidah had initially.\n    # Then, Chai Seng had R + $48 initially.\n    # Rasidah has 2/5 of her money left after spending.\n    # Chai Seng has 1/7 of his money left after spending.\n    # Chai Seng's remaining money is 1/2 of Rasidah's remaining money.\n\n    # We can set up an equation: 1/7 * (R + $48) = 1/2 * (2/5 * R).\n\n    from sympy import symbols, Eq, solve\n\n    R = symbols('R')\n    # Equation based on the problem's description\n    equation = Eq(1/7 * (R + 48), 1/2 * (2/5 * R))\n\n    # Solve for R\n    rasidah_initial = solve(equation, R)[0]\n    result = rasidah_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "2a6e8406868b4590b821325ac25f87f2", "difficulty": "3", "qtype": "short_answer", "problem": "$$Andy$$ had $$84$$ fewer cookies than $$Ben$$ at first. After $$Andy$$ bought~$\\tfrac{1}{3}$~more cookies and $$Ben$$ bought~$\\tfrac{1}{5}$~more cookies. $$Aandy$$ had~$\\tfrac{1}{3}$~as many cookies as $$Ben$$ in the end. How many cookies did $$Andy$$ have in the end? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "48", "generation": ["```python\ndef solution():\n    # The problem is to find how many cookies Andy had in the end.\n    # Andy had 84 fewer cookies than Ben at first.\n    # After buying 1/3 more cookies, Andy had 1/3 as many cookies as Ben.\n\n    # Let B be the number of cookies Ben had initially.\n    # Then, Andy had B - 84 cookies initially.\n    # After buying, Andy had (B - 84) + 1/3(B - 84) cookies.\n    # Ben had B + 1/5B cookies after buying.\n    # In the end, Andy had 1/3 as many cookies as Ben.\n\n    # We can set up an equation: (B - 84) + 1/3(B - 84) = 1/3(B + 1/5B).\n\n    from sympy import symbols, Eq, solve\n\n    B = symbols('B')\n    # Equation based on the problem's description\n    equation = Eq((B - 84) + 1/3 * (B - 84), 1/3 * (B + 1/5 * B))\n\n    # Solve for B\n    B_solution = solve(equation, B)[0]\n\n    # Calculate how many cookies Andy had in the end\n    Andy_end = (B_solution - 84) + 1/3 * (B_solution - 84)\n    result = Andy_end.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "4e5a3868c9c2434595c65034ace0b292", "difficulty": "3", "qtype": "short_answer", "problem": "Ellina has twelve blocks, two each of red ($R$), blue ($B$), yellow ($Y$), green ($G$), orange ($O$), and purple ($P$). Call an arrangement of blocks $even$ if there is an even number of blocks between each pair of blocks of the same color. For example, the arrangement  $R$ $B$ $B$ $Y$ $G$ $G$ $Y$ $R$ $O$ $P$ $P$ $O$  is even. Ellina arranges her blocks in a row in random order. The probability that her arrangement is even is $\\frac{m}{n}$ where $m$ and $n$ are relatively prime positive integers. Find $m+n$. (2022 AIME I Problem 9) ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "101", "generation": ["```python\ndef solution():\n    # The problem is to find the probability that a random arrangement of blocks is even.\n    # There are 2 blocks each of 6 different colors, making a total of 12 blocks.\n    # An arrangement is even if there is an even number of blocks between each pair of same-colored blocks.\n    \n    from math import factorial\n    from sympy import Rational\n\n    # Total number of arrangements of 12 blocks is 12! / (2!)^6\n    # because there are 2 identical blocks of each color.\n    total_arrangements = factorial(12) // (factorial(2) ** 6)\n\n    # To count the number of even arrangements, we can consider the positions of one pair of blocks.\n    # For example, consider the positions of the red blocks. There are 5 possible even spacings between them:\n    # 0, 2, 4, 6, or 8 other blocks in between. For each spacing, we can calculate the number of arrangements.\n    \n    # Initialize the count of even arrangements\n    even_arrangements = 0\n\n    # Iterate over the possible spacings\n    for spacing in range(0, 10, 2):  # 0, 2, 4, 6, 8 other blocks in between\n        # The number of ways to choose positions for the red blocks with the given spacing\n        positions_for_red = (11 - spacing)  # Choose the first red block, the second is fixed by spacing\n\n        # The remaining blocks (10 blocks, 5 colors) can be arranged in 10! / (2!)^5 ways\n        arrangements_for_others = factorial(10) // (factorial(2) ** 5)\n\n        # Multiply the possibilities for the red blocks with the arrangements for the other blocks\n        even_arrangements += positions_for_red * arrangements_for_others\n\n    # Calculate the probability of an even arrangement\n    probability = Rational(even_arrangements, total_arrangements)\n\n    # The probability is m/n where m and n are relatively prime positive integers\n    m = probability.numerator\n    n = probability.denominator\n\n    # The result is m + n\n    result = m + n\n    return result\n\n# Call the solution function and print the result\nprint(solution())\n```\nThis Python code defines a function `solution()` that calculates the probability of an even arrangement of blocks and returns the sum of the numerator and denominator of the simplified probability fraction. The code uses combinatorial reasoning and the `Rational` class from the `sympy` library to ensure the fraction is in its simplest form."]}
{"dataset_version": "2023-07-07", "queId": "7fc9064a1aa5469aa93c3e1bbde4bbee", "difficulty": "3", "qtype": "short_answer", "problem": "A box of cookies cost $$$6$$. How many boxes could be bought with $$$250$$? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "41", "generation": ["```python\ndef solution():\n    # The problem is to find out how many boxes of cookies can be bought with $250.\n    # Each box of cookies costs $6.\n\n    # Let's denote the number of boxes that can be bought as N.\n    # The total cost for N boxes is N * $6.\n    # We have $250 to spend.\n\n    # We can set up an equation: N * $6 = $250.\n    # Solve for N.\n\n    # Since we are dealing with whole boxes, we will use floor division to get an integer result.\n\n    total_money = 250\n    cost_per_box = 6\n\n    # Calculate the number of boxes\n    number_of_boxes = total_money // cost_per_box\n    result = number_of_boxes\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "fdb38dfc8f624402a53c64aee38c936c", "difficulty": "3", "qtype": "short_answer", "problem": "Roy and Dennis shared a sum of money totaling $$$340$$. After Roy spent~$\\tfrac{2}{3}$~of his money and Dennis spent~$\\tfrac{1}{4}$~of his money, Dennis had twice as much money left as Roy. Find the amount of money Dennis had in the end. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "120", "generation": ["```python\ndef solution():\n    # The problem is to find the amount of money Dennis had in the end.\n    # Roy and Dennis shared a sum of money totaling $340.\n    # After Roy spent 2/3 of his money and Dennis spent 1/4 of his money, Dennis had twice as much money left as Roy.\n\n    # Let's denote the amount of money Roy had initially as R and Dennis's initial amount as D.\n    # We know that R + D = $340.\n    # After spending, Roy has 1/3 of R left and Dennis has 3/4 of D left.\n    # We also know that Dennis had twice as much money left as Roy, so 3/4 * D = 2 * (1/3 * R).\n\n    # We can set up two equations based on the problem's description:\n    # Equation 1: R + D = 340\n    # Equation 2: 3/4 * D = 2 * (1/3 * R)\n\n    from sympy import symbols, Eq, solve\n\n    R, D = symbols('R D')\n    # Equation 1\n    equation1 = Eq(R + D, 340)\n    # Equation 2\n    equation2 = Eq(3/4 * D, 2 * (1/3 * R))\n\n    # Solve the system of equations\n    solution = solve((equation1, equation2), (R, D))\n\n    # Calculate the amount of money Dennis had in the end\n    D_initial = solution[D]\n    Dennis_end = 3/4 * D_initial\n    result = Dennis_end.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "615a06562ee54cbf883a97926cfa289a", "difficulty": "3", "qtype": "short_answer", "problem": "Marry had $\\frac{7}{5}$ as many stickers as Alexis.~Marry and Alexis each gave $20 \\%$ of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by $80 \\%$. If Mary had $20$ stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "500", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Alexis had.\n    # Marry had 7/5 as many stickers as Alexis.\n    # Both Marry and Alexis gave 20% of their stickers to Charlotte, resulting in an 80% increase in Charlotte's stickers.\n    # In the end, Marry had 20 stickers more than Charlotte.\n\n    # Let A be the number of stickers Alexis had initially.\n    # Then, Marry had 7/5 * A stickers initially.\n    # After giving away, Alexis has A - 0.2 * A = 0.8 * A stickers left.\n    # Marry has 7/5 * A - 0.2 * (7/5 * A) = 0.8 * (7/5 * A) stickers left.\n    # Charlotte's stickers increased by 80%, so if C is the initial number of Charlotte's stickers,\n    # then C + 0.8 * C = 1.8 * C is the final number of Charlotte's stickers.\n\n    # Marry's final stickers = Charlotte's final stickers + 20\n    # 0.8 * (7/5 * A) = 1.8 * C + 20\n\n    # Alexis and Marry gave 20% of their stickers to Charlotte, so Charlotte's final stickers are:\n    # C + 0.2 * A + 0.2 * (7/5 * A) = 1.8 * C\n    # C + 0.2 * A + 0.28 * A = 1.8 * C\n    # 0.48 * A = 0.8 * C\n    # A = (0.8 / 0.48) * C\n    # A = (5 / 3) * C\n\n    # Now we have two equations:\n    # 0.8 * (7/5 * A) = 1.8 * C + 20\n    # A = (5 / 3) * C\n\n    # We can substitute the second equation into the first to solve for C, and then find A.\n\n    from sympy import symbols, Eq, solve\n\n    A, C = symbols('A C')\n    # Equation after giving away stickers\n    equation1 = Eq(0.8 * (7/5 * A), 1.8 * C + 20)\n    # Relationship between Alexis's and Charlotte's stickers\n    equation2 = Eq(A, (5 / 3) * C)\n\n    # Solve for C using the second equation\n    C_solution = solve(equation2, C)[0]\n\n    # Substitute C in the first equation to find A\n    A_solution = solve(equation1.subs(C, C_solution), A)[0]\n\n    result = A_solution.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the initial number of stickers Alexis had based on the given problem. It uses algebraic methods to set up equations representing the relationships between the number of stickers Marry, Alexis, and Charlotte have before and after giving away a portion of their stickers. The function then solves these equations to find the initial number of stickers Alexis had and returns the result."]}
{"dataset_version": "2023-07-07", "queId": "3147e744aa374d87a759f9e0a3b9f01c", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Uncahnged Total + Backward Approach + Percentage Double Base}  Sam had 40 stickers more than Peter. Sam gave 20\\% of his stickers to Peter. In return, Peter gave 25\\% of his stickers to Sam. In the end, Sam had 96 stickers more than Peter. How many stickers did Peter have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "340", "generation": ["```python\ndef solution():\n    # Given:\n# Sam originally had 40 more stickers than Peter.\n# Sam gave 20% of his stickers to Peter.\n# Peter then gave 25% of his new total (after receiving stickers from Sam) back to Sam.\n# In the end, Sam had 96 stickers more than Peter.\n\n# Equations:\n# Initial condition: sam = peter + 40\n# Sam gives 20% of his stickers to Peter: sam_new = sam - 0.20 * sam, peter_new = peter + 0.20 * sam\n# Peter gives 25% of his new total back to Sam: peter_final = peter_new - 0.25 * peter_new, sam_final = sam_new + 0.25 * peter_new\n# Final condition: sam_final = peter_final + 96\n\n# Solving these equations\ninitial_condition = Eq(sam, peter + 40)\nsam_new = sam - 0.20 * sam\npeter_new = peter + 0.20 * sam\npeter_final = peter_new - 0.25 * peter_new\nsam_final = sam_new + 0.25 * peter_new\nfinal_condition = Eq(sam_final, peter_final + 96)\nresult = final_condition\nreturn result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "d54e6eab7a2b49a8afcd367d2c88a350", "difficulty": "3", "qtype": "short_answer", "problem": "Elvin went to a shopping mall. He spent $$ $120$$ on a chair and $$40 \\%$$ of the remainder on a jacket. He had $$30 \\%$$ of his original amount of money left after shopping. How much money did he have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "240", "generation": ["```python\ndef solution():\n    # The problem is to find out how much money Elvin had originally.\n    # He spent $120 on a chair and 40% of the remainder on a jacket.\n    # He had 30% of the original amount of money left after shopping.\n\n    # Let's denote the original sum of money as X.\n    # After spending $120 on a chair, he had X - $120 left.\n    # Then, he spent 40% of the remaining money on a jacket, leaving him with 60% of (X - $120).\n    # Finally, he had 30% of the original sum, X, left.\n\n    # We can set up an equation: 0.30 * X = 0.60 * (X - $120).\n\n    from sympy import symbols, Eq, solve\n\n    X = symbols('X')\n    # Equation based on the problem's description\n    equation = Eq(0.30 * X, 0.60 * (X - 120))\n\n    # Solve for X\n    original_sum = solve(equation, X)[0]\n    result = original_sum.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "d53e348d27d24f5f894e4c70ba210f90", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ had some cookies. When $$A$$ divided the cookies among $$3$$ friends, she had $$1$$ cookie left. When $$A$$ divided the cookies among $$4$$ friends, she had $$3$$ cookies left. When $$A$$ divided the cookies among $$5$$ friends, she had $$4$$ cookies left. What was the least number of cookies that $$A$$ had? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "19", "generation": ["```python\ndef solution():\n    # The problem is to find the least number of cookies A had.\n    # When A divided the cookies among 3 friends, she had 1 cookie left.\n    # When A divided the cookies among 4 friends, she had 3 cookies left.\n    # When A divided the cookies among 5 friends, she had 4 cookies left.\n    \n    # We are looking for the smallest number that satisfies the following conditions:\n    # The number minus 1 is divisible by 3.\n    # The number minus 3 is divisible by 4.\n    # The number minus 4 is divisible by 5.\n    \n    # We can use an iterative approach to find the smallest such number.\n    \n    # Start with the smallest number that satisfies the first condition.\n    cookies = 1\n    while True:\n        # Check if the current number of cookies satisfies all conditions.\n        if (cookies - 1) % 3 == 0 and (cookies - 3) % 4 == 0 and (cookies - 4) % 5 == 0:\n            result = cookies\n            break\n        # If not, try the next number.\n        cookies += 1\n    \n    return result\n\n# Call the function and print the result for verification\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "ab627271938f40748d9acac110c92172", "difficulty": "3", "qtype": "short_answer", "problem": "Two sisters did maths and English together. The elder sister spent $$10$$ minutes more on maths than the younger sister, while the younger sister spent $$4$$ minutes more on English. It was known that the elder sister spent a total of $$88$$ minutes on her homework, while the younger sister spent $$12$$ minutes less on her maths homework than on her English homework. How many minutes did it take the younger sister to do her English homework? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Questions Involving Sum, Difference and Multiples->Problems Involving Sum and Difference"], "answer": "43", "generation": ["```python\ndef solution():\n    # Let's denote the time the younger sister spent on English homework as E minutes.\n    # The younger sister spent E - 4 minutes on maths homework.\n    # The elder sister spent E - 4 + 10 minutes on maths homework.\n    # The elder sister spent a total of 88 minutes on both subjects.\n    # The younger sister spent E - 12 minutes on her maths homework.\n\n    # We can set up the equations based on the problem's description:\n    # Elder sister's total time: (E - 4 + 10) + (E - 4) = 88\n    # Younger sister's maths time: E - 12 = E - 4\n\n    from sympy import symbols, Eq, solve\n\n    E = symbols('E')\n    # Equation for the elder sister's total time\n    elder_total_time_equation = Eq((E - 4 + 10) + (E - 4), 88)\n    # Equation for the younger sister's maths time\n    younger_maths_time_equation = Eq(E - 12, E - 4)\n\n    # Solve the system of equations\n    solutions = solve((elder_total_time_equation, younger_maths_time_equation), E)\n\n    # Extract the solution for E, which is the time the younger sister spent on English homework\n    english_time_younger_sister = solutions[E]\n    result = english_time_younger_sister.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "d0dd7735401a440189d8289ae8ab1028", "difficulty": "3", "qtype": "short_answer", "problem": "Daniel and Patrick had an equal number of stickers at first. Daniel then gave away $$24$$ stickers to his friend Melvin, and Patrick bought another $$10$$ stickers. In the end, Patrick had twice as many stickers as Daniel. Find the number of stickers Daniel had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "58", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Daniel had.\n    # Daniel and Patrick had an equal number of stickers at first.\n    # Daniel gave away 24 stickers, and Patrick bought 10 more stickers.\n    # In the end, Patrick had twice as many stickers as Daniel.\n\n    # Let D be the initial number of stickers Daniel had.\n    # After giving away 24 stickers, Daniel has D - 24 stickers.\n    # Patrick initially had D stickers and bought 10 more, so he has D + 10 stickers.\n    # In the end, Patrick had twice as many stickers as Daniel: D + 10 = 2 * (D - 24).\n\n    from sympy import symbols, Eq, solve\n\n    D = symbols('D')\n    # Equation based on the problem's description\n    equation = Eq(D + 10, 2 * (D - 24))\n\n    # Solve for D\n    initial_stickers = solve(equation, D)[0]\n    result = initial_stickers.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "e069b4976d444e998bace1344680903f", "difficulty": "3", "qtype": "short_answer", "problem": "There are three inlet pipes $A$, $B$, and $C$ in a pool. If only $A$ and $C$ are turned on, the pool can be filled from empty and $18$ tons of water are from $A$. If only $B$ and $C$ are turned on, the pool can be filled from empty and $27$ tons of water are from $B$. Given the flow rate of $B$ is twice that of $A$, how many tons of water can the pool be filled up with? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Work Word Problems"], "answer": "36", "generation": ["```python\ndef solution():\n    # Let's denote the flow rates of the pipes A, B, and C as a, b, and c respectively.\n    # According to the problem, b = 2a.\n    # When A and C are turned on, the pool is filled with 18 tons from A.\n    # When B and C are turned on, the pool is filled with 27 tons from B.\n    \n    # Let T be the total capacity of the pool in tons.\n    # When A and C are on: a + c = T and a = 18\n    # When B and C are on: b + c = T and b = 27\n    \n    # We can set up the equations:\n    # a + c = T (1)\n    # b + c = T (2)\n    # b = 2a (3)\n    \n    # Substituting b = 2a into equation (2) gives us:\n    # 2a + c = T (4)\n    \n    # We know a = 18, so we can substitute a into equations (1) and (4) to find T:\n    # 18 + c = T (5)\n    # 2(18) + c = T (6)\n    \n    # Since both (5) and (6) equal T, we can set them equal to each other:\n    # 18 + c = 2(18) + c\n    # Solving for T:\n    T = 2 * 18  # Since c cancels out, T is simply twice the amount of water from A when A and C are on.\n    \n    result = T\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code will calculate the total capacity of the pool in tons based on the given conditions."]}
{"dataset_version": "2023-07-07", "queId": "ba1ea0471abe4147b19a80a73dee7d82", "difficulty": "3", "qtype": "short_answer", "problem": "Cindy had a total of $$55$$ pieces of $$$2$$ and $$$5$$ notes at first. She spent~$\\tfrac{1}{3}$~of the number of $$$2$$ notes and received another $$8$$ pieces of $$$5$$ notes from her father. After that, the number of $$$5$$ notes she had was~$\\tfrac{3}{7}$ of the remaining number of notes. How much money did Cindy have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Word Problems in Economics->Complex Money Word Problems"], "answer": "149", "generation": ["```python\ndef solution():\n    # The problem is to find the total amount of money Cindy had at first, given the number of $2 and $5 notes.\n    # Cindy had a total of 55 pieces of $2 and $5 notes.\n    # She spent 1/3 of the $2 notes and received another 8 pieces of $5 notes.\n    # After that, the number of $5 notes she had was 3/7 of the remaining number of notes.\n\n    # Let's denote the number of $2 notes as x and the number of $5 notes as y.\n    # Initially, x + y = 55 (total pieces of notes).\n    # After spending 1/3 of the $2 notes, she has 2/3x $2 notes left.\n    # She received 8 more $5 notes, so she has y + 8 $5 notes.\n    # After the transactions, the number of $5 notes is 3/7 of the remaining notes: y + 8 = 3/7 * (2/3x + y + 8).\n\n    from sympy import symbols, Eq, solve\n\n    x, y = symbols('x y')\n    # Initial equation based on the total number of notes\n    total_notes_eq = Eq(x + y, 55)\n\n    # Equation after spending and receiving notes\n    notes_after_transactions_eq = Eq(y + 8, 3/7 * (2/3*x + y + 8))\n\n    # Solve the system of equations\n    solutions = solve((total_notes_eq, notes_after_transactions_eq), (x, y))\n\n    # Calculate the total amount of money Cindy had at first\n    total_money = 2 * solutions[x] + 5 * solutions[y]\n    result = total_money.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code defines a function `solution()` that calculates the total amount of money Cindy had at first, based on the given conditions. It uses the `sympy` library to define symbols and equations, and to solve the system of equations. The result is then evaluated and returned."]}
{"dataset_version": "2023-07-07", "queId": "f8b94a6a82c7406a83b47ec788b92ca2", "difficulty": "3", "qtype": "short_answer", "problem": "（AMC 2020 Question \\#27）  On my chicken farm where I have 24 pens, the pens were a bit crowded. So I built 6 more pens, and the number of chickens in each pen reduced by 6. How many chickens do I have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "720", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of chickens on the farm.\n    # Initially, there are 24 pens, and after building 6 more pens (total 30 pens),\n    # the number of chickens in each pen reduced by 6.\n\n    # Let C be the total number of chickens and P be the number of chickens per pen initially.\n    # Initially, C = 24 * P\n    # After building 6 more pens, C = 30 * (P - 6)\n\n    # Since the total number of chickens doesn't change, we can set up the equation:\n    # 24 * P = 30 * (P - 6)\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    # Equation based on the problem's description\n    equation = Eq(24 * P, 30 * (P - 6))\n\n    # Solve for P\n    P_solution = solve(equation, P)[0]\n\n    # Calculate the total number of chickens\n    total_chickens = 24 * P_solution\n    result = total_chickens.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code will calculate the total number of chickens on the farm based on the given conditions."]}
{"dataset_version": "2023-07-07", "queId": "0877713fe19e4645ba3e7db233f47117", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "14", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of goats in a farm.\n    # Initially, 65% of the animals were cows and the rest were goats.\n    # When 240 more animals were added, the percentage of cows increased to 85% and the number of goats doubled.\n    \n    # Let T be the total initial number of animals.\n    # Initial number of cows C = 65% of T, and initial number of goats G = 35% of T.\n    # After adding 240 animals, total becomes T + 240.\n    # The number of goats doubles, so new number of goats = 2G.\n    # New percentage of cows = 85% of (T + 240).\n\n    # Solving for T and then finding G using these relations.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    # Initial cows and goats\n    C = 0.65 * T\n    G = 0.35 * T\n\n    # Equation after addition of animals\n    new_total = T + 240\n    new_cows = 0.85 * new_total  # 85% are now cows\n    equation = Eq(new_cows, C + 240 - 2 * G)\n\n    # Solve for T\n    T_solution = solve(equation, T)[0]\n\n    # Calculate initial number of goats\n    G_initial = G.subs(T, T_solution)\n    result = G_initial.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "37ba30f7b64a46d380cae5ff5558dd59", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Repeated Identity + Fraction as a set}  Sally had some cupcakes. She had 72 more chocolate cupcakes than vanilla cupcakes. She had 36 lesser blueberry cupcakes than vanilla cupcakes. After selling $\\dfrac{1}{6}$~of the chocolate cupcakes, $\\dfrac{2}{3}$~of the vanilla cupcakes and $\\dfrac{7}{9}$~of the blueberry cupcakes. Sally had 427 cupcakes left altogether. How many chocolate cupcakes did Sally sell? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules->Fractions"], "answer": "57", "generation": ["```python\ndef solution():\n    # The problem is to find how many chocolate cupcakes Sally sold.\n    # She had 72 more chocolate cupcakes than vanilla and 36 less blueberry cupcakes than vanilla.\n    # After selling fractions of each type, she is left with 427 cupcakes altogether.\n\n    # Let V be the number of vanilla cupcakes.\n    # Then, chocolate cupcakes C = V + 72 and blueberry cupcakes B = V - 36.\n    # Sally sold 1/6 of C, 2/3 of V, and 7/9 of B.\n    # Total cupcakes after selling: 427 = C - 1/6C + V - 2/3V + B - 7/9B\n\n    from sympy import symbols, Eq, solve\n\n    V = symbols('V')\n    C = V + 72  # Chocolate cupcakes\n    B = V - 36  # Blueberry cupcakes\n\n    # Equation after selling\n    cupcakes_left = 427\n    equation = Eq(cupcakes_left, C - C/6 + V - 2*V/3 + B - 7*B/9)\n\n    # Solve for V\n    V_solution = solve(equation, V)[0]\n\n    # Calculate initial number of chocolate cupcakes\n    C_initial = C.subs(V, V_solution)\n    # Calculate how many chocolate cupcakes were sold\n    chocolate_sold = C_initial / 6\n    result = chocolate_sold.evalf()\n    return result\n```"]}
{"dataset_version": "2023-07-07", "queId": "4bbb81d1111b4e3cbec6b7862f30f6d7", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Double Base}  Marry and Alexis had some stickers in the ratio 7 : 5. Marry and Alexis each gave 20\\% of their stickers to Charlotte. As a result, Charlotte\\textquotesingle s stickers increased by 80\\%. If Mary had 20 stickers more than Charlotte in the end, how many stickers did Alexis have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "500", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of stickers Alexis had.\n    # Marry and Alexis had stickers in the ratio 7 : 5.\n    # They each gave 20% of their stickers to Charlotte, resulting in an 80% increase in Charlotte's stickers.\n    # In the end, Mary had 20 stickers more than Charlotte.\n\n    # Let M be the initial number of stickers Marry had, and A be the initial number of stickers Alexis had.\n    # Let C be the initial number of stickers Charlotte had.\n    # The ratio of Marry's to Alexis's stickers is 7 : 5, so A = (5/7) * M.\n    # Marry and Alexis each gave 20% of their stickers to Charlotte, so Charlotte's stickers increased by 80%.\n    # This means Charlotte's final number of stickers is C + 0.2M + 0.2A = 1.8C.\n    # Marry's final number of stickers is M - 0.2M = 0.8M.\n    # Marry had 20 more stickers than Charlotte in the end, so 0.8M = 1.8C + 20.\n\n    from sympy import symbols, Eq, solve\n\n    M, C = symbols('M C')\n    # Alexis's initial stickers in terms of Marry's\n    A = (5/7) * M\n\n    # Equation for Charlotte's final stickers\n    charlotte_final = 1.8 * C\n    # Equation for Marry's final stickers\n    marry_final = 0.8 * M\n\n    # Equation based on the problem's description\n    equation = Eq(marry_final, charlotte_final + 20)\n\n    # Solve for C in terms of M\n    C_solution = solve(equation, C)[0]\n\n    # Substitute C in the equation for Charlotte's final stickers\n    charlotte_final_eq = Eq(charlotte_final, C + 0.2 * M + 0.2 * A)\n\n    # Solve for M using the equation for Charlotte's final stickers\n    M_solution = solve(charlotte_final_eq.subs(C, C_solution), M)[0]\n\n    # Calculate initial number of stickers Alexis had\n    A_initial = A.subs(M, M_solution)\n    result = A_initial.evalf()\n    return result\n\n```\nThis code defines a function `solution` that calculates the initial number of stickers Alexis had based on the given problem. It uses algebraic methods to set up equations representing the relationships between the stickers Marry, Alexis, and Charlotte had initially and after the exchange. It then solves these equations to find the initial number of stickers Alexis had."]}
{"dataset_version": "2023-07-07", "queId": "efb9468b904144138bdc171c8b89d9b7", "difficulty": "3", "qtype": "short_answer", "problem": "There were a total of $$140$$ green and blue balls in a bag. After~$\\tfrac{2}{5}$~of the blue balls and $$28$$ green balls were removed from the bag, there was an equal number of green and blue balls left in the bag. How many blue balls were there in the bag at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "70", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of blue balls in a bag.\n    # There were a total of 140 green and blue balls.\n    # After removing 2/5 of the blue balls and 28 green balls, there was an equal number of each left.\n\n    # Let G be the initial number of green balls and B be the initial number of blue balls.\n    # We know that G + B = 140.\n    # After removal, we have G - 28 green balls and B - (2/5)B blue balls left.\n    # The number of green and blue balls left is equal, so G - 28 = B - (2/5)B.\n\n    from sympy import symbols, Eq, solve\n\n    G, B = symbols('G B')\n    # Initial equation based on total balls\n    total_balls_eq = Eq(G + B, 140)\n    # Equation after removal of balls\n    balls_left_eq = Eq(G - 28, B - (2/5)*B)\n\n    # Solve the system of equations\n    solutions = solve((total_balls_eq, balls_left_eq), (G, B))\n    result = solutions[B]\n    return result\n\n```"]}
{"dataset_version": "2023-07-07", "queId": "19d5b1dcfa2c4b1bb5d7e097116869d5", "difficulty": "3", "qtype": "short_answer", "problem": "Mrs Lee had a total of $$125$$ oranges and apples. She sold half of the apples and $$35$$ oranges. In the end, she had an equal number of oranges and apples left. Find the number of oranges Mrs Lee had at first. ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "65", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of oranges Mrs. Lee had.\n    # She had a total of 125 oranges and apples.\n    # She sold half of the apples and 35 oranges.\n    # In the end, she had an equal number of oranges and apples left.\n\n    # Let O be the number of oranges and A be the number of apples initially.\n    # O + A = 125 (total number of fruits)\n    # After selling, she has O - 35 oranges and A/2 apples left.\n    # And we know that O - 35 = A/2 (equal number of oranges and apples left).\n\n    from sympy import symbols, Eq, solve\n\n    O, A = symbols('O A')\n    # Total number of fruits\n    total_fruits = Eq(O + A, 125)\n    # Equal number of oranges and apples left\n    equal_fruits = Eq(O - 35, A / 2)\n\n    # Solve the system of equations\n    solutions = solve((total_fruits, equal_fruits), (O, A))\n\n    # Extract the solution for the number of oranges\n    oranges_initial = solutions[O]\n    result = oranges_initial\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "6e22fcfa859a4c8fbb3d505818fcf090", "difficulty": "3", "qtype": "short_answer", "problem": "$$A$$ has fewer than $$90$$ cookies. If $$A$$ puts $$6$$ cookies into each box, she will have $$4$$ cookies left. If $$A$$ puts $$7$$ cookies into each box, she will be short of $$5$$ cookies. How many cookies does $$A$$ have? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "16", "generation": ["```python\ndef solution():\n    # The problem is to find the number of cookies A has, which is fewer than 90.\n    # If A puts 6 cookies into each box, she has 4 cookies left.\n    # If A puts 7 cookies into each box, she is short of 5 cookies.\n    # We can set up two equations based on the problem's description:\n    # A = 6n + 4 and A = 7m - 5, where n and m are the number of boxes in each case.\n\n    # We need to find a value for A that satisfies both conditions and is less than 90.\n\n    # Iterate through possible values of A to find the solution.\n    for A in range(1, 90):\n        if (A - 4) % 6 == 0 and (A + 5) % 7 == 0:\n            result = A\n            break\n\n    return result\n\n# Call the function and print the result\nprint(solution())\n```\nThis code defines a function `solution()` that iterates through possible values of A from 1 to 89. It checks for each value of A whether it leaves a remainder of 4 when divided by 6 and whether it leaves a remainder of 2 (since A is short of 5 cookies for complete boxes) when divided by 7. If both conditions are met, it returns the value of A."]}
{"dataset_version": "2023-07-07", "queId": "f7fe017b34bc4119bfc266aeef3024e6", "difficulty": "3", "qtype": "short_answer", "problem": "65\\%~ ~65\\% of the animals in a farm were cows and the rest were goats. When 240 more cows and goats were added to the farm, the percentage of cows increased by 20\\% and the number of goats doubled. How many goats were there in the farm at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "14.0000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of goats in a farm.\n    # Initially, 65% of the animals were cows and the rest were goats.\n    # When 240 more animals were added, the percentage of cows increased to 85% and the number of goats doubled.\n    \n    # Let T be the total initial number of animals.\n    # Initial number of cows C = 65% of T, and initial number of goats G = 35% of T.\n    # After adding 240 animals, total becomes T + 240.\n    # The number of goats doubles, so new number of goats = 2G.\n    # New percentage of cows = 85% of (T + 240).\n\n    # Solving for T and then finding G using these relations.\n\n    from sympy import symbols, Eq, solve\n\n    T = symbols('T')\n    # Initial cows and goats\n    C = 0.65 * T\n    G = 0.35 * T\n\n    # Equation after addition of animals\n    new_total = T + 240\n    new_cows = 0.85 * new_total  # 85% are now cows\n    equation = Eq(new_cows, C + 240 - 2 * G)\n\n    # Solve for T\n    T_solution = solve(equation, T)[0]\n\n    # Calculate initial number of goats\n    G_initial = G.subs(T, T_solution)\n    result = G_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "2b33ed6a37234a7f8cfa9077a2c039ba", "difficulty": "3", "qtype": "short_answer", "problem": "$$James$$ sold $$1680$$ cookies from a box of cookies in the first month and kept the rest of the cookies. $$James$$ sold~$\\tfrac{7}{20}$~more cookies from another similar box of cookies in the second month and kept the rest of the cookies. If the number of cookies $$James$$ kept decreased by~$\\tfrac{3}{20}$, how many cookies were there in the box? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Prime Factorization->Applying Prime Factorization->Equalizing products by Grouping"], "answer": "0", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of cookies in a box.\n    # James sold 1680 cookies from the first box in the first month and kept the rest.\n    # In the second month, he sold 7/20 more cookies from another similar box and kept the rest.\n    # The number of cookies James kept decreased by 3/20.\n\n    # Let's denote the total number of cookies in a box as X.\n    # In the first month, James kept X - 1680 cookies.\n    # In the second month, he sold 1680 + 7/20 * X cookies, so he kept X - (1680 + 7/20 * X).\n    # The decrease in the number of cookies James kept is 3/20 * X.\n\n    # We can set up an equation: (X - 1680) - (X - (1680 + 7/20 * X)) = 3/20 * X.\n\n    from sympy import symbols, Eq, solve\n\n    X = symbols('X')\n    # Equation based on the problem's description\n    equation = Eq((X - 1680) - (X - (1680 + 7/20 * X)), 3/20 * X)\n\n    # Solve for X\n    total_cookies = solve(equation, X)[0]\n    result = total_cookies.evalf()\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "104db66ae297441bbca8c76f5ce475ec", "difficulty": "3", "qtype": "short_answer", "problem": "Mrs Chen spent $$$36$$ on a number of plates and~$\\tfrac{3}{4}$~of the remaining money on a number of cups. If she had~$\\tfrac{1}{6}$~of the original sum of money left, how much money did she have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Number Theory Modules->Remainder Problems"], "answer": "108", "generation": ["```python\ndef solution():\n    # The problem is to find out how much money Mrs. Chen had originally.\n    # She spent $36 on plates and 3/4 of the remaining money on cups. She had 1/6 of the original money left.\n\n    # Let's denote the original sum of money as X.\n    # After spending $36 on plates, she had X - $36 left.\n    # Then, she spent 3/4 of the remaining money on cups, leaving her with 1/4 of (X - $36).\n    # Finally, she had 1/6 of the original sum, X, left.\n\n    # We can set up an equation: 1/6 * X = 1/4 * (X - $36).\n\n    from sympy import symbols, Eq, solve\n\n    X = symbols('X')\n    # Equation based on the problem's description\n    equation = Eq(1/6 * X, 1/4 * (X - 36))\n\n    # Solve for X\n    original_sum = solve(equation, X)[0]\n    result = original_sum.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "8d5bc66e7f26483e93a8178a57870366", "difficulty": "3", "qtype": "short_answer", "problem": "\\textbf{Percentage Single Base}  On the first day of an amusement park\\textquotesingle s opening, the number of male visitors was 450 more than the number of female visitors. On the second day, the number of female visitors increased by 15\\% but the number of make visitors decreased by 18\\%. The total number of visitors for the second day was 1354. How many make visitors were there on the first day? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Solving Problems Involving Fractions and Percentages->Percentages Word Problems"], "answer": "950", "generation": ["```python\ndef solution():\n    # The problem is to find the number of male visitors on the first day.\n    # On the first day, the number of male visitors was 450 more than the number of female visitors.\n    # On the second day, the number of female visitors increased by 15% and the number of male visitors decreased by 18%.\n    # The total number of visitors on the second day was 1354.\n\n    # Let F be the number of female visitors on the first day.\n    # Then, male visitors M = F + 450.\n    # On the second day, female visitors increased to F + 0.15F and male visitors decreased to M - 0.18M.\n    # Total visitors on the second day: 1354 = (F + 0.15F) + (M - 0.18M)\n\n    from sympy import symbols, Eq, solve\n\n    F = symbols('F')\n    M = F + 450  # Male visitors on the first day\n\n    # Equation for the second day\n    second_day_total = 1354\n    equation = Eq(second_day_total, (F + 0.15*F) + (M - 0.18*M))\n\n    # Solve for F\n    F_solution = solve(equation, F)[0]\n\n    # Calculate the number of male visitors on the first day\n    M_first_day = M.subs(F, F_solution)\n    result = M_first_day.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "19ee53ef309b4ac1b03a0754f950fa53", "difficulty": "3", "qtype": "short_answer", "problem": "A Badminton Club had thrice as many members as the Bowling Club. However, after $$36$$ members left the Badminton Club and $$4$$ members left the Bowling Club, the two clubs had the same number of members in the end. How many members did each of the clubs have in the end? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "12", "generation": ["```python\ndef solution():\n    # The problem is to find the number of members each club had in the end.\n    # Initially, the Badminton Club had thrice as many members as the Bowling Club.\n    # After 36 members left the Badminton Club and 4 members left the Bowling Club, both clubs had the same number of members.\n\n    # Let B be the number of members in the Bowling Club initially.\n    # Then, the Badminton Club initially had 3B members.\n    # After the members left, the Badminton Club had 3B - 36 members and the Bowling Club had B - 4 members.\n    # We set these two expressions equal to each other to find B.\n\n    from sympy import symbols, Eq, solve\n\n    B = symbols('B')\n    # Equation based on the problem's description\n    equation = Eq(3*B - 36, B - 4)\n\n    # Solve for B\n    B_solution = solve(equation, B)[0]\n\n    # Calculate the number of members each club had in the end\n    badminton_end = 3*B_solution - 36\n    bowling_end = B_solution - 4\n    result = (badminton_end, bowling_end)\n    return result\n\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "1969baf23afa40a7baf0654943977371", "difficulty": "3", "qtype": "short_answer", "problem": "If 17\\textsuperscript{th} October is Tuesday. How many Sundays are there between 17\\textsuperscript{th} October and 20\\textsuperscript{th} December? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Periodic Problems->Periodic Problems of Time->Period of Dates"], "answer": "9", "generation": ["```python\ndef solution():\n    # The problem is to find the number of Sundays between 17th October and 20th December.\n    # Given that 17th October is a Tuesday.\n\n    # We will calculate the number of days between 17th October and 20th December and then determine the number of Sundays.\n\n    from datetime import datetime, timedelta\n\n    # Define the start and end dates\n    start_date = datetime(2023, 10, 17)  # 17th October\n    end_date = datetime(2023, 12, 20)    # 20th December\n\n    # Calculate the number of days between the two dates\n    delta = end_date - start_date\n\n    # Initialize the count of Sundays\n    sundays_count = 0\n\n    # Iterate over each day between the start and end dates\n    for i in range(delta.days + 1):\n        # Check if the day is a Sunday\n        if (start_date + timedelta(days=i)).weekday() == 6:\n            sundays_count += 1\n\n    result = sundays_count\n    return result\n\n```"]}
{"dataset_version": "2023-07-07", "queId": "d5a7ecbc1d6a47828162d5c281243895", "difficulty": "3", "qtype": "short_answer", "problem": "A lady bought twice as many apple tarts than strawberry tarts. She spent an equal amount of money on each type of item. A strawberry tart cost $$$0.40$$ more than an apple tart. How many tarts did she buy altogether if she paid a total of $$$40$$? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules"], "answer": "75", "generation": ["```python\ndef solution():\n    # Define the symbols\np = symbols('p')\n\n# Given total amount spent\ntotal_spent = 40  # dollars\n\n# Equation 1: A = 2S\n# Equation 2: Ap = S(p + 0.40) and total spent on both is 40 dollars\n# Substitute A = 2S in the second equation and rearrange\n# 2Sp = S(p + 0.40)\n# Simplify the equation\neq = Eq(2 * p, p + 0.40)\n\n# Solve the equation for p (price of one apple tart)\nprice_apple_tart = solve(eq, p)[0]\n\n# Calculate the number of apple and strawberry tarts\n# Total spent on apple tarts = Total spent on strawberry tarts = 40 / 2\nnum_apple_tarts = (total_spent / 2) / price_apple_tart\nnum_strawberry_tarts = num_apple_tarts / 2\n\n# Total number of tarts bought\ntotal_tarts = num_apple_tarts + num_strawberry_tarts\nresult = total_tarts\nreturn result\n```\n"]}
{"dataset_version": "2023-07-07", "queId": "6c4a0c8fddc0483ca389ad988e693de1", "difficulty": "3", "qtype": "short_answer", "problem": "Melvin, Nelson and Oliver were playing cards.  At first Melvin started with $$40$$ cards and then he gained $$\\frac{5}{8}$$ more than his original number of cards from Nelson.  In the next round, Melvin and Nelson each lost $$\\frac{1}{4}$$ of Melvin\\textquotesingle s original number of cards to Oliver.  In the final round, Melvin gained $$\\frac{1}{8}$$ of his original number of cards from Nelson. After the final round, Melvin, Nelson and Oliver all have the same number of cards. What was the total number of cards Melvin, Nelson and Oliver had at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Word Problem Modules->Inverse Operation Problems->Inverse Operation Problems with Single Variable"], "answer": "180.0", "generation": ["```python\ndef solution():\n    # The problem is to find the total number of cards Melvin, Nelson, and Oliver had at first.\n    # Melvin started with 40 cards and gained 5/8 of his original number from Nelson.\n    # In the next round, Melvin and Nelson each lost 1/4 of Melvin's original number to Oliver.\n    # In the final round, Melvin gained 1/8 of his original number from Nelson.\n    # After the final round, all three had the same number of cards.\n\n    # Let's denote the original number of cards Melvin, Nelson, and Oliver had as M, N, and O respectively.\n    # M = 40 (Melvin's original number of cards)\n    # After the first round, Melvin has M + 5/8*M, Nelson has N - 5/8*M, and Oliver still has O.\n    # After the second round, Melvin has M + 5/8*M - 1/4*M, Nelson has N - 5/8*M - 1/4*M, and Oliver has O + 1/4*M + 1/4*M.\n    # After the final round, Melvin has M + 5/8*M - 1/4*M + 1/8*M, Nelson has N - 5/8*M - 1/4*M - 1/8*M, and Oliver has O + 1/4*M + 1/4*M.\n\n    # Since they all have the same number of cards after the final round, we can set up an equation:\n    # M + 5/8*M - 1/4*M + 1/8*M = N - 5/8*M - 1/4*M - 1/8*M = O + 1/4*M + 1/4*M\n\n    # Let's solve for N and O using the fact that all three have the same number of cards after the final round.\n\n    M = 40  # Melvin's original number of cards\n    # Melvin's final number of cards\n    Melvin_final = M + 5/8*M - 1/4*M + 1/8*M\n\n    # Since Melvin, Nelson, and Oliver have the same number of cards in the end, we can find N and O.\n    # Nelson's final number of cards is the same as Melvin's final number of cards.\n    Nelson_final = Melvin_final\n    # Oliver's final number of cards is the same as Melvin's final number of cards.\n    Oliver_final = Melvin_final\n\n    # Now we can find the original number of cards Nelson and Oliver had.\n    # N - 5/8*M - 1/4*M - 1/8*M = Nelson_final\n    N = Nelson_final + 5/8*M + 1/4*M + 1/8*M\n    # O + 1/4*M + 1/4*M = Oliver_final\n    O = Oliver_final - 1/4*M - 1/4*M\n\n    # The total number of cards they had at first is M + N + O.\n    total_cards_initially = M + N + O\n    result = total_cards_initially\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "b4a6a6d3563d489c96fe7593170152df", "difficulty": "3", "qtype": "short_answer", "problem": "Warren and Naida make a list of numbers. They start with 0, then Warren adds 20, then Naida subtracts 1, then Warren adds 19, then Naida subtracts 2.  $0,20,19,38,36,\\cdots$  This pattern continues until Warren adds 1 and Naida subtracts 20, which ends up back at 0. What is the largest number in their list? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Calculation Modules"], "answer": "110", "generation": ["```python\ndef solution():\n    # The pattern starts at 0 and alternates between Warren adding a decreasing number starting from 20\n    # and Naida subtracting an increasing number starting from 1.\n    # The sequence ends when Warren adds 1 and Naida subtracts 20, returning to 0.\n    # We need to find the largest number in this sequence.\n\n    # Initialize variables\n    warren_add = 20  # Warren starts by adding 20\n    naida_subtract = 1  # Naida starts by subtracting 1\n    current_number = 0  # Start with 0\n    largest_number = 0  # To keep track of the largest number\n\n    # Loop until Warren adds 1 (which is the last number he adds before the sequence returns to 0)\n    while warren_add > 0:\n        # Warren adds his number\n        current_number += warren_add\n        # Update the largest number if the current number is greater\n        largest_number = max(largest_number, current_number)\n        # Naida subtracts her number\n        current_number -= naida_subtract\n        # Decrease Warren's add amount and increase Naida's subtract amount for the next iteration\n        warren_add -= 1\n        naida_subtract += 1\n\n    result = largest_number\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
{"dataset_version": "2023-07-07", "queId": "2b306992899a447c8bce44df9392630c", "difficulty": "3", "qtype": "short_answer", "problem": "$$John$$ had $$180$$ more cookies than $$Peter$$. After $$John$$ sold~$\\tfrac{4}{5}$~of her cookies and $$Peter$$ sold~$\\tfrac{3}{10}$~of her cookies, $$John$$ had~$\\tfrac{1}{2}$~as many cookies as $$Peter$$ left. How many cookies did $$John$$ have at first? ", "knowledge_point_routes": ["Overseas Competition->Knowledge Point->Combinatorics->Patterns of Figures->Change of Quantity"], "answer": "420.000000000000", "generation": ["```python\ndef solution():\n    # The problem is to find the initial number of cookies John had.\n    # John had 180 more cookies than Peter.\n    # After selling fractions of their cookies, John had 1/2 as many cookies as Peter left.\n\n    # Let P be the number of cookies Peter had initially.\n    # Then, John's cookies J = P + 180.\n    # John sold 4/5 of her cookies, so she has 1/5 of J left.\n    # Peter sold 3/10 of his cookies, so he has 7/10 of P left.\n    # After selling, John has 1/2 as many cookies as Peter has left: 1/5 * J = 1/2 * 7/10 * P\n\n    from sympy import symbols, Eq, solve\n\n    P = symbols('P')\n    J = P + 180  # John's initial cookies\n\n    # Equation after selling cookies\n    equation = Eq(1/5 * J, 1/2 * 7/10 * P)\n\n    # Solve for P\n    P_solution = solve(equation, P)[0]\n\n    # Calculate initial number of cookies John had\n    J_initial = J.subs(P, P_solution)\n    result = J_initial.evalf()\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"]}
